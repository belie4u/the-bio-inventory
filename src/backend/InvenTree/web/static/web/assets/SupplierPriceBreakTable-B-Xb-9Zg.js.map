{"version":3,"file":"SupplierPriceBreakTable-B-Xb-9Zg.js","sources":["../../../../../../frontend/src/tables/purchasing/SupplierPriceBreakTable.tsx"],"sourcesContent":["import { t } from '@lingui/core/macro';\nimport { Anchor, Group, Text } from '@mantine/core';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { AddItemButton } from '@lib/components/AddItemButton';\nimport {\n  type RowAction,\n  RowDeleteAction,\n  RowEditAction\n} from '@lib/components/RowActions';\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { ModelType } from '@lib/enums/ModelType';\nimport { UserRoles } from '@lib/enums/Roles';\nimport { apiUrl } from '@lib/functions/Api';\nimport { getDetailUrl } from '@lib/functions/Navigation';\nimport type { ApiFormFieldSet } from '@lib/types/Forms';\nimport type { TableColumn } from '@lib/types/Tables';\nimport { formatCurrency } from '../../defaults/formatters';\nimport {\n  useCreateApiFormModal,\n  useDeleteApiFormModal,\n  useEditApiFormModal\n} from '../../hooks/UseForm';\nimport { useTable } from '../../hooks/UseTable';\nimport { useUserState } from '../../states/UserState';\nimport { CompanyColumn } from '../ColumnRenderers';\nimport { InvenTreeTable } from '../InvenTreeTable';\n\nexport function calculateSupplierPartUnitPrice(record: any) {\n  const pack_quantity = record?.part_detail?.pack_quantity_native ?? 1;\n  const unit_price = Number.parseFloat(record.price) / pack_quantity;\n\n  return unit_price;\n}\n\nexport function SupplierPriceBreakColumns(): TableColumn[] {\n  return [\n    {\n      accessor: 'supplier',\n      title: t`Supplier`,\n      sortable: true,\n      switchable: true,\n      render: (record: any) => (\n        <CompanyColumn company={record.supplier_detail} />\n      )\n    },\n    {\n      accessor: 'part_detail.SKU',\n      title: t`SKU`,\n      ordering: 'SKU',\n      sortable: true,\n      switchable: false,\n      render: (record: any) => {\n        return (\n          <Anchor\n            href={getDetailUrl(\n              ModelType.supplierpart,\n              record.part_detail.pk,\n              true\n            )}\n          >\n            {record.part_detail.SKU}\n          </Anchor>\n        );\n      }\n    },\n    {\n      accessor: 'quantity',\n      title: t`Quantity`,\n      sortable: true,\n      switchable: false\n    },\n    {\n      accessor: 'price',\n      title: t`Supplier Price`,\n      render: (record: any) =>\n        formatCurrency(record.price, { currency: record.price_currency }),\n      sortable: true,\n      switchable: false\n    },\n    {\n      accessor: 'unit_price',\n      ordering: 'price',\n      title: t`Unit Price`,\n      sortable: true,\n      switchable: true,\n      render: (record: any) => {\n        const units = record.part_detail?.pack_quantity;\n\n        const price = formatCurrency(calculateSupplierPartUnitPrice(record), {\n          currency: record.price_currency\n        });\n\n        return (\n          <Group justify='space-between' gap='xs' grow>\n            <Text>{price}</Text>\n            {units && <Text size='xs'>[{units}]</Text>}\n          </Group>\n        );\n      }\n    }\n  ];\n}\n\nexport default function SupplierPriceBreakTable({\n  supplierPart\n}: Readonly<{\n  supplierPart: any;\n}>) {\n  const table = useTable('supplierpricebreaks');\n\n  const user = useUserState();\n\n  const columns: TableColumn[] = useMemo(() => {\n    return SupplierPriceBreakColumns();\n  }, []);\n\n  const supplierPriceBreakFields: ApiFormFieldSet = useMemo(() => {\n    return {\n      part: {\n        hidden: false,\n        disabled: true\n      },\n      quantity: {},\n      price: {},\n      price_currency: {}\n    };\n  }, []);\n\n  const [selectedPriceBreak, setSelectedPriceBreak] = useState<number>(0);\n\n  const newPriceBreak = useCreateApiFormModal({\n    url: apiUrl(ApiEndpoints.supplier_part_pricing_list),\n    title: t`Add Price Break`,\n    fields: supplierPriceBreakFields,\n    initialData: {\n      part: supplierPart.pk,\n      price_currency: supplierPart.supplier_detail.currency\n    },\n    table: table\n  });\n\n  const editPriceBreak = useEditApiFormModal({\n    url: apiUrl(ApiEndpoints.supplier_part_pricing_list),\n    pk: selectedPriceBreak,\n    title: t`Edit Price Break`,\n    fields: supplierPriceBreakFields,\n    table: table\n  });\n\n  const deletePriceBreak = useDeleteApiFormModal({\n    url: apiUrl(ApiEndpoints.supplier_part_pricing_list),\n    pk: selectedPriceBreak,\n    title: t`Delete Price Break`,\n    table: table\n  });\n\n  const tableActions = useMemo(() => {\n    return [\n      <AddItemButton\n        key='add-price-break'\n        tooltip={t`Add Price Break`}\n        onClick={() => {\n          newPriceBreak.open();\n        }}\n        hidden={!user.hasAddRole(UserRoles.part)}\n      />\n    ];\n  }, [user]);\n\n  const rowActions = useCallback(\n    (record: any): RowAction[] => {\n      return [\n        RowEditAction({\n          hidden: !user.hasChangeRole(UserRoles.purchase_order),\n          onClick: () => {\n            setSelectedPriceBreak(record.pk);\n            editPriceBreak.open();\n          }\n        }),\n        RowDeleteAction({\n          hidden: !user.hasDeleteRole(UserRoles.purchase_order),\n          onClick: () => {\n            setSelectedPriceBreak(record.pk);\n            deletePriceBreak.open();\n          }\n        })\n      ];\n    },\n    [user]\n  );\n\n  return (\n    <>\n      {newPriceBreak.modal}\n      {editPriceBreak.modal}\n      {deletePriceBreak.modal}\n      <InvenTreeTable\n        url={apiUrl(ApiEndpoints.supplier_part_pricing_list)}\n        columns={columns}\n        tableState={table}\n        props={{\n          params: {\n            part: supplierPart.pk,\n            part_detail: true,\n            supplier_detail: true\n          },\n          tableActions: tableActions,\n          rowActions: rowActions\n        }}\n      />\n    </>\n  );\n}\n"],"names":["calculateSupplierPartUnitPrice","record","pack_quantity","part_detail","pack_quantity_native","Number","parseFloat","price","SupplierPriceBreakColumns","accessor","title","_i18n","_","id","sortable","switchable","render","CompanyColumn","supplier_detail","ordering","jsx","Anchor","getDetailUrl","ModelType","supplierpart","pk","SKU","formatCurrency","currency","price_currency","units","Group","Text","jsxs","SupplierPriceBreakTable","supplierPart","table","useTable","user","useUserState","columns","useMemo","supplierPriceBreakFields","part","hidden","disabled","quantity","selectedPriceBreak","setSelectedPriceBreak","useState","newPriceBreak","useCreateApiFormModal","url","apiUrl","ApiEndpoints","supplier_part_pricing_list","fields","initialData","editPriceBreak","useEditApiFormModal","deletePriceBreak","useDeleteApiFormModal","tableActions","AddItemButton","open","hasAddRole","UserRoles","rowActions","useCallback","RowEditAction","hasChangeRole","purchase_order","onClick","RowDeleteAction","hasDeleteRole","Fragment","modal","InvenTreeTable","params"],"mappings":"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"}