{"version":3,"file":"BuildOrderTable-mDnHMj1e.js","sources":["../../../../../../frontend/src/tables/build/BuildOrderTable.tsx"],"sourcesContent":["import { t } from '@lingui/core/macro';\nimport { useMemo } from 'react';\n\nimport { AddItemButton } from '@lib/components/AddItemButton';\nimport { ProgressBar } from '@lib/components/ProgressBar';\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { ModelType } from '@lib/enums/ModelType';\nimport { UserRoles } from '@lib/enums/Roles';\nimport { apiUrl } from '@lib/functions/Api';\nimport type { TableFilter } from '@lib/types/Filters';\nimport { RenderUser } from '../../components/render/User';\nimport { useBuildOrderFields } from '../../forms/BuildForms';\nimport { useCreateApiFormModal } from '../../hooks/UseForm';\nimport { useTable } from '../../hooks/UseTable';\nimport { useGlobalSettingsState } from '../../states/SettingsStates';\nimport { useUserState } from '../../states/UserState';\nimport {\n  BooleanColumn,\n  CreationDateColumn,\n  DateColumn,\n  DescriptionColumn,\n  PartColumn,\n  ProjectCodeColumn,\n  ReferenceColumn,\n  ResponsibleColumn,\n  StartDateColumn,\n  StatusColumn,\n  TargetDateColumn\n} from '../ColumnRenderers';\nimport {\n  AssignedToMeFilter,\n  CompletedAfterFilter,\n  CompletedBeforeFilter,\n  CreatedAfterFilter,\n  CreatedBeforeFilter,\n  HasProjectCodeFilter,\n  IncludeVariantsFilter,\n  IssuedByFilter,\n  MaxDateFilter,\n  MinDateFilter,\n  OrderStatusFilter,\n  OutstandingFilter,\n  OverdueFilter,\n  PartCategoryFilter,\n  ProjectCodeFilter,\n  ResponsibleFilter,\n  StartDateAfterFilter,\n  StartDateBeforeFilter,\n  TargetDateAfterFilter,\n  TargetDateBeforeFilter\n} from '../Filter';\nimport { InvenTreeTable } from '../InvenTreeTable';\n\n/*\n * Construct a table of build orders, according to the provided parameters\n */\nexport function BuildOrderTable({\n  partId,\n  parentBuildId,\n  salesOrderId\n}: Readonly<{\n  partId?: number;\n  parentBuildId?: number;\n  salesOrderId?: number;\n}>) {\n  const globalSettings = useGlobalSettingsState();\n  const table = useTable(!!partId ? 'buildorder-part' : 'buildorder-index');\n\n  const tableColumns = useMemo(() => {\n    return [\n      ReferenceColumn({}),\n      PartColumn({\n        switchable: false\n      }),\n      {\n        accessor: 'part_detail.IPN',\n        sortable: true,\n        switchable: true,\n        title: t`IPN`\n      },\n      {\n        accessor: 'part_detail.revision',\n        title: t`Revision`,\n        sortable: true,\n        defaultVisible: false\n      },\n      DescriptionColumn({\n        accessor: 'title',\n        sortable: false\n      }),\n      {\n        accessor: 'completed',\n        title: t`Completed`,\n        minWidth: 125,\n        sortable: true,\n        switchable: false,\n        render: (record: any) => (\n          <ProgressBar\n            progressLabel={true}\n            value={record.completed}\n            maximum={record.quantity}\n          />\n        )\n      },\n      StatusColumn({ model: ModelType.build }),\n      ProjectCodeColumn({\n        defaultVisible: false\n      }),\n      {\n        accessor: 'level',\n        sortable: true,\n        switchable: true,\n        hidden: !parentBuildId,\n        defaultVisible: false\n      },\n      {\n        accessor: 'priority',\n        sortable: true,\n        defaultVisible: false\n      },\n      BooleanColumn({\n        accessor: 'external',\n        title: t`External`,\n        sortable: true,\n        switchable: true,\n        hidden: !globalSettings.isSet('BUILDORDER_EXTERNAL_BUILDS')\n      }),\n      CreationDateColumn({\n        defaultVisible: false\n      }),\n      StartDateColumn({\n        defaultVisible: false\n      }),\n      TargetDateColumn({}),\n      DateColumn({\n        accessor: 'completion_date',\n        title: t`Completion Date`,\n        sortable: true\n      }),\n      {\n        accessor: 'issued_by',\n        sortable: true,\n        render: (record: any) => (\n          <RenderUser instance={record?.issued_by_detail} />\n        )\n      },\n      ResponsibleColumn({})\n    ];\n  }, [parentBuildId, globalSettings]);\n\n  const tableFilters: TableFilter[] = useMemo(() => {\n    const filters: TableFilter[] = [\n      OutstandingFilter(),\n      OrderStatusFilter({ model: ModelType.build }),\n      OverdueFilter(),\n      AssignedToMeFilter(),\n      MinDateFilter(),\n      MaxDateFilter(),\n      CreatedBeforeFilter(),\n      CreatedAfterFilter(),\n      TargetDateBeforeFilter(),\n      TargetDateAfterFilter(),\n      StartDateBeforeFilter(),\n      StartDateAfterFilter(),\n      {\n        name: 'has_target_date',\n        type: 'boolean',\n        label: t`Has Target Date`,\n        description: t`Show orders with a target date`\n      },\n      {\n        name: 'has_start_date',\n        type: 'boolean',\n        label: t`Has Start Date`,\n        description: t`Show orders with a start date`\n      },\n      CompletedBeforeFilter(),\n      CompletedAfterFilter(),\n      ProjectCodeFilter(),\n      HasProjectCodeFilter(),\n      IssuedByFilter(),\n      ResponsibleFilter(),\n      {\n        name: 'external',\n        label: t`External`,\n        description: t`Show external build orders`,\n        active: globalSettings.isSet('BUILDORDER_EXTERNAL_BUILDS')\n      },\n      PartCategoryFilter()\n    ];\n\n    // If we are filtering on a specific part, we can include the \"include variants\" filter\n    if (!!partId) {\n      filters.push(IncludeVariantsFilter());\n    }\n\n    return filters;\n  }, [partId, globalSettings]);\n\n  const user = useUserState();\n\n  const buildOrderFields = useBuildOrderFields({\n    create: true,\n    modalId: 'create-build-order'\n  });\n\n  const newBuild = useCreateApiFormModal({\n    url: ApiEndpoints.build_order_list,\n    title: t`Add Build Order`,\n    modalId: 'create-build-order',\n    fields: buildOrderFields,\n    initialData: {\n      part: partId,\n      sales_order: salesOrderId,\n      parent: parentBuildId\n    },\n    follow: true,\n    modelType: ModelType.build\n  });\n\n  const tableActions = useMemo(() => {\n    return [\n      <AddItemButton\n        hidden={!user.hasAddRole(UserRoles.build)}\n        tooltip={t`Add Build Order`}\n        onClick={() => newBuild.open()}\n        key='add-build-order'\n      />\n    ];\n  }, [user]);\n\n  return (\n    <>\n      {newBuild.modal}\n      <InvenTreeTable\n        url={apiUrl(ApiEndpoints.build_order_list)}\n        tableState={table}\n        columns={tableColumns}\n        props={{\n          params: {\n            part: partId,\n            ancestor: parentBuildId,\n            sales_order: salesOrderId,\n            part_detail: true\n          },\n          tableActions: tableActions,\n          tableFilters: tableFilters,\n          modelType: ModelType.build,\n          enableSelection: true,\n          enableReports: true,\n          enableDownload: true\n        }}\n      />\n    </>\n  );\n}\n"],"names":["BuildOrderTable","partId","parentBuildId","salesOrderId","globalSettings","useGlobalSettingsState","table","useTable","tableColumns","useMemo","ReferenceColumn","PartColumn","switchable","accessor","sortable","title","_i18n","_","id","defaultVisible","DescriptionColumn","minWidth","render","record","jsx","ProgressBar","completed","quantity","StatusColumn","model","ModelType","build","ProjectCodeColumn","hidden","BooleanColumn","isSet","CreationDateColumn","StartDateColumn","TargetDateColumn","DateColumn","RenderUser","issued_by_detail","ResponsibleColumn","tableFilters","filters","OutstandingFilter","OrderStatusFilter","OverdueFilter","AssignedToMeFilter","MinDateFilter","MaxDateFilter","CreatedBeforeFilter","CreatedAfterFilter","TargetDateBeforeFilter","TargetDateAfterFilter","StartDateBeforeFilter","StartDateAfterFilter","name","type","label","description","CompletedBeforeFilter","CompletedAfterFilter","ProjectCodeFilter","HasProjectCodeFilter","IssuedByFilter","ResponsibleFilter","active","PartCategoryFilter","push","IncludeVariantsFilter","user","useUserState","buildOrderFields","useBuildOrderFields","create","modalId","newBuild","useCreateApiFormModal","url","ApiEndpoints","build_order_list","fields","initialData","part","sales_order","parent","follow","modelType","tableActions","AddItemButton","hasAddRole","UserRoles","open","jsxs","Fragment","modal","InvenTreeTable","apiUrl","params","ancestor","part_detail","enableSelection","enableReports","enableDownload"],"mappings":"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"}