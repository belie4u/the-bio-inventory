{"version":3,"file":"UsePluginUIFeature-DIlTj4WA.js","sources":["../../../../../../frontend/src/hooks/UsePluginUIFeature.tsx"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport { useMemo } from 'react';\n\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { apiUrl } from '@lib/functions/Api';\nimport { api } from '../App';\nimport { useInvenTreeContext } from '../components/plugins/PluginContext';\nimport { findExternalPluginFunction } from '../components/plugins/PluginSource';\nimport type {\n  BaseUIFeature,\n  PluginUIFeatureAPIResponse,\n  PluginUIFuncWithoutInvenTreeContextType\n} from '../components/plugins/PluginUIFeatureTypes';\nimport { useGlobalSettingsState } from '../states/SettingsStates';\n\nexport function usePluginUIFeature<UIFeatureT extends BaseUIFeature>({\n  enabled = true,\n  featureType,\n  context\n}: {\n  enabled?: boolean;\n  featureType: UIFeatureT['featureType'];\n  context: UIFeatureT['requestContext'];\n}) {\n  const globalSettings = useGlobalSettingsState();\n\n  const pluginUiFeaturesEnabled: boolean = useMemo(\n    () => globalSettings.isSet('ENABLE_PLUGINS_INTERFACE'),\n    [globalSettings]\n  );\n\n  // API query to fetch initial information on available plugin panels\n  const { data: pluginData } = useQuery<\n    PluginUIFeatureAPIResponse<UIFeatureT>[]\n  >({\n    enabled: pluginUiFeaturesEnabled && !!featureType && enabled,\n    queryKey: ['custom-ui-features', featureType, JSON.stringify(context)],\n    queryFn: async () => {\n      if (!pluginUiFeaturesEnabled || !featureType) {\n        return Promise.resolve([]);\n      }\n\n      return api\n        .get(\n          apiUrl(ApiEndpoints.plugin_ui_features_list, undefined, {\n            feature_type: featureType\n          }),\n          {\n            params: context\n          }\n        )\n        .then((response: any) => response.data)\n        .catch((error: any) => {\n          console.error(\n            `ERR: Failed to fetch plugin ui features for feature \"${featureType}\":`,\n            error\n          );\n          return [];\n        });\n    }\n  });\n\n  // Cache the context data which is delivered to the plugins\n  const inventreeContext = useInvenTreeContext();\n\n  return useMemo<\n    {\n      options: UIFeatureT['responseOptions'];\n      func: PluginUIFuncWithoutInvenTreeContextType<UIFeatureT>;\n    }[]\n  >(() => {\n    return (\n      pluginData?.map((feature) => {\n        return {\n          options: {\n            ...feature\n          },\n          func: (async (featureContext) => {\n            const func = await findExternalPluginFunction(\n              feature.source,\n              'getFeature'\n            );\n            if (!func) return;\n\n            return func({\n              featureContext,\n              inventreeContext,\n              serverContext: feature.context\n            });\n          }) as PluginUIFuncWithoutInvenTreeContextType<UIFeatureT>\n        };\n      }) || []\n    );\n  }, [pluginData, inventreeContext]);\n}\n"],"names":["usePluginUIFeature","enabled","featureType","context","globalSettings","useGlobalSettingsState","pluginUiFeaturesEnabled","useMemo","isSet","data","pluginData","useQuery","queryKey","JSON","stringify","queryFn","Promise","resolve","api","get","apiUrl","ApiEndpoints","plugin_ui_features_list","undefined","feature_type","params","then","response","catch","error","console","inventreeContext","useInvenTreeContext","map","feature","options","func","featureContext","findExternalPluginFunction","source","serverContext"],"mappings":"oKAeO,SAASA,EAAqD,CACnEC,QAAAA,EAAU,GACVC,YAAAA,EACAC,QAAAA,CAKF,EAAG,CACD,MAAMC,EAAiBC,EAAAA,EAEjBC,EAAmCC,EAAAA,QACvC,IAAMH,EAAeI,MAAM,0BAA0B,EACrD,CAACJ,CAAc,CACjB,EAGM,CAAEK,KAAMC,CAAAA,EAAeC,EAE3B,CACAV,QAASK,GAA2B,CAAC,CAACJ,GAAeD,EACrDW,SAAU,CAAC,qBAAsBV,EAAaW,KAAKC,UAAUX,CAAO,CAAC,EACrEY,QAAS,SACH,CAACT,GAA2B,CAACJ,EACxBc,QAAQC,QAAQ,EAAE,EAGpBC,EACJC,IACCC,EAAOC,EAAaC,wBAAyBC,OAAW,CACtDC,aAActB,CAAAA,CACf,EACD,CACEuB,OAAQtB,CAAAA,CAEZ,EACCuB,KAAMC,GAAkBA,EAASlB,IAAI,EACrCmB,MAAOC,IACNC,QAAQD,MACN,wDAAwD3B,CAAW,KACnE2B,CACF,EACO,CAAA,EACR,CACL,CACD,EAGKE,EAAmBC,EAAAA,EAEzB,OAAOzB,EAAAA,QAKL,KAEEG,GAAAA,YAAAA,EAAYuB,IAAKC,IACR,CACLC,QAAS,CACP,GAAGD,CAAAA,EAELE,MAAO,MAAOC,GAAmB,CAC/B,MAAMD,EAAO,MAAME,EACjBJ,EAAQK,OACR,YACF,EACA,GAAKH,EAEL,OAAOA,EAAK,CACVC,eAAAA,EACAN,iBAAAA,EACAS,cAAeN,EAAQ/B,OAAAA,CACxB,CACH,EAAA,MAEE,CAAA,EAEP,CAACO,EAAYqB,CAAgB,CAAC,CACnC"}