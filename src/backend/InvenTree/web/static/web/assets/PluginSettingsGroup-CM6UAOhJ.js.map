{"version":3,"file":"PluginSettingsGroup-CM6UAOhJ.js","sources":["../../../../../../frontend/src/pages/Index/Settings/PluginSettingsGroup.tsx"],"sourcesContent":["import { ApiEndpoints } from '@lib/index';\nimport type { SettingsStateProps } from '@lib/types/Settings';\nimport { t } from '@lingui/core/macro';\nimport { Accordion, Alert, Group, Stack, Text } from '@mantine/core';\nimport { IconInfoCircle } from '@tabler/icons-react';\nimport { useCallback, useMemo, useState } from 'react';\nimport {\n  PluginSettingList,\n  PluginUserSettingList\n} from '../../../components/settings/SettingList';\nimport { useInstance } from '../../../hooks/UseInstance';\n\nfunction PluginSettingGroupItem({\n  global,\n  pluginKey,\n  pluginName,\n  pluginDescription\n}: {\n  global: boolean;\n  pluginKey: string;\n  pluginName: string;\n  pluginDescription?: string;\n}) {\n  // Hide the accordion item if there are no settings for this plugin\n  const [count, setCount] = useState<number>(0);\n\n  // Callback once the plugin settings have been loaded\n  const onLoaded = useCallback(\n    (settings: SettingsStateProps) => {\n      setCount(settings.settings?.length || 0);\n    },\n    [pluginKey]\n  );\n\n  return (\n    <Accordion.Item\n      key={`plugin-${pluginKey}`}\n      value={pluginKey}\n      hidden={count === 0}\n    >\n      <Accordion.Control>\n        <Group>\n          <Text size='lg'>{pluginName}</Text>\n          {pluginDescription && <Text size='sm'>{pluginDescription}</Text>}\n        </Group>\n      </Accordion.Control>\n      <Accordion.Panel>\n        {global ? (\n          <PluginSettingList pluginKey={pluginKey} onLoaded={onLoaded} />\n        ) : (\n          <PluginUserSettingList pluginKey={pluginKey} onLoaded={onLoaded} />\n        )}\n      </Accordion.Panel>\n    </Accordion.Item>\n  );\n}\n\n/**\n * Displays an accordion of user-specific plugin settings\n * - Each element in the accordion corresponds to a plugin\n * - Each plugin can have multiple settings\n * - If a plugin has no settings, it will not be displayed\n */\nexport default function PluginSettingsGroup({\n  mixin,\n  message,\n  global\n}: {\n  global: boolean;\n  message?: string;\n  mixin?: string;\n}) {\n  const mixins: string = useMemo(() => {\n    const mixinList: string[] = ['settings'];\n\n    if (mixin) {\n      mixinList.push(mixin);\n    }\n\n    return mixinList.join(',');\n  }, [mixin]);\n\n  // All *active* plugins which require settings\n  const activePlugins = useInstance({\n    endpoint: ApiEndpoints.plugin_list,\n    params: {\n      active: true,\n      mixin: mixins\n    },\n    hasPrimaryKey: false,\n    defaultValue: []\n  });\n\n  return (\n    <Stack gap='xs'>\n      <Alert color='blue' icon={<IconInfoCircle />}>\n        <Text>\n          {message ??\n            t`The settings below are specific to each available plugin`}\n        </Text>\n      </Alert>\n      <Accordion multiple>\n        {activePlugins.instance?.map((plugin: any) => {\n          return (\n            <PluginSettingGroupItem\n              global={global}\n              key={plugin.key}\n              pluginKey={plugin.key}\n              pluginName={plugin.meta?.human_name ?? plugin.name}\n              pluginDescription={plugin?.meta?.description}\n            />\n          );\n        })}\n      </Accordion>\n    </Stack>\n  );\n}\n"],"names":["PluginSettingGroupItem","global","pluginKey","pluginName","pluginDescription","count","setCount","useState","onLoaded","useCallback","settings","length","jsxs","Accordion","jsx","Group","Text","PluginSettingList","PluginUserSettingList","PluginSettingsGroup","mixin","message","mixins","useMemo","mixinList","push","join","activePlugins","useInstance","endpoint","ApiEndpoints","plugin_list","params","active","hasPrimaryKey","defaultValue","Stack","Alert","IconInfoCircle","_i18n","_","id","instance","map","plugin","key","meta","human_name","name","description"],"mappings":"wXAYA,SAASA,EAAuB,CAC9BC,OAAAA,EACAC,UAAAA,EACAC,WAAAA,EACAC,kBAAAA,CAMF,EAAG,CAED,KAAM,CAACC,EAAOC,CAAQ,EAAIC,EAAAA,SAAiB,CAAC,EAGtCC,EAAWC,cACdC,GAAiC,OAChCJ,IAASI,EAAAA,EAASA,WAATA,YAAAA,EAAmBC,SAAU,CAAC,CACzC,EACA,CAACT,CAAS,CACZ,EAEA,OACEU,EAAAA,KAACC,EAAU,KAAV,CAEC,MAAOX,EACP,OAAQG,IAAU,EAElB,SAAA,CAAAS,EAAAA,IAACD,EAAU,QAAV,CACC,SAAAD,OAACG,EAAA,CACC,SAAA,CAAAD,EAAAA,IAACE,EAAA,CAAK,KAAK,KAAMb,SAAAA,EAAW,EAC3BC,GAAqBU,EAAAA,IAACE,EAAA,CAAK,KAAK,KAAMZ,SAAAA,CAAAA,CAAkB,CAAA,CAAA,CAC3D,CAAA,CACF,EACAU,EAAAA,IAACD,EAAU,MAAV,CACEZ,WACCa,EAAAA,IAACG,EAAA,CAAkB,UAAAf,EAAsB,SAAAM,CAAA,CAAmB,EAE5DM,MAACI,EAAA,CAAsB,UAAAhB,EAAsB,SAAAM,EAAmB,CAAA,CAEpE,CAAA,CAAA,EAhBK,UAAUN,CAAS,EAiB1B,CAEJ,CAQA,SAAwBiB,EAAoB,CAC1CC,MAAAA,EACAC,QAAAA,EACApB,OAAAA,CAKF,EAAG,OACD,MAAMqB,EAAiBC,EAAAA,QAAQ,IAAM,CACnC,MAAMC,EAAsB,CAAC,UAAU,EAEvC,OAAIJ,GACFI,EAAUC,KAAKL,CAAK,EAGfI,EAAUE,KAAK,GAAG,CAC3B,EAAG,CAACN,CAAK,CAAC,EAGJO,EAAgBC,EAAY,CAChCC,SAAUC,EAAaC,YACvBC,OAAQ,CACNC,OAAQ,GACRb,MAAOE,CAAAA,EAETY,cAAe,GACfC,aAAc,CAAA,CAAA,CACf,EAED,OACEvB,EAAAA,KAACwB,EAAA,CAAM,IAAI,KACT,SAAA,CAAAtB,EAAAA,IAACuB,EAAA,CAAM,MAAM,OAAO,KAAMvB,EAAAA,IAACwB,MACzB,SAAAxB,EAAAA,IAACE,EAAA,CACEK,SAAAA,GAAOkB,EAAAC,EACN,CAAAC,GAAA,QAAA,CAA0D,EAC9D,CAAA,CACF,EACA3B,MAACD,GAAU,SAAQ,GAChBc,cAAce,yBAAUC,IAAKC,GAAgB,SAC5C,aACG5C,EAAA,CACC,OAAAC,EAEA,UAAW2C,EAAOC,IAClB,aAAYD,EAAAA,EAAOE,OAAPF,YAAAA,EAAaG,aAAcH,EAAOI,KAC9C,mBAAmBJ,EAAAA,GAAAA,YAAAA,EAAQE,OAARF,YAAAA,EAAcK,WAAAA,EAH5BL,EAAOC,GAGiC,CAGnD,EAAC,CACH,CAAA,EACF,CAEJ"}