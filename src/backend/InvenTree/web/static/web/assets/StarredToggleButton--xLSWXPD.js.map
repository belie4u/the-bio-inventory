{"version":3,"file":"StarredToggleButton--xLSWXPD.js","sources":["../../../../../../frontend/src/components/buttons/StarredToggleButton.tsx"],"sourcesContent":["import { ActionButton } from '@lib/components/ActionButton';\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { ModelType } from '@lib/enums/ModelType';\nimport { apiUrl } from '@lib/functions/Api';\nimport { t } from '@lingui/core/macro';\nimport { hideNotification, showNotification } from '@mantine/notifications';\nimport { IconBell } from '@tabler/icons-react';\nimport type { JSX } from 'react';\nimport { useApi } from '../../contexts/ApiContext';\n\nexport default function StarredToggleButton({\n  instance,\n  model,\n  successFunction\n}: Readonly<{\n  instance: any;\n  model: ModelType.part | ModelType.partcategory;\n  successFunction: () => void;\n}>): JSX.Element {\n  const api = useApi();\n\n  function change(starred: boolean, partPk: number) {\n    api\n      .patch(\n        apiUrl(\n          model == ModelType.part\n            ? ApiEndpoints.part_list\n            : ApiEndpoints.category_list,\n          partPk\n        ),\n        { starred: !starred }\n      )\n      .then(() => {\n        hideNotification('subscription-update');\n        showNotification({\n          title: t`Subscription Updated`,\n          id: 'subscription-update',\n          message: `Subscription ${starred ? 'removed' : 'added'}`,\n          autoClose: 5000,\n          color: 'blue'\n        });\n        successFunction();\n      })\n      .catch((error) => {\n        showNotification({\n          title: 'Error',\n          message: error.message,\n          autoClose: 5000,\n          color: 'red'\n        });\n      });\n  }\n\n  if (!instance || !instance.pk) {\n    return <></>;\n  }\n\n  return (\n    <ActionButton\n      icon={<IconBell />}\n      color={instance.starred ? 'green' : 'blue'}\n      size='lg'\n      variant={instance.starred ? 'filled' : 'outline'}\n      tooltip={\n        instance.starred\n          ? t`Unsubscribe from notifications`\n          : t`Subscribe to notifications`\n      }\n      onClick={() => change(instance.starred, instance.pk)}\n      tooltipAlignment='bottom'\n    />\n  );\n}\n"],"names":["StarredToggleButton","instance","model","successFunction","api","useApi","change","starred","partPk","patch","apiUrl","ModelType","part","ApiEndpoints","part_list","category_list","then","hideNotification","showNotification","title","_i18n","_","id","message","autoClose","color","catch","error","pk","jsx","Fragment","ActionButton","IconBell"],"mappings":"4NAUA,SAAwBA,EAAoB,CAC1CC,SAAAA,EACAC,MAAAA,EACAC,gBAAAA,CAKD,EAAgB,CACf,MAAMC,EAAMC,EAAAA,EAEZ,SAASC,EAAOC,EAAkBC,EAAgB,CAChDJ,EACGK,MACCC,EACER,GAASS,EAAUC,KACfC,EAAaC,UACbD,EAAaE,cACjBP,CACF,EACA,CAAED,QAAS,CAACA,CAAAA,CACd,EACCS,KAAK,IAAM,CACVC,EAAiB,qBAAqB,EACtCC,EAAiB,CACfC,MAAKC,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAsB,EAC7BA,GAAI,sBACJC,QAAS,gBAAgBhB,EAAU,UAAY,OAAO,GACtDiB,UAAW,IACXC,MAAO,MAAA,CACR,EACDtB,EAAAA,CACF,CAAC,EACAuB,MAAOC,GAAU,CAChBT,EAAiB,CACfC,MAAO,QACPI,QAASI,EAAMJ,QACfC,UAAW,IACXC,MAAO,KAAA,CACR,CACH,CAAC,CACL,CAEA,MAAI,CAACxB,GAAY,CAACA,EAAS2B,GAClBC,EAAAA,IAAAC,EAAAA,SAAA,EAAE,EAITD,MAACE,GACC,KAAMF,EAAAA,IAACG,IAAQ,EACf,MAAO/B,EAASM,QAAU,QAAU,OACpC,KAAK,KACL,QAASN,EAASM,QAAU,SAAW,UACvC,QACEN,EAASM,QAAOa,EAAAC,EACZ,CAAAC,GAAA,QAAA,CAAgC,EAACF,EAAAC,EACjC,CAAAC,GAAA,QAAA,CAA4B,EAElC,QAAS,IAAMhB,EAAOL,EAASM,QAASN,EAAS2B,EAAE,EACnD,iBAAiB,SAAQ,CAG/B"}