{"version":3,"file":"BuildAllocatedStockTable-fogunTVD.js","sources":["../../../../../../frontend/src/tables/build/BuildAllocatedStockTable.tsx"],"sourcesContent":["import { t } from '@lingui/core/macro';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport {\n  type RowAction,\n  RowDeleteAction,\n  RowEditAction\n} from '@lib/components/RowActions';\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { ModelType } from '@lib/enums/ModelType';\nimport { UserRoles } from '@lib/enums/Roles';\nimport { apiUrl } from '@lib/functions/Api';\nimport { ActionButton } from '@lib/index';\nimport type { TableFilter } from '@lib/types/Filters';\nimport type { TableColumn } from '@lib/types/Tables';\nimport { IconCircleDashedCheck } from '@tabler/icons-react';\nimport { useConsumeBuildItemsForm } from '../../forms/BuildForms';\nimport type { StockOperationProps } from '../../forms/StockForms';\nimport {\n  useDeleteApiFormModal,\n  useEditApiFormModal\n} from '../../hooks/UseForm';\nimport { useStockAdjustActions } from '../../hooks/UseStockAdjustActions';\nimport { useTable } from '../../hooks/UseTable';\nimport { useUserState } from '../../states/UserState';\nimport {\n  DecimalColumn,\n  LocationColumn,\n  PartColumn,\n  ReferenceColumn,\n  StatusColumn\n} from '../ColumnRenderers';\nimport { IncludeVariantsFilter, StockLocationFilter } from '../Filter';\nimport { InvenTreeTable } from '../InvenTreeTable';\n\n/**\n * Render a table of allocated stock for a build.\n */\nexport default function BuildAllocatedStockTable({\n  buildId,\n  stockId,\n  partId,\n  showBuildInfo,\n  showPartInfo,\n  allowEdit,\n  modelTarget,\n  modelField\n}: Readonly<{\n  buildId?: number;\n  stockId?: number;\n  partId?: number;\n  showPartInfo?: boolean;\n  showBuildInfo?: boolean;\n  allowEdit?: boolean;\n  modelTarget?: ModelType;\n  modelField?: string;\n}>) {\n  const user = useUserState();\n  const table = useTable(\n    !!partId ? 'buildallocatedstock-part' : 'buildallocatedstock'\n  );\n\n  const tableFilters: TableFilter[] = useMemo(() => {\n    const filters: TableFilter[] = [\n      {\n        name: 'tracked',\n        label: t`Allocated to Output`,\n        description: t`Show items allocated to a build output`\n      }\n    ];\n\n    if (!!partId) {\n      filters.push(IncludeVariantsFilter());\n    }\n\n    filters.push(StockLocationFilter());\n\n    return filters;\n  }, [partId]);\n\n  const tableColumns: TableColumn[] = useMemo(() => {\n    return [\n      ReferenceColumn({\n        accessor: 'build_detail.reference',\n        title: t`Build Order`,\n        switchable: false,\n        hidden: showBuildInfo != true\n      }),\n      {\n        accessor: 'build_detail.title',\n        title: t`Description`,\n        hidden: showBuildInfo != true\n      },\n      StatusColumn({\n        accessor: 'build_detail.status',\n        model: ModelType.build,\n        title: t`Order Status`,\n        hidden: showBuildInfo != true\n      }),\n      PartColumn({\n        hidden: !showPartInfo,\n        switchable: false\n      }),\n      {\n        accessor: 'part_detail.IPN',\n        ordering: 'IPN',\n        hidden: !showPartInfo,\n        title: t`IPN`,\n        sortable: true,\n        switchable: true\n      },\n      {\n        hidden: !showPartInfo,\n        accessor: 'bom_reference',\n        title: t`Reference`,\n        sortable: true,\n        switchable: true\n      },\n      {\n        accessor: 'serial',\n        title: t`Serial Number`,\n        sortable: false,\n        switchable: true,\n        render: (record: any) => record?.stock_item_detail?.serial\n      },\n      {\n        accessor: 'batch',\n        title: t`Batch Code`,\n        sortable: false,\n        switchable: true,\n        render: (record: any) => record?.stock_item_detail?.batch\n      },\n      DecimalColumn({\n        accessor: 'available',\n        title: t`Available`\n      }),\n      DecimalColumn({\n        accessor: 'quantity',\n        title: t`Allocated`,\n        sortable: true,\n        switchable: false\n      }),\n      LocationColumn({\n        accessor: 'location_detail',\n        switchable: true,\n        sortable: true\n      }),\n      {\n        accessor: 'install_into',\n        title: t`Build Output`,\n        sortable: true\n      },\n      {\n        accessor: 'sku',\n        title: t`Supplier Part`,\n        render: (record: any) => record?.supplier_part_detail?.SKU,\n        sortable: true\n      }\n    ];\n  }, []);\n\n  const [selectedItemId, setSelectedItemId] = useState<number>(0);\n\n  const editItem = useEditApiFormModal({\n    pk: selectedItemId,\n    url: ApiEndpoints.build_item_list,\n    title: t`Edit Stock Allocation`,\n    fields: {\n      stock_item: {\n        disabled: true\n      },\n      quantity: {}\n    },\n    table: table\n  });\n\n  const deleteItem = useDeleteApiFormModal({\n    pk: selectedItemId,\n    url: ApiEndpoints.build_item_list,\n    title: t`Delete Stock Allocation`,\n    table: table\n  });\n\n  const [selectedItems, setSelectedItems] = useState<any[]>([]);\n\n  const itemsToConsume = useMemo(() => {\n    return selectedItems.filter((item) => !item.part_detail?.trackable);\n  }, [selectedItems]);\n\n  const consumeStock = useConsumeBuildItemsForm({\n    buildId: buildId ?? 0,\n    allocatedItems: itemsToConsume,\n    onFormSuccess: () => {\n      table.clearSelectedRecords();\n      table.refreshTable();\n    }\n  });\n\n  const stockOperationProps: StockOperationProps = useMemo(() => {\n    // Extract stock items from the selected records\n    // Note that the table is actually a list of BuildItem instances,\n    // so we need to reconstruct the stock item details\n    const stockItems: any[] = table.selectedRecords\n      .filter((item: any) => !!item.stock_item_detail)\n      .map((item: any) => {\n        return {\n          ...item.stock_item_detail,\n          part_detail: item.part_detail,\n          location_detail: item.location_detail\n        };\n      });\n\n    return {\n      items: stockItems,\n      model: ModelType.stockitem,\n      refresh: table.refreshTable\n    };\n  }, [table.selectedRecords, table.refreshTable]);\n\n  const stockAdjustActions = useStockAdjustActions({\n    formProps: stockOperationProps,\n    merge: false,\n    assign: false,\n    delete: false,\n    add: false,\n    count: false,\n    remove: false\n  });\n\n  const rowActions = useCallback(\n    (record: any): RowAction[] => {\n      const part = record.part_detail ?? {};\n      const trackable: boolean = part?.trackable ?? false;\n\n      return [\n        {\n          color: 'green',\n          icon: <IconCircleDashedCheck />,\n          title: t`Consume`,\n          tooltip: t`Consume Stock`,\n          hidden: !buildId || trackable || !user.hasChangeRole(UserRoles.build),\n          onClick: () => {\n            setSelectedItems([record]);\n            consumeStock.open();\n          }\n        },\n        RowEditAction({\n          hidden: !user.hasChangeRole(UserRoles.build),\n          onClick: () => {\n            setSelectedItemId(record.pk);\n            editItem.open();\n          }\n        }),\n        RowDeleteAction({\n          hidden: !user.hasDeleteRole(UserRoles.build),\n          onClick: () => {\n            setSelectedItemId(record.pk);\n            deleteItem.open();\n          }\n        })\n      ];\n    },\n    [user]\n  );\n\n  const tableActions = useMemo(() => {\n    return [\n      stockAdjustActions.dropdown,\n      <ActionButton\n        key='consume-stock'\n        icon={<IconCircleDashedCheck />}\n        tooltip={t`Consume Stock`}\n        hidden={!user.hasChangeRole(UserRoles.build)}\n        disabled={table.selectedRecords.length == 0}\n        color='green'\n        onClick={() => {\n          setSelectedItems(table.selectedRecords);\n          consumeStock.open();\n        }}\n      />\n    ];\n  }, [user, table.selectedRecords, stockAdjustActions.dropdown]);\n\n  return (\n    <>\n      {editItem.modal}\n      {deleteItem.modal}\n      {consumeStock.modal}\n      {stockAdjustActions.modals.map((modal) => modal.modal)}\n      <InvenTreeTable\n        tableState={table}\n        url={apiUrl(ApiEndpoints.build_item_list)}\n        columns={tableColumns}\n        props={{\n          params: {\n            build: buildId,\n            part: partId,\n            stock_item: stockId,\n            build_detail: showBuildInfo ?? false,\n            part_detail: showPartInfo ?? false,\n            location_detail: true,\n            stock_detail: true,\n            supplier_detail: true\n          },\n          enableBulkDelete: allowEdit && user.hasDeleteRole(UserRoles.build),\n          enableDownload: true,\n          enableSelection: allowEdit && user.hasDeleteRole(UserRoles.build),\n          rowActions: rowActions,\n          tableActions: tableActions,\n          tableFilters: tableFilters,\n          enableLabels: true,\n          enableReports: true,\n          printingAccessor: 'stock_item',\n          modelField: modelField ?? 'stock_item',\n          modelType: modelTarget ?? ModelType.stockitem\n        }}\n      />\n    </>\n  );\n}\n"],"names":["BuildAllocatedStockTable","buildId","stockId","partId","showBuildInfo","showPartInfo","allowEdit","modelTarget","modelField","user","useUserState","table","useTable","tableFilters","useMemo","filters","name","label","_i18n","_","id","description","push","IncludeVariantsFilter","StockLocationFilter","tableColumns","ReferenceColumn","accessor","title","switchable","hidden","StatusColumn","model","ModelType","build","PartColumn","ordering","sortable","render","record","stock_item_detail","serial","batch","DecimalColumn","LocationColumn","supplier_part_detail","SKU","selectedItemId","setSelectedItemId","useState","editItem","useEditApiFormModal","pk","url","ApiEndpoints","build_item_list","fields","stock_item","disabled","quantity","deleteItem","useDeleteApiFormModal","selectedItems","setSelectedItems","itemsToConsume","filter","item","part_detail","trackable","consumeStock","useConsumeBuildItemsForm","allocatedItems","onFormSuccess","clearSelectedRecords","refreshTable","stockOperationProps","items","selectedRecords","map","location_detail","stockitem","refresh","stockAdjustActions","useStockAdjustActions","formProps","merge","assign","delete","add","count","remove","rowActions","useCallback","part","color","icon","IconCircleDashedCheck","tooltip","hasChangeRole","UserRoles","onClick","open","RowEditAction","RowDeleteAction","hasDeleteRole","tableActions","dropdown","jsx","ActionButton","length","jsxs","Fragment","modal","modals","InvenTreeTable","apiUrl","params","build_detail","stock_detail","supplier_detail","enableBulkDelete","enableDownload","enableSelection","enableLabels","enableReports","printingAccessor","modelType"],"mappings":"0eAsCA,SAAwBA,GAAyB,CAC/CC,QAAAA,EACAC,QAAAA,EACAC,OAAAA,EACAC,cAAAA,EACAC,aAAAA,EACAC,UAAAA,EACAC,YAAAA,EACAC,WAAAA,CAUD,EAAG,CACF,MAAMC,EAAOC,EAAAA,EACPC,EAAQC,EACVT,EAAS,2BAA6B,qBAC1C,EAEMU,EAA8BC,EAAAA,QAAQ,IAAM,CAChD,MAAMC,EAAyB,CAC7B,CACEC,KAAM,UACNC,MAAKC,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAqB,EAC5BC,YAAWH,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAwC,CAAC,CACvD,EAGH,OAAMjB,GACJY,EAAQO,KAAKC,GAAuB,EAGtCR,EAAQO,KAAKE,GAAqB,EAE3BT,CACT,EAAG,CAACZ,CAAM,CAAC,EAELsB,EAA8BX,EAAAA,QAAQ,IACnC,CACLY,EAAgB,CACdC,SAAU,yBACVC,MAAKV,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAa,EACpBS,WAAY,GACZC,OAAQ1B,GAAiB,EAAA,CAC1B,EACD,CACEuB,SAAU,qBACVC,MAAKV,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAa,EACpBU,OAAQ1B,GAAiB,EAAA,EAE3B2B,EAAa,CACXJ,SAAU,sBACVK,MAAOC,EAAUC,MACjBN,MAAKV,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAc,EACrBU,OAAQ1B,GAAiB,EAAA,CAC1B,EACD+B,EAAW,CACTL,OAAQ,CAACzB,EACTwB,WAAY,EAAA,CACb,EACD,CACEF,SAAU,kBACVS,SAAU,MACVN,OAAQ,CAACzB,EACTuB,MAAKV,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAK,EACZiB,SAAU,GACVR,WAAY,EAAA,EAEd,CACEC,OAAQ,CAACzB,EACTsB,SAAU,gBACVC,MAAKV,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAW,EAClBiB,SAAU,GACVR,WAAY,EAAA,EAEd,CACEF,SAAU,SACVC,MAAKV,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAe,EACtBiB,SAAU,GACVR,WAAY,GACZS,OAASC,UAAgBA,OAAAA,EAAAA,GAAAA,YAAAA,EAAQC,oBAARD,YAAAA,EAA2BE,OAAAA,EAEtD,CACEd,SAAU,QACVC,MAAKV,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAY,EACnBiB,SAAU,GACVR,WAAY,GACZS,OAASC,UAAgBA,OAAAA,EAAAA,GAAAA,YAAAA,EAAQC,oBAARD,YAAAA,EAA2BG,MAAAA,EAEtDC,EAAc,CACZhB,SAAU,YACVC,MAAKV,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAW,CAAC,CACpB,EACDuB,EAAc,CACZhB,SAAU,WACVC,MAAKV,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAW,EAClBiB,SAAU,GACVR,WAAY,EAAA,CACb,EACDe,EAAe,CACbjB,SAAU,kBACVE,WAAY,GACZQ,SAAU,EAAA,CACX,EACD,CACEV,SAAU,eACVC,MAAKV,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAc,EACrBiB,SAAU,EAAA,EAEZ,CACEV,SAAU,MACVC,MAAKV,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAe,EACtBkB,OAASC,UAAgBA,OAAAA,EAAAA,GAAAA,YAAAA,EAAQM,uBAARN,YAAAA,EAA8BO,KACvDT,SAAU,EAAA,CACX,EAEF,CAAA,CAAE,EAEC,CAACU,EAAgBC,CAAiB,EAAIC,EAAAA,SAAiB,CAAC,EAExDC,EAAWC,EAAoB,CACnCC,GAAIL,EACJM,IAAKC,EAAaC,gBAClB3B,MAAKV,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAuB,EAC9BoC,OAAQ,CACNC,WAAY,CACVC,SAAU,EAAA,EAEZC,SAAU,CAAA,CAAC,EAEbhD,MAAAA,CAAAA,CACD,EAEKiD,EAAaC,EAAsB,CACvCT,GAAIL,EACJM,IAAKC,EAAaC,gBAClB3B,MAAKV,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAyB,EAChCT,MAAAA,CAAAA,CACD,EAEK,CAACmD,EAAeC,CAAgB,EAAId,EAAAA,SAAgB,CAAA,CAAE,EAEtDe,EAAiBlD,EAAAA,QAAQ,IACtBgD,EAAcG,OAAQC,GAAAA,OAAS,SAACA,EAAAA,EAAKC,cAALD,MAAAA,EAAkBE,WAAS,EACjE,CAACN,CAAa,CAAC,EAEZO,EAAeC,EAAyB,CAC5CrE,QAASA,GAAW,EACpBsE,eAAgBP,EAChBQ,cAAeA,IAAM,CACnB7D,EAAM8D,qBAAAA,EACN9D,EAAM+D,aAAAA,CACR,CAAA,CACD,EAEKC,EAA2C7D,EAAAA,QAAQ,KAchD,CACL8D,MAXwBjE,EAAMkE,gBAC7BZ,OAAQC,GAAc,CAAC,CAACA,EAAK1B,iBAAiB,EAC9CsC,IAAKZ,IACG,CACL,GAAGA,EAAK1B,kBACR2B,YAAaD,EAAKC,YAClBY,gBAAiBb,EAAKa,eAAAA,EAEzB,EAID/C,MAAOC,EAAU+C,UACjBC,QAAStE,EAAM+D,YAAAA,GAEhB,CAAC/D,EAAMkE,gBAAiBlE,EAAM+D,YAAY,CAAC,EAExCQ,EAAqBC,EAAsB,CAC/CC,UAAWT,EACXU,MAAO,GACPC,OAAQ,GACRC,OAAQ,GACRC,IAAK,GACLC,MAAO,GACPC,OAAQ,EAAA,CACT,EAEKC,EAAaC,cAChBrD,GAA6B,CAC5B,MAAMsD,EAAOtD,EAAO4B,aAAe,CAAA,EAC7BC,GAAqByB,GAAAA,YAAAA,EAAMzB,YAAa,GAE9C,MAAO,CACL,CACE0B,MAAO,QACPC,WAAOC,EAAA,EAAqB,EAC5BpE,MAAKV,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAS,EAChB6E,QAAO/E,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAe,EACxBU,OAAQ,CAAC7B,GAAWmE,GAAa,CAAC3D,EAAKyF,cAAcC,EAAUjE,KAAK,EACpEkE,QAASA,IAAM,CACbrC,EAAiB,CAACxB,CAAM,CAAC,EACzB8B,EAAagC,KAAAA,CACf,CAAA,EAEFC,EAAc,CACZxE,OAAQ,CAACrB,EAAKyF,cAAcC,EAAUjE,KAAK,EAC3CkE,QAASA,IAAM,CACbpD,EAAkBT,EAAOa,EAAE,EAC3BF,EAASmD,KAAAA,CACX,CAAA,CACD,EACDE,EAAgB,CACdzE,OAAQ,CAACrB,EAAK+F,cAAcL,EAAUjE,KAAK,EAC3CkE,QAASA,IAAM,CACbpD,EAAkBT,EAAOa,EAAE,EAC3BQ,EAAWyC,KAAAA,CACb,CAAA,CACD,CAAC,CAEN,EACA,CAAC5F,CAAI,CACP,EAEMgG,EAAe3F,EAAAA,QAAQ,IACpB,CACLoE,EAAmBwB,SACnBC,EAAAA,IAACC,EAAA,CAEC,KAAMD,EAAAA,IAACX,EAAA,CAAA,CAAqB,EAC5B,QAAQ9E,EAAAC,EAAC,CAAAC,GAAA,QAAA,CAAe,EACxB,OAAQ,CAACX,EAAKyF,cAAcC,EAAUjE,KAAK,EAC3C,SAAUvB,EAAMkE,gBAAgBgC,QAAU,EAC1C,MAAM,QACN,QAAS,IAAM,CACb9C,EAAiBpD,EAAMkE,eAAe,EACtCR,EAAagC,KAAAA,CACf,CAAA,EATI,gBAUJ,EAEH,CAAC5F,EAAME,EAAMkE,gBAAiBK,EAAmBwB,QAAQ,CAAC,EAE7D,OACEI,EAAAA,KAAAC,WAAA,CACG7D,SAAAA,CAAAA,EAAS8D,MACTpD,EAAWoD,MACX3C,EAAa2C,MACb9B,EAAmB+B,OAAOnC,IAAKkC,GAAUA,EAAMA,KAAK,EACrDL,EAAAA,IAACO,EAAA,CACC,WAAYvG,EACZ,IAAKwG,EAAO7D,EAAaC,eAAe,EACxC,QAAS9B,EACT,MAAO,CACL2F,OAAQ,CACNlF,MAAOjC,EACP4F,KAAM1F,EACNsD,WAAYvD,EACZmH,aAAcjH,GAAiB,GAC/B+D,YAAa9D,GAAgB,GAC7B0E,gBAAiB,GACjBuC,aAAc,GACdC,gBAAiB,EAAA,EAEnBC,iBAAkBlH,GAAaG,EAAK+F,cAAcL,EAAUjE,KAAK,EACjEuF,eAAgB,GAChBC,gBAAiBpH,GAAaG,EAAK+F,cAAcL,EAAUjE,KAAK,EAChEyD,WAAAA,EACAc,aAAAA,EACA5F,aAAAA,EACA8G,aAAc,GACdC,cAAe,GACfC,iBAAkB,aAClBrH,WAAYA,GAAc,aAC1BsH,UAAWvH,GAAe0B,EAAU+C,SAAAA,CACtC,CAAE,CAAA,EAEN,CAEJ"}