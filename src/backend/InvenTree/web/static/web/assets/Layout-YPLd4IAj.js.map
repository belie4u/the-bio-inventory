{"version":3,"file":"Layout-YPLd4IAj.js","sources":["../../../../../../frontend/node_modules/@mantine/spotlight/esm/spotlight.store.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/is-actions-group.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/default-spotlight-filter.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/limit-actions.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/Spotlight.context.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/SpotlightAction.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/SpotlightActionsGroup.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/SpotlightActionsList.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/SpotlightEmpty.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/SpotlightFooter.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/get-hotkeys.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/SpotlightRoot.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/SpotlightSearch.mjs","../../../../../../frontend/node_modules/@mantine/spotlight/esm/Spotlight.mjs","../../../../../../frontend/src/defaults/actions.tsx","../../../../../../frontend/src/components/nav/Footer.tsx","../../../../../../frontend/src/components/buttons/ScanButton.tsx","../../../../../../frontend/src/components/buttons/SpotlightButton.tsx","../../../../../../frontend/src/components/nav/MainMenu.tsx","../../../../../../frontend/src/components/items/inventree.svg","../../../../../../frontend/src/components/items/InvenTreeLogo.tsx","../../../../../../frontend/src/components/nav/NavHoverMenu.tsx","../../../../../../frontend/src/components/items/MenuLinks.tsx","../../../../../../frontend/src/components/nav/NavigationDrawer.tsx","../../../../../../frontend/src/components/nav/NotificationDrawer.tsx","../../../../../../frontend/src/components/nav/SearchDrawer.tsx","../../../../../../frontend/src/components/nav/Header.tsx","../../../../../../frontend/src/components/nav/Layout.tsx"],"sourcesContent":["'use client';\nimport { clamp } from '@mantine/hooks';\nimport { createStore, useStore } from '@mantine/store';\n\nconst createSpotlightStore = () => createStore({\n  opened: false,\n  empty: false,\n  selected: -1,\n  listId: \"\",\n  query: \"\",\n  registeredActions: /* @__PURE__ */ new Set()\n});\nconst useSpotlight = (store) => useStore(store);\nfunction updateSpotlightStateAction(update, store) {\n  const state = store.getState();\n  store.setState({ ...state, ...update(store.getState()) });\n}\nfunction openSpotlightAction(store) {\n  updateSpotlightStateAction(() => ({ opened: true, selected: -1 }), store);\n}\nfunction closeSpotlightAction(store) {\n  updateSpotlightStateAction(() => ({ opened: false }), store);\n}\nfunction toggleSpotlightAction(store) {\n  updateSpotlightStateAction(\n    (state) => ({ opened: !state.opened, selected: state.opened ? state.selected : -1 }),\n    store\n  );\n}\nfunction setSelectedAction(index, store) {\n  store.updateState((state) => ({ ...state, selected: index }));\n}\nfunction setListId(id, store) {\n  store.updateState((state) => ({ ...state, listId: id }));\n}\nfunction findElementByQuerySelector(selector, root = document) {\n  const element = root.querySelector(selector);\n  if (element) {\n    return element;\n  }\n  const children = root instanceof ShadowRoot ? root.host.children : root.children;\n  for (let i = 0; i < children.length; i += 1) {\n    const child = children[i];\n    if (child.shadowRoot) {\n      const shadowElement = findElementByQuerySelector(selector, child.shadowRoot);\n      if (shadowElement) {\n        return shadowElement;\n      }\n    }\n    const nestedElement = findElementByQuerySelector(selector, child);\n    if (nestedElement) {\n      return nestedElement;\n    }\n  }\n  return null;\n}\nfunction selectAction(index, store) {\n  const state = store.getState();\n  const actionsList = state.listId ? findElementByQuerySelector(`#${state.listId}`) : null;\n  const selected = actionsList?.querySelector(\"[data-selected]\");\n  const actions = actionsList?.querySelectorAll(\"[data-action]\") ?? [];\n  const nextIndex = index === -1 ? actions.length - 1 : index === actions.length ? 0 : index;\n  const selectedIndex = clamp(nextIndex, 0, actions.length - 1);\n  selected?.removeAttribute(\"data-selected\");\n  actions[selectedIndex]?.scrollIntoView({ block: \"nearest\" });\n  actions[selectedIndex]?.setAttribute(\"data-selected\", \"true\");\n  setSelectedAction(selectedIndex, store);\n  return selectedIndex;\n}\nfunction selectNextAction(store) {\n  return selectAction(store.getState().selected + 1, store);\n}\nfunction selectPreviousAction(store) {\n  return selectAction(store.getState().selected - 1, store);\n}\nfunction triggerSelectedAction(store) {\n  const state = store.getState();\n  const selected = findElementByQuerySelector(\n    `#${state.listId} [data-selected]`\n  );\n  selected?.click();\n}\nfunction registerAction(id, store) {\n  const state = store.getState();\n  state.registeredActions.add(id);\n  return () => {\n    state.registeredActions.delete(id);\n  };\n}\nfunction setQuery(query, store) {\n  updateSpotlightStateAction(() => ({ query }), store);\n  Promise.resolve().then(() => {\n    selectAction(0, store);\n    updateSpotlightStateAction(\n      (state) => ({\n        empty: state.query.trim().length > 0 && state.registeredActions.size === 0 || false\n      }),\n      store\n    );\n  });\n}\nfunction clearSpotlightState({ clearQuery }, store) {\n  store.updateState((state) => ({\n    ...state,\n    selected: -1,\n    query: clearQuery ? \"\" : state.query,\n    empty: clearQuery ? false : state.empty\n  }));\n}\nconst spotlightActions = {\n  open: openSpotlightAction,\n  close: closeSpotlightAction,\n  toggle: toggleSpotlightAction,\n  updateState: updateSpotlightStateAction,\n  setSelectedAction,\n  setListId,\n  selectAction,\n  selectNextAction,\n  selectPreviousAction,\n  triggerSelectedAction,\n  registerAction,\n  setQuery,\n  clearSpotlightState\n};\nfunction createSpotlight() {\n  const store = createSpotlightStore();\n  const actions = {\n    open: () => openSpotlightAction(store),\n    close: () => closeSpotlightAction(store),\n    toggle: () => toggleSpotlightAction(store)\n  };\n  return [store, actions];\n}\nconst [spotlightStore, spotlight] = createSpotlight();\nconst { open: openSpotlight, close: closeSpotlight, toggle: toggleSpotlight } = spotlight;\n\nexport { clearSpotlightState, closeSpotlight, closeSpotlightAction, createSpotlight, createSpotlightStore, openSpotlight, openSpotlightAction, registerAction, selectAction, selectNextAction, selectPreviousAction, setListId, setQuery, setSelectedAction, spotlight, spotlightActions, spotlightStore, toggleSpotlight, toggleSpotlightAction, triggerSelectedAction, updateSpotlightStateAction, useSpotlight };\n//# sourceMappingURL=spotlight.store.mjs.map\n","'use client';\nfunction isActionsGroup(item) {\n  const _item = item;\n  return _item.group !== void 0 && Array.isArray(_item.actions);\n}\n\nexport { isActionsGroup };\n//# sourceMappingURL=is-actions-group.mjs.map\n","'use client';\nfunction getKeywords(keywords) {\n  if (Array.isArray(keywords)) {\n    return keywords.map((keyword) => keyword.trim()).join(\",\").toLowerCase().trim();\n  }\n  if (typeof keywords === \"string\") {\n    return keywords.toLowerCase().trim();\n  }\n  return \"\";\n}\nfunction getFlatActions(data) {\n  return data.reduce((acc, item) => {\n    if (\"actions\" in item) {\n      return [...acc, ...item.actions.map((action) => ({ ...action, group: item.group }))];\n    }\n    return [...acc, item];\n  }, []);\n}\nfunction flatActionsToGroups(data) {\n  const groups = {};\n  const result = [];\n  data.forEach((action) => {\n    if (action.group) {\n      if (!groups[action.group]) {\n        groups[action.group] = { pushed: false, data: { group: action.group, actions: [] } };\n      }\n      groups[action.group].data.actions.push(action);\n      if (!groups[action.group].pushed) {\n        groups[action.group].pushed = true;\n        result.push(groups[action.group].data);\n      }\n    } else {\n      result.push(action);\n    }\n  });\n  return result;\n}\nconst defaultSpotlightFilter = (_query, data) => {\n  const query = _query.trim().toLowerCase();\n  const priorityMatrix = [[], []];\n  const flatActions = getFlatActions(data);\n  flatActions.forEach((item) => {\n    if (item.label?.toLowerCase().includes(query)) {\n      priorityMatrix[0].push(item);\n    } else if (item.description?.toLowerCase().includes(query) || getKeywords(item.keywords).includes(query)) {\n      priorityMatrix[1].push(item);\n    }\n  });\n  return flatActionsToGroups(priorityMatrix.flat());\n};\n\nexport { defaultSpotlightFilter };\n//# sourceMappingURL=default-spotlight-filter.mjs.map\n","'use client';\nimport { isActionsGroup } from './is-actions-group.mjs';\n\nfunction limitActions(actions, limit) {\n  if (!Array.isArray(actions)) {\n    return [];\n  }\n  let count = 0;\n  return actions.reduce((acc, item) => {\n    if (count >= limit) {\n      return acc;\n    }\n    if (isActionsGroup(item)) {\n      const groupActions = limitActions(item.actions, limit - count);\n      acc.push({\n        group: item.group,\n        actions: groupActions\n      });\n      count += groupActions.length;\n    } else {\n      acc.push(item);\n      count += 1;\n    }\n    return acc;\n  }, []);\n}\n\nexport { limitActions };\n//# sourceMappingURL=limit-actions.mjs.map\n","'use client';\nimport { createSafeContext } from '@mantine/core';\n\nconst [SpotlightProvider, useSpotlightContext] = createSafeContext(\n  \"Spotlight component was not found in tree\"\n);\n\nexport { SpotlightProvider, useSpotlightContext };\n//# sourceMappingURL=Spotlight.context.mjs.map\n","'use client';\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { factory, useProps, Highlight, UnstyledButton, Box } from '@mantine/core';\nimport { useSpotlightContext } from './Spotlight.context.mjs';\nimport { spotlightActions } from './spotlight.store.mjs';\nimport classes from './Spotlight.module.css.mjs';\n\nconst defaultProps = {\n  dimmedSections: true,\n  highlightQuery: false\n};\nconst SpotlightAction = factory((_props, ref) => {\n  const props = useProps(\"SpotlightAction\", defaultProps, _props);\n  const {\n    className,\n    style,\n    classNames,\n    styles,\n    id,\n    description,\n    label,\n    leftSection,\n    rightSection,\n    children,\n    dimmedSections,\n    highlightQuery,\n    highlightColor,\n    closeSpotlightOnTrigger,\n    onClick,\n    onMouseDown,\n    keywords,\n    vars,\n    ...others\n  } = props;\n  const ctx = useSpotlightContext();\n  const stylesApi = { classNames, styles };\n  const labelNode = highlightQuery && typeof label === \"string\" ? /* @__PURE__ */ jsx(\n    Highlight,\n    {\n      component: \"span\",\n      highlight: ctx.query,\n      color: highlightColor,\n      ...ctx.getStyles(\"actionLabel\", stylesApi),\n      children: label\n    }\n  ) : /* @__PURE__ */ jsx(\"span\", { ...ctx.getStyles(\"actionLabel\", stylesApi), children: label });\n  return /* @__PURE__ */ jsx(\n    UnstyledButton,\n    {\n      ref,\n      \"data-action\": true,\n      ...ctx.getStyles(\"action\", { className, style, ...stylesApi }),\n      ...others,\n      onMouseDown: (event) => {\n        event.preventDefault();\n        onMouseDown?.(event);\n      },\n      onClick: (event) => {\n        onClick?.(event);\n        if (closeSpotlightOnTrigger ?? ctx.closeOnActionTrigger) {\n          spotlightActions.close(ctx.store);\n        }\n      },\n      tabIndex: -1,\n      children: children || /* @__PURE__ */ jsxs(Fragment, { children: [\n        leftSection && /* @__PURE__ */ jsx(\n          Box,\n          {\n            component: \"span\",\n            mod: { position: \"left\", dimmed: dimmedSections },\n            ...ctx.getStyles(\"actionSection\", stylesApi),\n            children: leftSection\n          }\n        ),\n        /* @__PURE__ */ jsxs(\"span\", { ...ctx.getStyles(\"actionBody\", stylesApi), children: [\n          labelNode,\n          /* @__PURE__ */ jsx(\"span\", { ...ctx.getStyles(\"actionDescription\", stylesApi), children: description })\n        ] }),\n        rightSection && /* @__PURE__ */ jsx(\n          Box,\n          {\n            component: \"span\",\n            mod: { position: \"right\", dimmed: dimmedSections },\n            ...ctx.getStyles(\"actionSection\", stylesApi),\n            children: rightSection\n          }\n        )\n      ] })\n    }\n  );\n});\nSpotlightAction.classes = classes;\nSpotlightAction.displayName = \"@mantine/spotlight/SpotlightAction\";\n\nexport { SpotlightAction };\n//# sourceMappingURL=SpotlightAction.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { factory, useProps, Box } from '@mantine/core';\nimport { useSpotlightContext } from './Spotlight.context.mjs';\nimport classes from './Spotlight.module.css.mjs';\n\nconst SpotlightActionsGroup = factory((props, ref) => {\n  const { className, style, styles, classNames, label, children, ...others } = useProps(\n    \"SpotlightActionsGroup\",\n    null,\n    props\n  );\n  const ctx = useSpotlightContext();\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ...ctx.getStyles(\"actionsGroup\", { className, style, classNames, styles }),\n      ref,\n      ...others,\n      __vars: { \"--spotlight-label\": `'${label?.replace(/'/g, \"\\\\'\")}'` },\n      children\n    }\n  );\n});\nSpotlightActionsGroup.classes = classes;\nSpotlightActionsGroup.displayName = \"@mantine/core/SpotlightActionsGroup\";\n\nexport { SpotlightActionsGroup };\n//# sourceMappingURL=SpotlightActionsGroup.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { useId, useEffect } from 'react';\nimport { factory, useProps, ScrollArea } from '@mantine/core';\nimport { useSpotlightContext } from './Spotlight.context.mjs';\nimport { spotlightActions } from './spotlight.store.mjs';\nimport classes from './Spotlight.module.css.mjs';\n\nconst SpotlightActionsList = factory((props, ref) => {\n  const { className, style, id, children, vars, classNames, styles, ...others } = useProps(\n    \"SpotlightActionsList\",\n    null,\n    props\n  );\n  const ctx = useSpotlightContext();\n  const generatedId = `mantine-${useId().replace(/:/g, \"\")}`;\n  const listId = id || generatedId;\n  useEffect(() => {\n    spotlightActions.setListId(listId, ctx.store);\n    return () => spotlightActions.setListId(\"\", ctx.store);\n  }, []);\n  return /* @__PURE__ */ jsx(\n    ScrollArea.Autosize,\n    {\n      ...ctx.getStyles(\"actionsList\", { className, style, classNames, styles }),\n      ref,\n      type: \"scroll\",\n      scrollbarSize: \"var(--spotlight-actions-list-padding)\",\n      offsetScrollbars: \"y\",\n      id: listId,\n      ...others,\n      children\n    }\n  );\n});\nSpotlightActionsList.classes = classes;\nSpotlightActionsList.displayName = \"@mantine/spotlight/SpotlightActionsList\";\n\nexport { SpotlightActionsList };\n//# sourceMappingURL=SpotlightActionsList.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { factory, useProps, Box } from '@mantine/core';\nimport { useSpotlightContext } from './Spotlight.context.mjs';\nimport classes from './Spotlight.module.css.mjs';\n\nconst SpotlightEmpty = factory((props, ref) => {\n  const { className, style, classNames, styles, ...others } = useProps(\n    \"SpotlightEmpty\",\n    null,\n    props\n  );\n  const ctx = useSpotlightContext();\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      ...ctx.getStyles(\"empty\", { classNames, styles, className, style }),\n      ...others\n    }\n  );\n});\nSpotlightEmpty.classes = classes;\nSpotlightEmpty.displayName = \"@mantine/spotlight/SpotlightEmpty\";\n\nexport { SpotlightEmpty };\n//# sourceMappingURL=SpotlightEmpty.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { factory, useProps, Box } from '@mantine/core';\nimport { useSpotlightContext } from './Spotlight.context.mjs';\nimport classes from './Spotlight.module.css.mjs';\n\nconst SpotlightFooter = factory((props, ref) => {\n  const { className, style, classNames, styles, ...others } = useProps(\n    \"SpotlightFooter\",\n    null,\n    props\n  );\n  const ctx = useSpotlightContext();\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      ...ctx.getStyles(\"footer\", { className, classNames, style, styles }),\n      ...others\n    }\n  );\n});\nSpotlightFooter.classes = classes;\nSpotlightFooter.displayName = \"@mantine/spotlight/SpotlightFooter\";\n\nexport { SpotlightFooter };\n//# sourceMappingURL=SpotlightFooter.mjs.map\n","'use client';\nimport { spotlightActions } from './spotlight.store.mjs';\n\nfunction getHotkeys(hotkeys, store) {\n  if (!hotkeys) {\n    return [];\n  }\n  const open = () => spotlightActions.open(store);\n  if (Array.isArray(hotkeys)) {\n    return hotkeys.map((hotkey) => [hotkey, open]);\n  }\n  return [[hotkeys, open]];\n}\n\nexport { getHotkeys };\n//# sourceMappingURL=get-hotkeys.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { getDefaultZIndex, factory, useProps, useMantineTheme, useStyles, Modal, resolveClassNames, resolveStyles, rem } from '@mantine/core';\nimport { useHotkeys, useDidUpdate } from '@mantine/hooks';\nimport { getHotkeys } from './get-hotkeys.mjs';\nimport { SpotlightProvider } from './Spotlight.context.mjs';\nimport { spotlightStore, useSpotlight, spotlightActions } from './spotlight.store.mjs';\nimport classes from './Spotlight.module.css.mjs';\n\nconst defaultProps = {\n  size: 600,\n  yOffset: 80,\n  zIndex: getDefaultZIndex(\"max\"),\n  overlayProps: { backgroundOpacity: 0.35, blur: 7 },\n  transitionProps: { duration: 200, transition: \"pop\" },\n  store: spotlightStore,\n  clearQueryOnClose: true,\n  closeOnActionTrigger: true,\n  shortcut: \"mod + K\",\n  maxHeight: 400\n};\nconst SpotlightRoot = factory((_props, ref) => {\n  const props = useProps(\"SpotlightRoot\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    store,\n    children,\n    query,\n    onQueryChange,\n    transitionProps,\n    clearQueryOnClose,\n    shortcut,\n    tagsToIgnore,\n    triggerOnContentEditable,\n    disabled,\n    onSpotlightOpen,\n    onSpotlightClose,\n    forceOpened,\n    closeOnActionTrigger,\n    maxHeight,\n    scrollable,\n    attributes,\n    ...others\n  } = props;\n  const theme = useMantineTheme();\n  const { opened, query: storeQuery } = useSpotlight(store);\n  const _query = typeof query === \"string\" ? query : storeQuery;\n  const setQuery = (q) => {\n    onQueryChange?.(q);\n    spotlightActions.setQuery(q, store);\n  };\n  const getStyles = useStyles({\n    name: \"Spotlight\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes\n  });\n  useHotkeys(getHotkeys(shortcut, store), tagsToIgnore, triggerOnContentEditable);\n  useDidUpdate(() => {\n    opened ? onSpotlightOpen?.() : onSpotlightClose?.();\n  }, [opened]);\n  if (disabled) {\n    return null;\n  }\n  return /* @__PURE__ */ jsx(\n    SpotlightProvider,\n    {\n      value: {\n        getStyles,\n        query: _query,\n        setQuery,\n        store,\n        closeOnActionTrigger\n      },\n      children: /* @__PURE__ */ jsx(\n        Modal,\n        {\n          ref,\n          ...others,\n          withCloseButton: false,\n          opened: opened || !!forceOpened,\n          padding: 0,\n          onClose: () => spotlightActions.close(store),\n          className,\n          style,\n          classNames: resolveClassNames({\n            theme,\n            classNames: [classes, classNames],\n            props,\n            stylesCtx: void 0\n          }),\n          styles: resolveStyles({ theme, styles, props, stylesCtx: void 0 }),\n          transitionProps: {\n            ...transitionProps,\n            onExited: () => {\n              clearQueryOnClose && setQuery(\"\");\n              spotlightActions.clearSpotlightState({ clearQuery: clearQueryOnClose }, store);\n              transitionProps?.onExited?.();\n            }\n          },\n          __vars: { \"--spotlight-max-height\": scrollable ? rem(maxHeight) : void 0 },\n          __staticSelector: \"Spotlight\",\n          \"data-scrollable\": scrollable || void 0,\n          children\n        }\n      )\n    }\n  );\n});\nSpotlightRoot.classes = classes;\nSpotlightRoot.displayName = \"@mantine/spotlight/SpotlightRoot\";\n\nexport { SpotlightRoot };\n//# sourceMappingURL=SpotlightRoot.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { useState } from 'react';\nimport { factory, useProps, Input } from '@mantine/core';\nimport { useSpotlightContext } from './Spotlight.context.mjs';\nimport { spotlightActions } from './spotlight.store.mjs';\nimport classes from './Spotlight.module.css.mjs';\n\nconst defaultProps = {\n  size: \"lg\"\n};\nconst SpotlightSearch = factory((props, ref) => {\n  const { classNames, styles, onKeyDown, onChange, vars, value, ...others } = useProps(\n    \"SpotlightSearch\",\n    defaultProps,\n    props\n  );\n  const ctx = useSpotlightContext();\n  const inputStyles = ctx.getStyles(\"search\");\n  const [isComposing, setIsComposing] = useState(false);\n  const handleKeyDown = (event) => {\n    onKeyDown?.(event);\n    if (isComposing) {\n      return;\n    }\n    if (event.nativeEvent.code === \"ArrowDown\") {\n      event.preventDefault();\n      spotlightActions.selectNextAction(ctx.store);\n    }\n    if (event.nativeEvent.code === \"ArrowUp\") {\n      event.preventDefault();\n      spotlightActions.selectPreviousAction(ctx.store);\n    }\n    if (event.nativeEvent.code === \"Enter\" || event.nativeEvent.code === \"NumpadEnter\") {\n      event.preventDefault();\n      spotlightActions.triggerSelectedAction(ctx.store);\n    }\n  };\n  return /* @__PURE__ */ jsx(\n    Input,\n    {\n      ref,\n      classNames: [{ input: inputStyles.className }, classNames],\n      styles: [{ input: inputStyles.style }, styles],\n      ...others,\n      value: value ?? ctx.query,\n      onChange: (event) => {\n        ctx.setQuery(event.currentTarget.value);\n        onChange?.(event);\n      },\n      onKeyDown: handleKeyDown,\n      onCompositionStart: () => setIsComposing(true),\n      onCompositionEnd: () => setIsComposing(false)\n    }\n  );\n});\nSpotlightSearch.classes = classes;\nSpotlightSearch.displayName = \"@mantine/spotlight/SpotlightSearch\";\n\nexport { SpotlightSearch };\n//# sourceMappingURL=SpotlightSearch.mjs.map\n","'use client';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { getDefaultZIndex, factory, useProps } from '@mantine/core';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { defaultSpotlightFilter } from './default-spotlight-filter.mjs';\nimport { isActionsGroup } from './is-actions-group.mjs';\nimport { limitActions } from './limit-actions.mjs';\nimport { spotlightStore, spotlight } from './spotlight.store.mjs';\nimport { SpotlightAction } from './SpotlightAction.mjs';\nimport { SpotlightActionsGroup } from './SpotlightActionsGroup.mjs';\nimport { SpotlightActionsList } from './SpotlightActionsList.mjs';\nimport { SpotlightEmpty } from './SpotlightEmpty.mjs';\nimport { SpotlightFooter } from './SpotlightFooter.mjs';\nimport { SpotlightRoot } from './SpotlightRoot.mjs';\nimport { SpotlightSearch } from './SpotlightSearch.mjs';\nimport classes from './Spotlight.module.css.mjs';\n\nconst defaultProps = {\n  size: 600,\n  yOffset: 80,\n  limit: Infinity,\n  zIndex: getDefaultZIndex(\"max\"),\n  overlayProps: { backgroundOpacity: 0.35, blur: 7 },\n  transitionProps: { duration: 200, transition: \"pop\" },\n  store: spotlightStore,\n  filter: defaultSpotlightFilter,\n  clearQueryOnClose: true,\n  closeOnActionTrigger: true,\n  shortcut: \"mod + K\"\n};\nconst Spotlight = factory((_props, ref) => {\n  const props = useProps(\"Spotlight\", defaultProps, _props);\n  const {\n    searchProps,\n    filter,\n    query,\n    onQueryChange,\n    actions,\n    nothingFound,\n    highlightQuery,\n    limit,\n    ...others\n  } = props;\n  const [_query, setQuery] = useUncontrolled({\n    value: query,\n    defaultValue: \"\",\n    finalValue: \"\",\n    onChange: onQueryChange\n  });\n  const filteredActions = limitActions(filter(_query, actions), limit).map((item) => {\n    if (isActionsGroup(item)) {\n      const items = item.actions.map(({ id, ...actionData }) => /* @__PURE__ */ jsx(SpotlightAction, { highlightQuery, ...actionData }, id));\n      return /* @__PURE__ */ jsx(SpotlightActionsGroup, { label: item.group, children: items }, item.group);\n    }\n    return /* @__PURE__ */ jsx(SpotlightAction, { highlightQuery, ...item }, item.id);\n  });\n  return /* @__PURE__ */ jsxs(SpotlightRoot, { ...others, query: _query, onQueryChange: setQuery, ref, children: [\n    /* @__PURE__ */ jsx(SpotlightSearch, { ...searchProps }),\n    /* @__PURE__ */ jsxs(SpotlightActionsList, { children: [\n      filteredActions,\n      filteredActions.length === 0 && nothingFound && /* @__PURE__ */ jsx(SpotlightEmpty, { children: nothingFound })\n    ] })\n  ] });\n});\nSpotlight.classes = classes;\nSpotlight.displayName = \"@mantine/spotlight/Spotlight\";\nSpotlight.Search = SpotlightSearch;\nSpotlight.ActionsList = SpotlightActionsList;\nSpotlight.Action = SpotlightAction;\nSpotlight.Empty = SpotlightEmpty;\nSpotlight.ActionsGroup = SpotlightActionsGroup;\nSpotlight.Footer = SpotlightFooter;\nSpotlight.Root = SpotlightRoot;\nSpotlight.open = spotlight.open;\nSpotlight.close = spotlight.close;\nSpotlight.toggle = spotlight.toggle;\n\nexport { Spotlight };\n//# sourceMappingURL=Spotlight.mjs.map\n","import { t } from '@lingui/core/macro';\nimport type { SpotlightActionData } from '@mantine/spotlight';\nimport { IconBarcode, IconLink, IconPointer } from '@tabler/icons-react';\nimport type { NavigateFunction } from 'react-router-dom';\n\nimport { openContextModal } from '@mantine/modals';\nimport { useShallow } from 'zustand/react/shallow';\nimport { useLocalState } from '../states/LocalState';\nimport { useUserState } from '../states/UserState';\nimport { aboutInvenTree, docLinks, licenseInfo, serverInfo } from './links';\n\nexport function openQrModal(navigate: NavigateFunction) {\n  return openContextModal({\n    modal: 'qr',\n    innerProps: { navigate: navigate }\n  });\n}\n\nexport function getActions(navigate: NavigateFunction) {\n  const setNavigationOpen = useLocalState(\n    useShallow((state) => state.setNavigationOpen)\n  );\n  const { user } = useUserState();\n\n  const actions: SpotlightActionData[] = [\n    {\n      id: 'dashboard',\n      label: t`Dashboard`,\n      description: t`Go to the InvenTree dashboard`,\n      onClick: () => navigate('/'),\n      leftSection: <IconLink size='1.2rem' />\n    },\n    {\n      id: 'documentation',\n      label: t`Documentation`,\n      description: t`Visit the documentation to learn more about InvenTree`,\n      onClick: () => {\n        window.location.href = docLinks.faq;\n      },\n      leftSection: <IconLink size='1.2rem' />\n    },\n    {\n      id: 'about',\n      label: t`About InvenTree`,\n      description: t`About the InvenTree org`,\n      onClick: () => aboutInvenTree(),\n      leftSection: <IconLink size='1.2rem' />\n    },\n    {\n      id: 'server-info',\n      label: t`Server Information`,\n      description: t`About this InvenTree instance`,\n      onClick: () => serverInfo(),\n      leftSection: <IconLink size='1.2rem' />\n    },\n    {\n      id: 'license-info',\n      label: t`License Information`,\n      description: t`Licenses for dependencies of the service`,\n      onClick: () => licenseInfo(),\n      leftSection: <IconLink size='1.2rem' />\n    },\n    {\n      id: 'navigation',\n      label: t`Open Navigation`,\n      description: t`Open the main navigation menu`,\n      onClick: () => setNavigationOpen(true),\n      leftSection: <IconPointer size='1.2rem' />\n    },\n    {\n      id: 'scan',\n      label: t`Scan`,\n      description: t`Scan a barcode or QR code`,\n      onClick: () => openQrModal(navigate),\n      leftSection: <IconBarcode size='1.2rem' />\n    }\n  ];\n\n  // Staff actions\n  user?.is_staff &&\n    actions.push({\n      id: 'admin-center',\n      label: t`Admin Center`,\n      description: t`Go to the Admin Center`,\n      onClick: () => {}, /// navigate(menuItems['settings-admin'].link),}\n      leftSection: <IconLink size='1.2rem' />\n    });\n\n  return actions;\n}\n","import * as classes from '../../main.css';\n\nexport function Footer() {\n  return (\n    <div className={classes.layoutFooter}>\n      {\n        // Placeholder for footer links\n      }\n    </div>\n  );\n}\n","import { t } from '@lingui/core/macro';\nimport { ActionIcon, Tooltip } from '@mantine/core';\nimport { useDisclosure } from '@mantine/hooks';\nimport { IconQrcode } from '@tabler/icons-react';\nimport BarcodeScanDialog from '../barcodes/BarcodeScanDialog';\n\n/**\n * A button which opens the QR code scanner modal\n */\nexport function ScanButton() {\n  const [opened, { open, close }] = useDisclosure(false);\n\n  return (\n    <>\n      <Tooltip position='bottom-end' label={t`Scan Barcode`}>\n        <ActionIcon\n          onClick={open}\n          variant='transparent'\n          title={t`Open Barcode Scanner`}\n        >\n          <IconQrcode />\n        </ActionIcon>\n      </Tooltip>\n      <BarcodeScanDialog opened={opened} onClose={close} />\n    </>\n  );\n}\n","import { t } from '@lingui/core/macro';\nimport { ActionIcon, Tooltip } from '@mantine/core';\nimport { IconCommand } from '@tabler/icons-react';\n\nimport { firstSpotlight } from '../nav/Layout';\n\n/**\n * A button which opens the quick command modal\n */\nexport function SpotlightButton() {\n  return (\n    <Tooltip position='bottom-end' label={t`Open spotlight`}>\n      <ActionIcon\n        onClick={() => firstSpotlight.open()}\n        variant='transparent'\n        aria-label='open-spotlight'\n      >\n        <IconCommand />\n      </ActionIcon>\n    </Tooltip>\n  );\n}\n","import { Trans } from '@lingui/react/macro';\nimport {\n  Group,\n  Menu,\n  Skeleton,\n  Text,\n  UnstyledButton,\n  useMantineColorScheme\n} from '@mantine/core';\nimport {\n  IconChevronDown,\n  IconInfoCircle,\n  IconLogout,\n  IconMoonStars,\n  IconSettings,\n  IconSun,\n  IconUserBolt,\n  IconUserCog\n} from '@tabler/icons-react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useShallow } from 'zustand/react/shallow';\nimport { aboutInvenTree } from '../../defaults/links';\nimport { doLogout } from '../../functions/auth';\nimport * as classes from '../../main.css';\nimport { useUserState } from '../../states/UserState';\nimport { vars } from '../../theme';\n\nexport function MainMenu() {\n  const navigate = useNavigate();\n  const [user, username] = useUserState(\n    useShallow((state) => [state.user, state.username])\n  );\n  const { colorScheme, toggleColorScheme } = useMantineColorScheme();\n\n  return (\n    <>\n      <Menu width={260} position='bottom-end'>\n        <Menu.Target>\n          <UnstyledButton className={classes.layoutHeaderUser}>\n            <Group gap={7}>\n              {username() ? (\n                <Text fw={500} size='sm' style={{ lineHeight: 1 }} mr={3}>\n                  {username()}\n                </Text>\n              ) : (\n                <Skeleton height={20} width={40} radius={vars.radiusDefault} />\n              )}\n              <IconChevronDown />\n            </Group>\n          </UnstyledButton>\n        </Menu.Target>\n        <Menu.Dropdown>\n          <Menu.Label>\n            <Trans>Settings</Trans>\n          </Menu.Label>\n          <Menu.Item\n            leftSection={<IconUserCog />}\n            component={Link}\n            to='/settings/user'\n          >\n            <Trans>Account Settings</Trans>\n          </Menu.Item>\n          {user?.is_staff && (\n            <Menu.Item\n              leftSection={<IconSettings />}\n              component={Link}\n              to='/settings/system'\n            >\n              <Trans>System Settings</Trans>\n            </Menu.Item>\n          )}\n          {user?.is_staff && (\n            <Menu.Item\n              leftSection={<IconUserBolt />}\n              component={Link}\n              to='/settings/admin'\n            >\n              <Trans>Admin Center</Trans>\n            </Menu.Item>\n          )}\n          {user?.is_staff && <Menu.Divider />}\n          <Menu.Item\n            onClick={toggleColorScheme}\n            leftSection={\n              colorScheme === 'dark' ? <IconSun /> : <IconMoonStars />\n            }\n            c={\n              colorScheme === 'dark'\n                ? vars.colors.yellow[4]\n                : vars.colors.blue[6]\n            }\n          >\n            <Trans>Change Color Mode</Trans>\n          </Menu.Item>\n          <Menu.Item\n            onClick={() => aboutInvenTree()}\n            leftSection={<IconInfoCircle />}\n          >\n            <Trans>About InvenTree</Trans>\n          </Menu.Item>\n          <Menu.Divider />\n          <Menu.Item\n            leftSection={<IconLogout />}\n            onClick={() => {\n              doLogout(navigate);\n            }}\n          >\n            <Trans>Logout</Trans>\n          </Menu.Item>\n        </Menu.Dropdown>\n      </Menu>\n    </>\n  );\n}\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='400'%3e%3cg%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='2.676'%3e%3cpath%20fill='%23ddbc91'%20d='M200%20199.906v193.196l166.305-96.016V103.139Z'/%3e%3cpath%20fill='%23d9b383'%20d='M200%20199.906v193.196L33.695%20297.086V103.139Z'/%3e%3cpath%20fill='%23ddbc91'%20d='M366.305%20103.139%20200%20199.906%2033.695%20103.14%20200%206.899z'/%3e%3cg%20fill='%23f3f4e4'%3e%3cpath%20d='M75.27%20127.109v145.46L200%20344.583l124.73-72.012V127.109L200%20199.684Z'/%3e%3cpath%20d='M324.73%20127.11%20200%20199.684%2075.27%20127.109%20200%2054.93Z'/%3e%3c/g%3e%3cpath%20fill='%23d9dbbc'%20d='M200%2054.929v144.756L75.27%20272.569V127.11z'/%3e%3cpath%20fill='%23eaeccf'%20d='M200%2054.929v144.756l124.73%2072.884V127.11z'/%3e%3cpath%20fill='%2390a8d8'%20d='M200%20199.901V296.5l83.153-48.008v-96.973zm0%200V296.5l-83.153-48.008v-96.973zm83.153-48.383L200%20199.9l-83.153-48.383L200%20103.398Z'/%3e%3c/g%3e%3cg%20fill='%2390a8d8'%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='3'%3e%3cpath%20d='M-546.667%20443.959v216.54l186.4-107.618V335.499Zm0%200v216.54l-186.4-107.618V335.499Z'/%3e%3cpath%20d='m-360.266%20335.499-186.4%20108.46-186.401-108.46%20186.4-107.87z'/%3e%3c/g%3e%3cg%20fill='%2390a8d8'%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='3'%3e%3cpath%20d='M-546.667%20227.419v216.54l186.4-107.619V118.96Zm0%200v216.54l-186.4-107.619V118.96Z'/%3e%3cpath%20d='m-360.266%20118.959-186.4%20108.46-186.401-108.46%20186.4-107.87z'/%3e%3c/g%3e%3cpath%20fill='%23ddbc91'%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='3'%20d='M-546.667%2010.879v216.54l186.4-107.619V-97.58Z'/%3e%3cpath%20fill='%23d9b383'%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='2.676'%20d='M-546.667%2010.879v216.54l-186.4-107.619V-97.58Z'/%3e%3cpath%20fill='%23ddbc91'%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='3'%20d='m-360.266-97.581-186.4%20108.46-186.401-108.46%20186.4-107.87z'/%3e%3cg%20fill='%23f3f4e4'%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='1.058'%3e%3cpath%20stroke-width='3'%20d='M-686.466-70.715V92.321l139.798%2080.714%20139.801-80.714V-70.715l-139.8%2081.346z'/%3e%3cpath%20stroke-width='2.999'%20d='m-406.866-70.715-139.8%2081.345-139.801-81.345%20139.8-80.902Z'/%3e%3c/g%3e%3cpath%20fill='%23d9dbbc'%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='3'%20d='M-546.667-151.617V10.63l-139.8%2081.692V-70.715z'/%3e%3cpath%20fill='%23eaeccf'%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='3'%20d='M-546.667-151.617V10.63l139.8%2081.692V-70.715z'/%3e%3cg%20fill='%2390a8d8'%20stroke='%23000'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='2.999'%3e%3cpath%20d='M-546.667%2010.873v108.27l93.2-53.81v-108.69zm0%200v108.27l-93.2-53.81v-108.69z'/%3e%3cpath%20d='m-453.466-43.357-93.2%2054.23-93.201-54.23%2093.2-53.935Z'/%3e%3c/g%3e%3cpath%20fill='none'%20d='M-787.948-253.366h482.56v946.733h-482.56z'/%3e%3c/svg%3e\"","import { t } from '@lingui/core/macro';\nimport { ActionIcon } from '@mantine/core';\nimport { forwardRef } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport InvenTreeIcon from './inventree.svg';\n\nexport const InvenTreeLogoHomeButton = forwardRef<HTMLDivElement>(\n  (props, ref) => {\n    return (\n      <div ref={ref} {...props}>\n        <NavLink to={'/'}>\n          <ActionIcon size={28} variant='transparent'>\n            <InvenTreeLogo />\n          </ActionIcon>\n        </NavLink>\n      </div>\n    );\n  }\n);\n\nexport const InvenTreeLogo = () => {\n  return <img src={InvenTreeIcon} alt={t`InvenTree Logo`} height={28} />;\n};\n","import { UnstyledButton } from '@mantine/core';\n\nimport { InvenTreeLogo } from '../items/InvenTreeLogo';\n\nexport function NavHoverMenu({\n  openDrawer\n}: Readonly<{\n  openDrawer: () => void;\n}>) {\n  return (\n    <UnstyledButton onClick={() => openDrawer()} aria-label='navigation-menu'>\n      <InvenTreeLogo />\n    </UnstyledButton>\n  );\n}\n","import {\n  Anchor,\n  Divider,\n  Group,\n  SimpleGrid,\n  Stack,\n  Text,\n  Tooltip,\n  UnstyledButton\n} from '@mantine/core';\nimport { type JSX, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { navigateToLink } from '@lib/functions/Navigation';\nimport type { InvenTreeIconType } from '@lib/types/Icons';\nimport { InvenTreeIcon } from '../../functions/icons';\nimport { StylishText } from './StylishText';\n\nexport interface MenuLinkItem {\n  id: string;\n  title: string | JSX.Element;\n  description?: string;\n  icon?: keyof InvenTreeIconType;\n  action?: () => void;\n  link?: string;\n  external?: boolean;\n  hidden?: boolean;\n}\n\nexport function MenuLinks({\n  title,\n  links,\n  beforeClick\n}: Readonly<{\n  title: string;\n  links: MenuLinkItem[];\n  beforeClick?: () => void;\n}>) {\n  const navigate = useNavigate();\n\n  // Filter out any hidden links\n  const visibleLinks = useMemo(\n    () => links.filter((item) => !item.hidden),\n    [links]\n  );\n\n  if (visibleLinks.length == 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <Stack gap='xs'>\n        <Divider />\n        <StylishText size='md'>{title}</StylishText>\n        <Divider />\n        <SimpleGrid\n          cols={{ base: 1, '400px': 2 }}\n          type='container'\n          spacing={0}\n          p={3}\n        >\n          {visibleLinks.map((item) => (\n            <Tooltip\n              key={`menu-link-tooltip-${item.id}`}\n              label={item.description}\n              hidden={!item.description}\n            >\n              {item.link && item.external ? (\n                <Anchor href={item.link}>\n                  <Group wrap='nowrap'>\n                    {item.external && (\n                      <InvenTreeIcon\n                        icon={item.icon ?? 'link'}\n                        iconProps={{ size: '14' }}\n                      />\n                    )}\n                    <Text fw={500} p={5}>\n                      {item.title}\n                    </Text>\n                  </Group>\n                </Anchor>\n              ) : (\n                <UnstyledButton\n                  onClick={(event) => {\n                    if (item.link) {\n                      beforeClick?.();\n                      navigateToLink(item.link, navigate, event);\n                    } else if (item.action) {\n                      beforeClick?.();\n                      item.action();\n                    }\n                  }}\n                >\n                  <Group wrap='nowrap'>\n                    {item.icon && (\n                      <InvenTreeIcon\n                        icon={item.icon}\n                        iconProps={{ size: '14' }}\n                      />\n                    )}\n                    <Text fw={500} p={5}>\n                      {item.title}\n                    </Text>\n                  </Group>\n                </UnstyledButton>\n              )}\n            </Tooltip>\n          ))}\n        </SimpleGrid>\n      </Stack>\n    </>\n  );\n}\n","import { t } from '@lingui/core/macro';\nimport {\n  Container,\n  Drawer,\n  Flex,\n  Group,\n  ScrollArea,\n  Space\n} from '@mantine/core';\nimport { useViewportSize } from '@mantine/hooks';\nimport { useEffect, useMemo, useRef, useState } from 'react';\n\nimport { ModelType } from '@lib/enums/ModelType';\nimport { UserRoles } from '@lib/enums/Roles';\nimport { AboutLinks, DocumentationLinks } from '../../defaults/links';\nimport useInstanceName from '../../hooks/UseInstanceName';\nimport * as classes from '../../main.css';\nimport { useGlobalSettingsState } from '../../states/SettingsStates';\nimport { useUserState } from '../../states/UserState';\nimport { InvenTreeLogo } from '../items/InvenTreeLogo';\nimport { type MenuLinkItem, MenuLinks } from '../items/MenuLinks';\nimport { StylishText } from '../items/StylishText';\n\n// TODO @matmair #1: implement plugin loading and menu item generation see #5269\nconst plugins: MenuLinkItem[] = [];\n\nexport function NavigationDrawer({\n  opened,\n  close\n}: Readonly<{\n  opened: boolean;\n  close: () => void;\n}>) {\n  return (\n    <Drawer\n      opened={opened}\n      onClose={close}\n      size='lg'\n      withCloseButton={false}\n      classNames={{\n        body: classes.navigationDrawer\n      }}\n    >\n      <DrawerContent closeFunc={close} />\n    </Drawer>\n  );\n}\n\nfunction DrawerContent({ closeFunc }: Readonly<{ closeFunc?: () => void }>) {\n  const user = useUserState();\n\n  const globalSettings = useGlobalSettingsState();\n\n  const [scrollHeight, setScrollHeight] = useState(0);\n  const ref = useRef(null);\n  const { height } = useViewportSize();\n\n  const title = useInstanceName();\n\n  // update scroll height when viewport size changes\n  useEffect(() => {\n    if (ref.current == null) return;\n    setScrollHeight(height - ref.current['clientHeight'] - 65);\n  });\n\n  // Construct menu items\n  const menuItemsNavigate: MenuLinkItem[] = useMemo(() => {\n    return [\n      {\n        id: 'home',\n        title: t`Dashboard`,\n        link: '/',\n        icon: 'dashboard'\n      },\n      {\n        id: 'parts',\n        title: t`Parts`,\n        hidden: !user.hasViewPermission(ModelType.part),\n        link: '/part',\n        icon: 'part'\n      },\n      {\n        id: 'stock',\n        title: t`Stock`,\n        link: '/stock',\n        hidden: !user.hasViewPermission(ModelType.stockitem),\n        icon: 'stock'\n      },\n      {\n        id: 'build',\n        title: t`Manufacturing`,\n        link: '/manufacturing/',\n        hidden: !user.hasViewRole(UserRoles.build),\n        icon: 'build'\n      },\n      {\n        id: 'purchasing',\n        title: t`Purchasing`,\n        link: '/purchasing/',\n        hidden: !user.hasViewRole(UserRoles.purchase_order),\n        icon: 'purchase_orders'\n      },\n      {\n        id: 'sales',\n        title: t`Sales`,\n        link: '/sales/',\n        hidden: !user.hasViewRole(UserRoles.sales_order),\n        icon: 'sales_orders'\n      },\n      {\n        id: 'users',\n        title: t`Users`,\n        link: '/core/index/users',\n        icon: 'user'\n      },\n      {\n        id: 'groups',\n        title: t`Groups`,\n        link: '/core/index/groups',\n        icon: 'group'\n      }\n    ];\n  }, [user]);\n\n  const menuItemsAction: MenuLinkItem[] = useMemo(() => {\n    return [\n      {\n        id: 'barcode',\n        title: t`Scan Barcode`,\n        link: '/scan',\n        icon: 'barcode',\n        hidden: !globalSettings.isSet('BARCODE_ENABLE')\n      }\n    ];\n  }, [user, globalSettings]);\n\n  const menuItemsSettings: MenuLinkItem[] = useMemo(() => {\n    return [\n      {\n        id: 'notifications',\n        title: t`Notifications`,\n        link: '/notifications',\n        icon: 'notification'\n      },\n      {\n        id: 'user-settings',\n        title: t`User Settings`,\n        link: '/settings/user',\n        icon: 'user'\n      },\n      {\n        id: 'system-settings',\n        title: t`System Settings`,\n        link: '/settings/system',\n        icon: 'system',\n        hidden: !user.isStaff()\n      },\n      {\n        id: 'admin-center',\n        title: t`Admin Center`,\n        link: '/settings/admin',\n        icon: 'admin',\n        hidden: !user.isStaff()\n      }\n    ];\n  }, [user]);\n\n  const menuItemsDocumentation: MenuLinkItem[] = useMemo(\n    () => DocumentationLinks(),\n    []\n  );\n\n  const menuItemsAbout: MenuLinkItem[] = useMemo(\n    () => AboutLinks(globalSettings, user),\n    []\n  );\n\n  return (\n    <Flex direction='column' mih='100vh' p={16}>\n      <Group wrap='nowrap'>\n        <InvenTreeLogo />\n        <StylishText size='xl'>{title}</StylishText>\n      </Group>\n      <Space h='xs' />\n      <Container className={classes.layoutContent} p={0}>\n        <ScrollArea h={scrollHeight} type='always' offsetScrollbars>\n          <MenuLinks\n            title={t`Navigation`}\n            links={menuItemsNavigate}\n            beforeClick={closeFunc}\n          />\n          <MenuLinks\n            title={t`Settings`}\n            links={menuItemsSettings}\n            beforeClick={closeFunc}\n          />\n          <MenuLinks\n            title={t`Actions`}\n            links={menuItemsAction}\n            beforeClick={closeFunc}\n          />\n          <Space h='md' />\n          {plugins.length > 0 ? (\n            <MenuLinks\n              title={t`Plugins`}\n              links={plugins}\n              beforeClick={closeFunc}\n            />\n          ) : (\n            <></>\n          )}\n        </ScrollArea>\n      </Container>\n      <div ref={ref}>\n        <Space h='md' />\n        <MenuLinks\n          title={t`Documentation`}\n          links={menuItemsDocumentation}\n          beforeClick={closeFunc}\n        />\n        <Space h='md' />\n        <MenuLinks\n          title={t`About`}\n          links={menuItemsAbout}\n          beforeClick={closeFunc}\n        />\n      </div>\n    </Flex>\n  );\n}\n","import { t } from '@lingui/core/macro';\nimport {\n  ActionIcon,\n  Alert,\n  Anchor,\n  Center,\n  Divider,\n  Drawer,\n  Group,\n  Loader,\n  Paper,\n  Stack,\n  Text,\n  Tooltip\n} from '@mantine/core';\nimport {\n  IconArrowRight,\n  IconBellCheck,\n  IconCircleCheck,\n  IconExclamationCircle\n} from '@tabler/icons-react';\nimport { useQuery } from '@tanstack/react-query';\nimport { useCallback, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { ModelInformationDict } from '@lib/enums/ModelInformation';\nimport type { ModelType } from '@lib/enums/ModelType';\nimport { apiUrl } from '@lib/functions/Api';\nimport { getDetailUrl } from '@lib/functions/Navigation';\nimport { getBaseUrl } from '@lib/functions/Navigation';\nimport { navigateToLink } from '@lib/functions/Navigation';\nimport { api } from '../../App';\nimport { useUserState } from '../../states/UserState';\nimport { Boundary } from '../Boundary';\nimport { StylishText } from '../items/StylishText';\n\n/**\n * Render a single notification entry in the drawer\n */\nfunction NotificationEntry({\n  notification,\n  onRead\n}: Readonly<{\n  notification: any;\n  onRead: () => void;\n}>) {\n  const navigate = useNavigate();\n\n  let link = notification.target?.link;\n\n  const model_type = notification.target?.model_type;\n  const model_id = notification.target?.model_id;\n\n  // If a valid model type is provided, that overrides the specified link\n  if (model_type as ModelType) {\n    const model_info = ModelInformationDict[model_type as ModelType];\n    if (model_info?.url_detail && model_id) {\n      link = getDetailUrl(model_type as ModelType, model_id);\n    } else if (model_info?.url_overview) {\n      link = model_info.url_overview;\n    }\n  }\n\n  return (\n    <Paper p='xs' shadow='xs'>\n      <Group justify='space-between' wrap='nowrap'>\n        <Tooltip\n          label={notification.message}\n          position='bottom-end'\n          hidden={!notification.message}\n        >\n          <Stack gap={2}>\n            <Anchor\n              href={link ? `/${getBaseUrl()}${link}` : '#'}\n              underline='hover'\n              target='_blank'\n              onClick={(event: any) => {\n                if (link) {\n                  // Mark the notification as read\n                  onRead();\n                }\n\n                if (link.startsWith('/')) {\n                  navigateToLink(link, navigate, event);\n                }\n              }}\n            >\n              <Text size='sm'>{notification.name}</Text>\n            </Anchor>\n            <Text size='xs'>{notification.age_human}</Text>\n          </Stack>\n        </Tooltip>\n        <Tooltip label={t`Mark as read`} position='bottom-end'>\n          <ActionIcon variant='transparent' onClick={onRead}>\n            <IconBellCheck />\n          </ActionIcon>\n        </Tooltip>\n      </Group>\n    </Paper>\n  );\n}\n\n/**\n * Construct a notification drawer.\n */\nexport function NotificationDrawer({\n  opened,\n  onClose\n}: Readonly<{\n  opened: boolean;\n  onClose: () => void;\n}>) {\n  const { isLoggedIn } = useUserState();\n\n  const navigate = useNavigate();\n\n  const notificationQuery = useQuery({\n    enabled: opened && isLoggedIn(),\n    queryKey: ['notifications', opened],\n    queryFn: async () =>\n      api\n        .get(apiUrl(ApiEndpoints.notifications_list), {\n          params: {\n            read: false,\n            limit: 10,\n            ordering: '-creation'\n          }\n        })\n        .then((response) => response.data),\n    refetchOnMount: false\n  });\n\n  const hasNotifications: boolean = useMemo(() => {\n    return (notificationQuery.data?.results?.length ?? 0) > 0;\n  }, [notificationQuery.data]);\n\n  const markAllAsRead = useCallback(() => {\n    api\n      .get(apiUrl(ApiEndpoints.notifications_readall), {\n        params: {\n          read: false\n        }\n      })\n      .catch((_error) => {})\n      .then((_response) => {\n        notificationQuery.refetch();\n      });\n  }, []);\n\n  const markAsRead = useCallback((notification: any) => {\n    api\n      .patch(apiUrl(ApiEndpoints.notifications_list, notification.pk), {\n        read: true\n      })\n      .then(() => {\n        notificationQuery.refetch();\n      })\n      .catch(() => {\n        notificationQuery.refetch();\n      });\n  }, []);\n\n  return (\n    <Drawer\n      opened={opened}\n      size='md'\n      position='right'\n      onClose={onClose}\n      withCloseButton={false}\n      styles={{\n        header: {\n          width: '100%'\n        },\n        title: {\n          width: '100%'\n        }\n      }}\n      title={\n        <Group justify='space-between' wrap='nowrap'>\n          <StylishText size='lg'>{t`Notifications`}</StylishText>\n          <Group justify='end' wrap='nowrap'>\n            <Tooltip label={t`Mark all as read`}>\n              <ActionIcon\n                variant='transparent'\n                onClick={() => {\n                  markAllAsRead();\n                }}\n              >\n                <IconBellCheck />\n              </ActionIcon>\n            </Tooltip>\n            <Tooltip label={t`View all notifications`}>\n              <ActionIcon\n                onClick={(event: any) => {\n                  onClose();\n                  navigateToLink('/notifications/unread', navigate, event);\n                }}\n                variant='transparent'\n              >\n                <IconArrowRight />\n              </ActionIcon>\n            </Tooltip>\n          </Group>\n        </Group>\n      }\n    >\n      <Boundary label='NotificationDrawer'>\n        <Stack gap='xs'>\n          <Divider />\n          {!notificationQuery.isFetching &&\n            !notificationQuery.isLoading &&\n            !notificationQuery.isError &&\n            !hasNotifications && (\n              <Alert color='green' icon={<IconCircleCheck />}>\n                <Text size='sm'>{t`You have no unread notifications.`}</Text>\n              </Alert>\n            )}\n          {hasNotifications &&\n            notificationQuery.data?.results?.map((notification: any) => (\n              <NotificationEntry\n                key={`notification-${notification.pk}`}\n                notification={notification}\n                onRead={() => markAsRead(notification)}\n              />\n            ))}\n          {notificationQuery.isFetching && (\n            <Center>\n              <Loader size='sm' />\n            </Center>\n          )}\n          {notificationQuery.isError && (\n            <Alert\n              color='red'\n              title={t`Error`}\n              icon={<IconExclamationCircle />}\n            >\n              <Text size='sm'>{t`Error loading notifications.`}</Text>\n            </Alert>\n          )}\n        </Stack>\n      </Boundary>\n    </Drawer>\n  );\n}\n","import { t } from '@lingui/core/macro';\nimport { Trans } from '@lingui/react/macro';\nimport {\n  Accordion,\n  ActionIcon,\n  Alert,\n  Anchor,\n  Center,\n  Checkbox,\n  Drawer,\n  Group,\n  Loader,\n  Menu,\n  Space,\n  Stack,\n  Text,\n  TextInput,\n  Tooltip\n} from '@mantine/core';\nimport { useDebouncedValue } from '@mantine/hooks';\nimport {\n  IconAlertCircle,\n  IconBackspace,\n  IconExclamationCircle,\n  IconRefresh,\n  IconSearch,\n  IconSettings,\n  IconTableExport,\n  IconX\n} from '@tabler/icons-react';\nimport { useQuery } from '@tanstack/react-query';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { type NavigateFunction, useNavigate } from 'react-router-dom';\n\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { ModelInformationDict } from '@lib/enums/ModelInformation';\nimport { ModelType } from '@lib/enums/ModelType';\nimport { UserRoles } from '@lib/enums/Roles';\nimport { apiUrl } from '@lib/functions/Api';\nimport { cancelEvent } from '@lib/functions/Events';\nimport { eventModified, navigateToLink } from '@lib/functions/Navigation';\nimport { showNotification } from '@mantine/notifications';\nimport { api } from '../../App';\nimport { useUserSettingsState } from '../../states/SettingsStates';\nimport { useUserState } from '../../states/UserState';\nimport { Boundary } from '../Boundary';\nimport { RenderInstance } from '../render/Instance';\nimport { getModelInfo } from '../render/ModelType';\n\n// Define type for handling individual search queries\ntype SearchQuery = {\n  model: ModelType;\n  searchKey?: string;\n  title?: string;\n  overviewUrl?: string;\n  enabled: boolean;\n  parameters: any;\n  results?: any;\n};\n\n/*\n * Render the results for a single search query\n */\nfunction QueryResultGroup({\n  searchText,\n  query,\n  navigate,\n  onClose,\n  onRemove,\n  onResultClick\n}: Readonly<{\n  searchText: string;\n  query: SearchQuery;\n  navigate: NavigateFunction;\n  onClose: () => void;\n  onRemove: (query: ModelType) => void;\n  onResultClick: (query: ModelType, pk: number, event: any) => void;\n}>) {\n  const modelInfo = useMemo(() => getModelInfo(query.model), [query.model]);\n\n  const overviewUrl: string | undefined = useMemo(() => {\n    // Query has a custom overview URL\n    if (query.overviewUrl) {\n      return query.overviewUrl;\n    }\n\n    return modelInfo.url_overview;\n  }, [query, modelInfo]);\n\n  // Callback function to view all results for a given query\n  const viewResults = useCallback(\n    (event: any) => {\n      cancelEvent(event);\n\n      if (overviewUrl) {\n        const url = `${overviewUrl}?search=${searchText}`;\n\n        // Close drawer if opening in the same tab\n        if (!eventModified(event)) {\n          onClose();\n        }\n\n        navigateToLink(url, navigate, event);\n      } else {\n        showNotification({\n          title: t`No Overview Available`,\n          message: t`No overview available for this model type`,\n          color: 'red',\n          icon: <IconExclamationCircle />\n        });\n      }\n    },\n    [overviewUrl, searchText]\n  );\n\n  if (query.results.count == 0) {\n    return null;\n  }\n\n  return (\n    <Accordion.Item key={query.model} value={query.model}>\n      <Accordion.Control component='div'>\n        <Group justify='space-between'>\n          <Group justify='left' gap={5} wrap='nowrap'>\n            <Tooltip label={t`View all results`} position='top-start'>\n              <ActionIcon\n                size='sm'\n                variant='transparent'\n                radius='xs'\n                aria-label={`view-all-results-${query.searchKey ?? query.model}`}\n                disabled={!overviewUrl}\n                onClick={viewResults}\n              >\n                <IconTableExport />\n              </ActionIcon>\n            </Tooltip>\n            <Text size='lg'>{query.title ?? modelInfo.label_multiple}</Text>\n            <Text size='sm' style={{ fontStyle: 'italic' }}>\n              {' '}\n              - {query.results.count} <Trans>results</Trans>\n            </Text>\n          </Group>\n          <Group justify='right' wrap='nowrap'>\n            <Tooltip label={t`Remove search group`} position='top-end'>\n              <ActionIcon\n                size='sm'\n                color='red'\n                variant='transparent'\n                radius='xs'\n                aria-label={`remove-search-group-${query.model}`}\n                onClick={() => onRemove(query.model)}\n              >\n                <IconX />\n              </ActionIcon>\n            </Tooltip>\n            <Space />\n          </Group>\n        </Group>\n      </Accordion.Control>\n      <Accordion.Panel>\n        <Stack aria-label={`search-group-results-${query.model}`}>\n          {query.results.results.map((result: any) => (\n            <Anchor\n              underline='never'\n              onClick={(event: any) =>\n                onResultClick(query.model, result.pk, event)\n              }\n              key={`result-${query.model}-${result.pk}`}\n            >\n              <RenderInstance instance={result} model={query.model} />\n            </Anchor>\n          ))}\n        </Stack>\n      </Accordion.Panel>\n    </Accordion.Item>\n  );\n}\n\n/**\n * Construct a drawer which provides quick-search functionality\n * @param\n */\nexport function SearchDrawer({\n  opened,\n  onClose\n}: Readonly<{\n  opened: boolean;\n  onClose: () => void;\n}>) {\n  const [value, setValue] = useState<string>('');\n  const [searchText] = useDebouncedValue(value, 500);\n\n  const user = useUserState();\n  const userSettings = useUserSettingsState();\n\n  const [searchRegex, setSearchRegex] = useState<boolean>(false);\n  const [searchWhole, setSearchWhole] = useState<boolean>(false);\n  const [searchNotes, setSearchNotes] = useState<boolean>(false);\n\n  useEffect(() => {\n    setSearchRegex(userSettings.isSet('SEARCH_REGEX', false));\n    setSearchWhole(userSettings.isSet('SEARCH_WHOLE', false));\n    setSearchNotes(userSettings.isSet('SEARCH_NOTES', false));\n  }, [\n    userSettings.isSet('SEARCH_REGEX', false),\n    userSettings.isSet('SEARCH_WHOLE', false),\n    userSettings.isSet('SEARCH_NOTES', false)\n  ]);\n\n  // Build out search queries based on user permissions and preferences\n  const searchQueryList: SearchQuery[] = useMemo(() => {\n    return [\n      {\n        model: ModelType.part,\n        parameters: {\n          active: userSettings.isSet('SEARCH_HIDE_INACTIVE_PARTS')\n            ? true\n            : undefined\n        },\n        enabled:\n          user.hasViewRole(UserRoles.part) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_PARTS')\n      },\n      {\n        model: ModelType.supplierpart,\n        parameters: {\n          part_detail: true,\n          supplier_detail: true,\n          manufacturer_detail: true\n        },\n        enabled:\n          user.hasViewRole(UserRoles.part) &&\n          user.hasViewRole(UserRoles.purchase_order) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_SUPPLIER_PARTS')\n      },\n      {\n        model: ModelType.manufacturerpart,\n        parameters: {\n          part_detail: true,\n          supplier_detail: true,\n          manufacturer_detail: true\n        },\n        enabled:\n          user.hasViewRole(UserRoles.part) &&\n          user.hasViewRole(UserRoles.purchase_order) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_MANUFACTURER_PARTS')\n      },\n      {\n        model: ModelType.partcategory,\n        parameters: {},\n        enabled:\n          user.hasViewRole(UserRoles.part_category) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_CATEGORIES')\n      },\n      {\n        model: ModelType.stockitem,\n        parameters: {\n          part_detail: true,\n          location_detail: true,\n          in_stock: userSettings.isSet('SEARCH_PREVIEW_HIDE_UNAVAILABLE_STOCK')\n            ? true\n            : undefined\n        },\n        enabled:\n          user.hasViewRole(UserRoles.stock) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_STOCK')\n      },\n      {\n        model: ModelType.stocklocation,\n        parameters: {},\n        enabled:\n          user.hasViewRole(UserRoles.stock_location) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_LOCATIONS')\n      },\n      {\n        model: ModelType.build,\n        parameters: {\n          part_detail: true\n        },\n        enabled:\n          user.hasViewRole(UserRoles.build) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_BUILD_ORDERS')\n      },\n      {\n        model: ModelType.company,\n        overviewUrl: '/purchasing/index/suppliers',\n        searchKey: 'supplier',\n        title: t`Suppliers`,\n        parameters: {},\n        enabled:\n          user.hasViewRole(UserRoles.purchase_order) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_COMPANIES')\n      },\n      {\n        model: ModelType.company,\n        overviewUrl: '/purchasing/index/manufacturers',\n        searchKey: 'manufacturer',\n        title: t`Manufacturers`,\n        parameters: {},\n        enabled:\n          user.hasViewRole(UserRoles.purchase_order) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_COMPANIES')\n      },\n      {\n        model: ModelType.company,\n        overviewUrl: '/sales/index/customers',\n        searchKey: 'customer',\n        title: t`Customers`,\n        parameters: {},\n        enabled:\n          user.hasViewRole(UserRoles.sales_order) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_COMPANIES')\n      },\n      {\n        model: ModelType.purchaseorder,\n        parameters: {\n          supplier_detail: true,\n          outstanding: userSettings.isSet(\n            'SEARCH_PREVIEW_EXCLUDE_INACTIVE_PURCHASE_ORDERS'\n          )\n            ? true\n            : undefined\n        },\n        enabled:\n          user.hasViewRole(UserRoles.purchase_order) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_PURCHASE_ORDERS')\n      },\n      {\n        model: ModelType.salesorder,\n        parameters: {\n          customer_detail: true,\n          outstanding: userSettings.isSet(\n            'SEARCH_PREVIEW_EXCLUDE_INACTIVE_SALES_ORDERS'\n          )\n            ? true\n            : undefined\n        },\n        enabled:\n          user.hasViewRole(UserRoles.sales_order) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_SALES_ORDERS')\n      },\n      {\n        model: ModelType.salesordershipment,\n        parameters: {},\n        enabled:\n          user.hasViewRole(UserRoles.sales_order) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_SALES_ORDER_SHIPMENTS')\n      },\n      {\n        model: ModelType.returnorder,\n        parameters: {\n          customer_detail: true,\n          outstanding: userSettings.isSet(\n            'SEARCH_PREVIEW_EXCLUDE_INACTIVE_RETURN_ORDERS'\n          )\n            ? true\n            : undefined\n        },\n        enabled:\n          user.hasViewRole(UserRoles.return_order) &&\n          userSettings.isSet('SEARCH_PREVIEW_SHOW_RETURN_ORDERS')\n      }\n    ];\n  }, [user, userSettings]);\n\n  // Construct a list of search queries based on user permissions\n  const searchQueries: SearchQuery[] = useMemo(() => {\n    return searchQueryList.filter((q) => q.enabled);\n  }, [searchQueryList]);\n\n  // Re-fetch data whenever the search term is updated\n  useEffect(() => {\n    searchQuery.refetch();\n  }, [searchText]);\n\n  // Function for performing the actual search query\n  const performSearch = async () => {\n    // Return empty result set if no search text\n    if (!searchText) {\n      return [];\n    }\n\n    const params: any = {\n      offset: 0,\n      limit: userSettings.getSetting('SEARCH_PREVIEW_RESULTS', '10'),\n      search: searchText,\n      search_regex: searchRegex,\n      search_whole: searchWhole,\n      search_notes: searchNotes\n    };\n\n    // Add in custom query parameters\n    searchQueries.forEach((query) => {\n      const key = query.searchKey || query.model;\n      params[key] = query.parameters;\n    });\n\n    return api\n      .post(apiUrl(ApiEndpoints.api_search), params)\n      .then((response) => response.data);\n  };\n\n  // Search query manager\n  const searchQuery = useQuery({\n    queryKey: ['search', searchText, searchRegex, searchWhole, searchNotes],\n    queryFn: performSearch\n  });\n\n  // A list of queries which return valid results\n  const [queryResults, setQueryResults] = useState<SearchQuery[]>([]);\n\n  // Update query results whenever the search results change\n  useEffect(() => {\n    if (searchQuery.data) {\n      let queries = searchQueries.filter(\n        (query) => (query.searchKey ?? query.model) in searchQuery.data\n      );\n\n      for (const key in searchQuery.data) {\n        const query = queries.find((q) => (q.searchKey ?? q.model) == key);\n        if (query) {\n          query.results = searchQuery.data[key];\n        }\n      }\n\n      // Filter for results with non-zero count\n      queries = queries.filter((query) => query.results.count > 0);\n\n      setQueryResults(queries);\n    } else {\n      setQueryResults([]);\n    }\n  }, [searchQuery.data]);\n\n  // Callback to remove a set of results from the list\n  function removeResults(query: ModelType) {\n    setQueryResults(queryResults.filter((q) => q.model != query));\n  }\n\n  // Callback when the drawer is closed\n  function closeDrawer() {\n    setValue('');\n    onClose();\n  }\n\n  const navigate = useNavigate();\n\n  // Callback when one of the search results is clicked\n  function onResultClick(query: ModelType, pk: number, event: any) {\n    const targetModel = ModelInformationDict[query];\n    if (targetModel.url_detail == undefined) {\n      return;\n    }\n\n    if (eventModified(event)) {\n      // Keep the drawer open in this condition\n    } else {\n      closeDrawer();\n    }\n\n    const url = targetModel.url_detail.replace(':pk', pk.toString());\n    navigateToLink(url, navigate, event);\n  }\n\n  return (\n    <Drawer\n      opened={opened}\n      size='xl'\n      onClose={closeDrawer}\n      position='right'\n      withCloseButton={false}\n      styles={{ header: { width: '100%' }, title: { width: '100%' } }}\n      title={\n        <Group justify='space-between' gap={1} wrap='nowrap'>\n          <TextInput\n            aria-label='global-search-input'\n            placeholder={t`Enter search text`}\n            value={value}\n            onChange={(event) => setValue(event.currentTarget.value)}\n            leftSection={<IconSearch size='0.8rem' />}\n            rightSection={\n              value && (\n                <IconBackspace color='red' onClick={() => setValue('')} />\n              )\n            }\n            styles={{ root: { width: '100%' } }}\n          />\n          <Tooltip label={t`Refresh search results`} position='bottom-end'>\n            <ActionIcon\n              size='lg'\n              variant='transparent'\n              onClick={() => searchQuery.refetch()}\n            >\n              <IconRefresh />\n            </ActionIcon>\n          </Tooltip>\n          <Menu position='bottom-end'>\n            <Menu.Target>\n              <Tooltip label={t`Search Options`} position='bottom-end'>\n                <ActionIcon size='lg' variant='transparent'>\n                  <IconSettings />\n                </ActionIcon>\n              </Tooltip>\n            </Menu.Target>\n            <Menu.Dropdown>\n              <Menu.Label>{t`Search Options`}</Menu.Label>\n              <Menu.Item>\n                <Checkbox\n                  label={t`Whole word search`}\n                  checked={searchWhole}\n                  onChange={(event) =>\n                    setSearchWhole(event.currentTarget.checked)\n                  }\n                />\n              </Menu.Item>\n              <Menu.Item>\n                <Checkbox\n                  label={t`Regex search`}\n                  checked={searchRegex}\n                  onChange={(event) =>\n                    setSearchRegex(event.currentTarget.checked)\n                  }\n                />\n              </Menu.Item>\n              <Menu.Item>\n                <Checkbox\n                  label={t`Notes search`}\n                  checked={searchNotes}\n                  onChange={(event) =>\n                    setSearchNotes(event.currentTarget.checked)\n                  }\n                />\n              </Menu.Item>\n            </Menu.Dropdown>\n          </Menu>\n        </Group>\n      }\n    >\n      <Boundary label='SearchDrawer'>\n        {searchQuery.isFetching && (\n          <Center>\n            <Loader />\n          </Center>\n        )}\n        {!searchQuery.isFetching && !searchQuery.isError && (\n          <Stack gap='md'>\n            <Accordion\n              multiple\n              defaultValue={searchQueries.map((q) => q.model)}\n            >\n              {queryResults.map((query, idx) => (\n                <QueryResultGroup\n                  key={idx}\n                  searchText={searchText}\n                  query={query}\n                  navigate={navigate}\n                  onClose={closeDrawer}\n                  onRemove={(query) => removeResults(query)}\n                  onResultClick={(query, pk, event) =>\n                    onResultClick(query, pk, event)\n                  }\n                />\n              ))}\n            </Accordion>\n          </Stack>\n        )}\n        {searchQuery.isError && (\n          <Alert\n            color='red'\n            radius='sm'\n            variant='light'\n            title={t`Error`}\n            icon={<IconAlertCircle size='1rem' />}\n          >\n            <Trans>An error occurred during search query</Trans>\n          </Alert>\n        )}\n        {searchText &&\n          !searchQuery.isFetching &&\n          !searchQuery.isError &&\n          queryResults.length == 0 && (\n            <Alert\n              color='blue'\n              radius='sm'\n              variant='light'\n              title={t`No Results`}\n              icon={<IconSearch size='1rem' />}\n            >\n              <Trans>No results available for search query</Trans>\n            </Alert>\n          )}\n      </Boundary>\n    </Drawer>\n  );\n}\n","import {\n  ActionIcon,\n  Container,\n  Group,\n  Indicator,\n  Tabs,\n  Text,\n  Tooltip,\n  UnstyledButton\n} from '@mantine/core';\nimport {\n  useDisclosure,\n  useDocumentVisibility,\n  useHotkeys\n} from '@mantine/hooks';\nimport { IconBell, IconSearch } from '@tabler/icons-react';\nimport { useQuery } from '@tanstack/react-query';\nimport { type ReactNode, useEffect, useMemo, useState } from 'react';\nimport { useMatch, useNavigate } from 'react-router-dom';\n\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { apiUrl } from '@lib/functions/Api';\nimport { getBaseUrl } from '@lib/functions/Navigation';\nimport { navigateToLink } from '@lib/functions/Navigation';\nimport { t } from '@lingui/core/macro';\nimport { useShallow } from 'zustand/react/shallow';\nimport { api } from '../../App';\nimport type { NavigationUIFeature } from '../../components/plugins/PluginUIFeatureTypes';\nimport { getNavTabs } from '../../defaults/links';\nimport { generateUrl } from '../../functions/urls';\nimport { usePluginUIFeature } from '../../hooks/UsePluginUIFeature';\nimport * as classes from '../../main.css';\nimport { useLocalState } from '../../states/LocalState';\nimport { useServerApiState } from '../../states/ServerApiState';\nimport {\n  useGlobalSettingsState,\n  useUserSettingsState\n} from '../../states/SettingsStates';\nimport { useUserState } from '../../states/UserState';\nimport { ScanButton } from '../buttons/ScanButton';\nimport { SpotlightButton } from '../buttons/SpotlightButton';\nimport { Alerts } from './Alerts';\nimport { MainMenu } from './MainMenu';\nimport { NavHoverMenu } from './NavHoverMenu';\nimport { NavigationDrawer } from './NavigationDrawer';\nimport { NotificationDrawer } from './NotificationDrawer';\nimport { SearchDrawer } from './SearchDrawer';\n\nexport function Header() {\n  const [setNavigationOpen, navigationOpen] = useLocalState(\n    useShallow((state) => [state.setNavigationOpen, state.navigationOpen])\n  );\n  const [server] = useServerApiState(useShallow((state) => [state.server]));\n  const [navDrawerOpened, { open: openNavDrawer, close: closeNavDrawer }] =\n    useDisclosure(navigationOpen);\n\n  const [\n    searchDrawerOpened,\n    { open: openSearchDrawer, close: closeSearchDrawer }\n  ] = useDisclosure(false);\n\n  useHotkeys([\n    [\n      '/',\n      () => {\n        openSearchDrawer();\n      }\n    ],\n    [\n      'mod+/',\n      () => {\n        openSearchDrawer();\n      }\n    ]\n  ]);\n\n  const [\n    notificationDrawerOpened,\n    { open: openNotificationDrawer, close: closeNotificationDrawer }\n  ] = useDisclosure(false);\n\n  const { isLoggedIn } = useUserState();\n  const [notificationCount, setNotificationCount] = useState<number>(0);\n  const globalSettings = useGlobalSettingsState();\n  const userSettings = useUserSettingsState();\n\n  const navbar_message = useMemo(() => {\n    return server.customize?.navbar_message;\n  }, [server.customize]);\n\n  const visibility = useDocumentVisibility();\n\n  // Fetch number of notifications for the current user\n  const notifications = useQuery({\n    queryKey: ['notification-count', visibility],\n    enabled: isLoggedIn() && visibility === 'visible',\n    queryFn: async () => {\n      if (!isLoggedIn() || visibility != 'visible') {\n        return null;\n      }\n\n      return api\n        .get(apiUrl(ApiEndpoints.notifications_list), {\n          params: {\n            read: false,\n            limit: 1\n          }\n        })\n        .then((response: any) => {\n          setNotificationCount(response?.data?.count ?? 0);\n          return response.data ?? null;\n        });\n    },\n    // Refetch every minute, *if* the tab is visible\n    refetchInterval: 60 * 1000,\n    refetchOnMount: true\n  });\n\n  // Sync Navigation Drawer state with zustand\n  useEffect(() => {\n    if (navigationOpen === navDrawerOpened) return;\n    setNavigationOpen(navDrawerOpened);\n  }, [navDrawerOpened]);\n\n  useEffect(() => {\n    if (navigationOpen === navDrawerOpened) return;\n    if (navigationOpen) openNavDrawer();\n    else closeNavDrawer();\n  }, [navigationOpen]);\n\n  const headerStyle: any = useMemo(() => {\n    const sticky: boolean = userSettings.isSet('STICKY_HEADER', true);\n\n    if (sticky) {\n      return {\n        position: 'sticky',\n        zIndex: 10,\n        top: 0\n      };\n    } else {\n      return {};\n    }\n  }, [userSettings]);\n\n  return (\n    <div className={classes.layoutHeader} style={headerStyle}>\n      <SearchDrawer opened={searchDrawerOpened} onClose={closeSearchDrawer} />\n      <NavigationDrawer opened={navDrawerOpened} close={closeNavDrawer} />\n      <NotificationDrawer\n        opened={notificationDrawerOpened}\n        onClose={() => {\n          notifications.refetch();\n          closeNotificationDrawer();\n        }}\n      />\n      <Container className={classes.layoutHeaderSection} size='100%'>\n        <Group justify='space-between'>\n          <Group>\n            <NavHoverMenu openDrawer={openNavDrawer} />\n            <NavTabs />\n          </Group>\n          {navbar_message && (\n            <Text>\n              {/* biome-ignore lint/security/noDangerouslySetInnerHtml: <explanation> */}\n              <span dangerouslySetInnerHTML={{ __html: navbar_message }} />\n            </Text>\n          )}\n          <Group>\n            <Tooltip position='bottom-end' label={t`Search`}>\n              <ActionIcon\n                onClick={openSearchDrawer}\n                variant='transparent'\n                aria-label='open-search'\n              >\n                <IconSearch />\n              </ActionIcon>\n            </Tooltip>\n            {userSettings.isSet('SHOW_SPOTLIGHT') && <SpotlightButton />}\n            {globalSettings.isSet('BARCODE_ENABLE') && <ScanButton />}\n            <Indicator\n              radius='lg'\n              size='18'\n              label={notificationCount}\n              color='red'\n              disabled={notificationCount <= 0}\n              inline\n            >\n              <Tooltip position='bottom-end' label={t`Notifications`}>\n                <ActionIcon\n                  onClick={openNotificationDrawer}\n                  variant='transparent'\n                  aria-label='open-notifications'\n                >\n                  <IconBell />\n                </ActionIcon>\n              </Tooltip>\n            </Indicator>\n            <Alerts />\n            <MainMenu />\n          </Group>\n        </Group>\n      </Container>\n    </div>\n  );\n}\n\nfunction NavTabs() {\n  const user = useUserState();\n  const navigate = useNavigate();\n  const match = useMatch(':tabName/*');\n  const tabValue = match?.params.tabName;\n  const navTabs = getNavTabs(user);\n  const userSettings = useUserSettingsState();\n\n  const withIcons: boolean = useMemo(\n    () => userSettings.isSet('ICONS_IN_NAVBAR', false),\n    [userSettings]\n  );\n\n  const extraNavs = usePluginUIFeature<NavigationUIFeature>({\n    featureType: 'navigation',\n    context: {}\n  });\n\n  const tabs: ReactNode[] = useMemo(() => {\n    const _tabs: ReactNode[] = [];\n\n    const mainNavTabs = getNavTabs(user);\n\n    // static content\n    mainNavTabs.forEach((tab) => {\n      if (tab.role && !user.hasViewRole(tab.role)) {\n        return;\n      }\n\n      _tabs.push(\n        <Tabs.Tab\n          value={tab.name}\n          key={tab.name}\n          leftSection={\n            withIcons &&\n            tab.icon && (\n              <ActionIcon variant='transparent'>{tab.icon}</ActionIcon>\n            )\n          }\n          onClick={(event: any) =>\n            navigateToLink(`/${tab.name}`, navigate, event)\n          }\n        >\n          <UnstyledButton\n            component={'a'}\n            href={generateUrl(`/${getBaseUrl()}/${tab.name}`)}\n          >\n            {tab.title}\n          </UnstyledButton>\n        </Tabs.Tab>\n      );\n    });\n    // dynamic content\n    extraNavs.forEach((nav) => {\n      _tabs.push(\n        <Tabs.Tab\n          value={nav.options.title}\n          key={nav.options.key}\n          onClick={(event: any) =>\n            navigateToLink(nav.options.options.url, navigate, event)\n          }\n        >\n          {nav.options.title}\n        </Tabs.Tab>\n      );\n    });\n\n    return _tabs;\n  }, [extraNavs, navTabs, user, withIcons]);\n\n  return (\n    <Tabs\n      defaultValue='home'\n      classNames={{\n        root: classes.tabs,\n        list: classes.tabsList,\n        tab: classes.tab\n      }}\n      value={tabValue}\n    >\n      <Tabs.List>{tabs.map((tab) => tab)}</Tabs.List>\n    </Tabs>\n  );\n}\n","import { t } from '@lingui/core/macro';\nimport { Container, Flex, Space } from '@mantine/core';\nimport { Spotlight, createSpotlight } from '@mantine/spotlight';\nimport { IconSearch } from '@tabler/icons-react';\nimport { type JSX, useEffect, useState } from 'react';\nimport { Navigate, Outlet, useLocation, useNavigate } from 'react-router-dom';\n\nimport { getActions } from '../../defaults/actions';\nimport * as classes from '../../main.css';\nimport { useUserSettingsState } from '../../states/SettingsStates';\nimport { useUserState } from '../../states/UserState';\nimport { Boundary } from '../Boundary';\nimport { Footer } from './Footer';\nimport { Header } from './Header';\n\nexport const ProtectedRoute = ({ children }: { children: JSX.Element }) => {\n  const location = useLocation();\n  const { isLoggedIn } = useUserState();\n\n  if (!isLoggedIn()) {\n    return (\n      <Navigate\n        to='/logged-in'\n        state={{\n          redirectUrl: location.pathname,\n          queryParams: location.search,\n          anchor: location.hash\n        }}\n      />\n    );\n  }\n\n  return children;\n};\n\nexport const [firstStore, firstSpotlight] = createSpotlight();\n\nexport default function LayoutComponent() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const userSettings = useUserSettingsState();\n\n  const defaultActions = getActions(navigate);\n  const [actions, setActions] = useState(defaultActions);\n  const [customActions, setCustomActions] = useState<boolean>(false);\n\n  function actionsAreChanging(change: []) {\n    if (change.length > defaultActions.length) setCustomActions(true);\n    setActions(change);\n  }\n  // firstStore.subscribe(actionsAreChanging);\n\n  // clear additional actions on location change\n  useEffect(() => {\n    if (customActions) {\n      setActions(defaultActions);\n      setCustomActions(false);\n    }\n  }, [location]);\n\n  return (\n    <ProtectedRoute>\n      <Flex direction='column' mih='100vh'>\n        <Header />\n        <Container className={classes.layoutContent} size='100%'>\n          <Boundary label={'layout'}>\n            <Outlet />\n          </Boundary>\n          {/* </ErrorBoundary> */}\n        </Container>\n        <Space h='xl' />\n        <Footer />\n        {userSettings.isSet('SHOW_SPOTLIGHT') && (\n          <Spotlight\n            actions={actions}\n            store={firstStore}\n            highlightQuery\n            searchProps={{\n              leftSection: <IconSearch size='1.2rem' />,\n              placeholder: t`Search...`\n            }}\n            shortcut={['mod + K']}\n            nothingFound={t`Nothing found...`}\n          />\n        )}\n      </Flex>\n    </ProtectedRoute>\n  );\n}\n"],"names":["createSpotlightStore","createStore","useSpotlight","store","useStore","updateSpotlightStateAction","update","state","openSpotlightAction","closeSpotlightAction","toggleSpotlightAction","setSelectedAction","index","setListId","id","findElementByQuerySelector","selector","root","element","children","i","child","shadowElement","nestedElement","selectAction","actionsList","selected","actions","nextIndex","selectedIndex","clamp","_a","_b","selectNextAction","selectPreviousAction","triggerSelectedAction","registerAction","setQuery","query","clearSpotlightState","clearQuery","spotlightActions","createSpotlight","spotlightStore","spotlight","openSpotlight","closeSpotlight","toggleSpotlight","isActionsGroup","item","_item","getKeywords","keywords","keyword","getFlatActions","data","acc","action","flatActionsToGroups","groups","result","defaultSpotlightFilter","_query","priorityMatrix","limitActions","limit","count","groupActions","SpotlightProvider","useSpotlightContext","createSafeContext","defaultProps","SpotlightAction","factory","_props","ref","props","useProps","className","style","classNames","styles","description","label","leftSection","rightSection","dimmedSections","highlightQuery","highlightColor","closeSpotlightOnTrigger","onClick","onMouseDown","vars","others","ctx","stylesApi","labelNode","jsx","Highlight","UnstyledButton","event","jsxs","Fragment","Box","classes","SpotlightActionsGroup","SpotlightActionsList","generatedId","useId","listId","useEffect","ScrollArea","SpotlightEmpty","SpotlightFooter","getHotkeys","hotkeys","open","hotkey","getDefaultZIndex","SpotlightRoot","unstyled","onQueryChange","transitionProps","clearQueryOnClose","shortcut","tagsToIgnore","triggerOnContentEditable","disabled","onSpotlightOpen","onSpotlightClose","forceOpened","closeOnActionTrigger","maxHeight","scrollable","attributes","theme","useMantineTheme","opened","storeQuery","q","getStyles","useStyles","useHotkeys","useDidUpdate","Modal","resolveClassNames","resolveStyles","rem","SpotlightSearch","onKeyDown","onChange","value","inputStyles","isComposing","setIsComposing","useState","handleKeyDown","Input","Spotlight","searchProps","filter","nothingFound","useUncontrolled","filteredActions","items","actionData","openQrModal","navigate","openContextModal","modal","innerProps","getActions","setNavigationOpen","useLocalState","useShallow","user","useUserState","_i18n","_","IconLink","window","location","href","docLinks","faq","aboutInvenTree","serverInfo","licenseInfo","IconPointer","IconBarcode","is_staff","push","Footer","layoutFooter","ScanButton","close","useDisclosure","Tooltip","ActionIcon","IconQrcode","BarcodeScanDialog","SpotlightButton","firstSpotlight","IconCommand","MainMenu","useNavigate","username","colorScheme","toggleColorScheme","useMantineColorScheme","Menu","Group","Text","lineHeight","Skeleton","radiusDefault","IconChevronDown","_Trans","IconUserCog","Link","IconSettings","IconUserBolt","IconSun","IconMoonStars","colors","yellow","blue","IconInfoCircle","IconLogout","doLogout","InvenTreeIcon","forwardRef","NavLink","InvenTreeLogo","NavHoverMenu","openDrawer","MenuLinks","title","links","beforeClick","visibleLinks","useMemo","hidden","length","Stack","Divider","StylishText","SimpleGrid","base","map","link","external","Anchor","icon","size","navigateToLink","plugins","NavigationDrawer","Drawer","body","navigationDrawer","DrawerContent","closeFunc","globalSettings","useGlobalSettingsState","scrollHeight","setScrollHeight","useRef","height","useViewportSize","useInstanceName","current","menuItemsNavigate","hasViewPermission","ModelType","part","stockitem","hasViewRole","UserRoles","build","purchase_order","sales_order","menuItemsAction","isSet","menuItemsSettings","isStaff","menuItemsDocumentation","DocumentationLinks","menuItemsAbout","AboutLinks","Flex","Space","Container","NotificationEntry","notification","onRead","target","model_type","model_id","model_info","ModelInformationDict","url_detail","getDetailUrl","url_overview","Paper","message","getBaseUrl","startsWith","name","age_human","IconBellCheck","NotificationDrawer","onClose","isLoggedIn","notificationQuery","useQuery","enabled","queryKey","queryFn","api","get","apiUrl","ApiEndpoints","notifications_list","params","read","ordering","then","response","refetchOnMount","hasNotifications","results","markAllAsRead","useCallback","notifications_readall","catch","_error","_response","refetch","markAsRead","patch","pk","header","width","IconArrowRight","Boundary","isFetching","isLoading","isError","Alert","IconCircleCheck","Center","Loader","IconExclamationCircle","QueryResultGroup","searchText","onRemove","onResultClick","modelInfo","getModelInfo","model","overviewUrl","viewResults","cancelEvent","url","eventModified","showNotification","color","Accordion","searchKey","IconTableExport","label_multiple","fontStyle","IconX","RenderInstance","SearchDrawer","setValue","useDebouncedValue","userSettings","useUserSettingsState","searchRegex","setSearchRegex","searchWhole","setSearchWhole","searchNotes","setSearchNotes","searchQueryList","parameters","active","undefined","supplierpart","part_detail","supplier_detail","manufacturer_detail","manufacturerpart","partcategory","part_category","location_detail","in_stock","stock","stocklocation","stock_location","company","purchaseorder","outstanding","salesorder","customer_detail","salesordershipment","returnorder","return_order","searchQueries","searchQuery","offset","getSetting","search","search_regex","search_whole","search_notes","forEach","key","post","api_search","performSearch","queryResults","setQueryResults","queries","find","removeResults","closeDrawer","targetModel","replace","toString","TextInput","currentTarget","IconSearch","IconBackspace","IconRefresh","Checkbox","checked","idx","IconAlertCircle","Header","navigationOpen","server","useServerApiState","navDrawerOpened","openNavDrawer","closeNavDrawer","searchDrawerOpened","openSearchDrawer","closeSearchDrawer","notificationDrawerOpened","openNotificationDrawer","closeNotificationDrawer","notificationCount","setNotificationCount","navbar_message","customize","visibility","useDocumentVisibility","notifications","refetchInterval","headerStyle","position","zIndex","top","NavTabs","__html","Indicator","IconBell","Alerts","match","useMatch","tabValue","tabName","navTabs","getNavTabs","withIcons","extraNavs","usePluginUIFeature","featureType","context","tabs","_tabs","mainNavTabs","tab","role","Tabs","generateUrl","nav","options","list","ProtectedRoute","useLocation","Navigate","redirectUrl","pathname","queryParams","anchor","hash","firstStore","LayoutComponent","defaultActions","setActions","customActions","setCustomActions","Outlet","placeholder"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}