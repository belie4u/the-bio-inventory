{"version":3,"file":"ProjectCodeTable-KW9sKNny.js","sources":["../../../../../../frontend/src/tables/settings/ProjectCodeTable.tsx"],"sourcesContent":["import { t } from '@lingui/core/macro';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { AddItemButton } from '@lib/components/AddItemButton';\nimport {\n  type RowAction,\n  RowDeleteAction,\n  RowEditAction\n} from '@lib/components/RowActions';\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { UserRoles } from '@lib/enums/Roles';\nimport { apiUrl } from '@lib/functions/Api';\nimport type { TableColumn } from '@lib/types/Tables';\nimport { projectCodeFields } from '../../forms/CommonForms';\nimport {\n  useCreateApiFormModal,\n  useDeleteApiFormModal,\n  useEditApiFormModal\n} from '../../hooks/UseForm';\nimport { useTable } from '../../hooks/UseTable';\nimport { useUserState } from '../../states/UserState';\nimport { DescriptionColumn, ResponsibleColumn } from '../ColumnRenderers';\nimport { InvenTreeTable } from '../InvenTreeTable';\n\n/**\n * Table for displaying list of project codes\n */\nexport default function ProjectCodeTable() {\n  const table = useTable('project-codes');\n\n  const user = useUserState();\n\n  const columns: TableColumn[] = useMemo(() => {\n    return [\n      {\n        accessor: 'code',\n        sortable: true\n      },\n      DescriptionColumn({}),\n      ResponsibleColumn({})\n    ];\n  }, []);\n\n  const newProjectCode = useCreateApiFormModal({\n    url: ApiEndpoints.project_code_list,\n    title: t`Add Project Code`,\n    fields: projectCodeFields(),\n    table: table\n  });\n\n  const [selectedProjectCode, setSelectedProjectCode] = useState<\n    number | undefined\n  >(undefined);\n\n  const editProjectCode = useEditApiFormModal({\n    url: ApiEndpoints.project_code_list,\n    pk: selectedProjectCode,\n    title: t`Edit Project Code`,\n    fields: projectCodeFields(),\n    table: table\n  });\n\n  const deleteProjectCode = useDeleteApiFormModal({\n    url: ApiEndpoints.project_code_list,\n    pk: selectedProjectCode,\n    title: t`Delete Project Code`,\n    table: table\n  });\n\n  const rowActions = useCallback(\n    (record: any): RowAction[] => {\n      return [\n        RowEditAction({\n          hidden: !user.hasChangeRole(UserRoles.admin),\n          onClick: () => {\n            setSelectedProjectCode(record.pk);\n            editProjectCode.open();\n          }\n        }),\n        RowDeleteAction({\n          hidden: !user.hasDeleteRole(UserRoles.admin),\n          onClick: () => {\n            setSelectedProjectCode(record.pk);\n            deleteProjectCode.open();\n          }\n        })\n      ];\n    },\n    [user]\n  );\n\n  const tableActions = useMemo(() => {\n    return [\n      <AddItemButton\n        key='add'\n        onClick={() => newProjectCode.open()}\n        tooltip={t`Add project code`}\n      />\n    ];\n  }, []);\n\n  return (\n    <>\n      {newProjectCode.modal}\n      {editProjectCode.modal}\n      {deleteProjectCode.modal}\n      <InvenTreeTable\n        url={apiUrl(ApiEndpoints.project_code_list)}\n        tableState={table}\n        columns={columns}\n        props={{\n          rowActions: rowActions,\n          tableActions: tableActions,\n          enableDownload: true\n        }}\n      />\n    </>\n  );\n}\n"],"names":["ProjectCodeTable","table","useTable","user","useUserState","columns","useMemo","accessor","sortable","DescriptionColumn","ResponsibleColumn","newProjectCode","useCreateApiFormModal","url","ApiEndpoints","project_code_list","title","_i18n","_","id","fields","projectCodeFields","selectedProjectCode","setSelectedProjectCode","useState","undefined","editProjectCode","useEditApiFormModal","pk","deleteProjectCode","useDeleteApiFormModal","rowActions","useCallback","record","RowEditAction","hidden","hasChangeRole","UserRoles","admin","onClick","open","RowDeleteAction","hasDeleteRole","tableActions","AddItemButton","jsxs","Fragment","modal","jsx","InvenTreeTable","apiUrl","enableDownload"],"mappings":"gmBA2BA,SAAwBA,GAAmB,CACzC,MAAMC,EAAQC,EAAS,eAAe,EAEhCC,EAAOC,EAAAA,EAEPC,EAAyBC,EAAAA,QAAQ,IAC9B,CACL,CACEC,SAAU,OACVC,SAAU,EAAA,EAEZC,EAAkB,CAAA,CAAE,EACpBC,EAAkB,CAAA,CAAE,CAAC,EAEtB,CAAA,CAAE,EAECC,EAAiBC,EAAsB,CAC3CC,IAAKC,EAAaC,kBAClBC,MAAKC,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAkB,EACzBC,OAAQC,EAAAA,EACRpB,MAAAA,CAAAA,CACD,EAEK,CAACqB,EAAqBC,CAAsB,EAAIC,EAAAA,SAEpDC,MAAS,EAELC,EAAkBC,EAAoB,CAC1Cd,IAAKC,EAAaC,kBAClBa,GAAIN,EACJN,MAAKC,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAmB,EAC1BC,OAAQC,EAAAA,EACRpB,MAAAA,CAAAA,CACD,EAEK4B,EAAoBC,EAAsB,CAC9CjB,IAAKC,EAAaC,kBAClBa,GAAIN,EACJN,MAAKC,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAqB,EAC5BlB,MAAAA,CAAAA,CACD,EAEK8B,EAAaC,cAChBC,GACQ,CACLC,EAAc,CACZC,OAAQ,CAAChC,EAAKiC,cAAcC,EAAUC,KAAK,EAC3CC,QAASA,IAAM,CACbhB,EAAuBU,EAAOL,EAAE,EAChCF,EAAgBc,KAAAA,CAClB,CAAA,CACD,EACDC,EAAgB,CACdN,OAAQ,CAAChC,EAAKuC,cAAcL,EAAUC,KAAK,EAC3CC,QAASA,IAAM,CACbhB,EAAuBU,EAAOL,EAAE,EAChCC,EAAkBW,KAAAA,CACpB,CAAA,CACD,CAAC,EAGN,CAACrC,CAAI,CACP,EAEMwC,EAAerC,EAAAA,QAAQ,IACpB,OACJsC,EAAA,CAEC,QAAS,IAAMjC,EAAe6B,KAAAA,EAC9B,QAAQvB,EAAAC,EAAC,CAAAC,GAAA,QAAA,CAAkB,CAAC,EAFxB,MAGJ,EAEH,CAAA,CAAE,EAEL,OACE0B,EAAAA,KAAAC,WAAA,CACGnC,SAAAA,CAAAA,EAAeoC,MACfrB,EAAgBqB,MAChBlB,EAAkBkB,MACnBC,EAAAA,IAACC,EAAA,CACC,IAAKC,EAAOpC,EAAaC,iBAAiB,EAC1C,WAAYd,EACZ,QAAAI,EACA,MAAO,CACL0B,WAAAA,EACAY,aAAAA,EACAQ,eAAgB,EAAA,CAClB,CAAE,CAAA,EAEN,CAEJ"}