{"version":3,"file":"AdminButton-DmZZOxW8.js","sources":["../../../../../../frontend/src/components/buttons/AdminButton.tsx"],"sourcesContent":["import { t } from '@lingui/core/macro';\nimport { IconUserStar } from '@tabler/icons-react';\nimport { useCallback, useMemo } from 'react';\n\nimport { ActionButton } from '@lib/components/ActionButton';\nimport { ModelInformationDict } from '@lib/enums/ModelInformation';\nimport type { ModelType } from '@lib/enums/ModelType';\nimport { eventModified } from '@lib/functions/Navigation';\nimport { generateUrl } from '../../functions/urls';\nimport { useServerApiState } from '../../states/ServerApiState';\nimport { useUserState } from '../../states/UserState';\n\nexport type AdminButtonProps = {\n  model: ModelType;\n  id: number | undefined;\n};\n\n/*\n * A button that is used to navigate to the admin page for the selected item.\n *\n * This button is only rendered if:\n * - The admin interface is enabled for the server\n * - The selected model has an associated admin URL\n * - The user has \"superuser\" role\n * - The user has at least read rights for the selected item\n */\nexport default function AdminButton(props: Readonly<AdminButtonProps>) {\n  const user = useUserState();\n  const server = useServerApiState();\n\n  const enabled: boolean = useMemo(() => {\n    // Only users with superuser permission will see this button\n    if (!user || !user.isLoggedIn() || !user.isSuperuser()) {\n      return false;\n    }\n\n    const modelDef = ModelInformationDict[props.model];\n\n    // Check if the server has the admin interface enabled\n    if (!server.server.django_admin) {\n      return false;\n    }\n\n    // No admin URL associated with the model\n    if (!modelDef.admin_url) {\n      return false;\n    }\n\n    // No primary key provided\n    if (!props.id) {\n      return false;\n    }\n\n    return true;\n  }, [user, props.model, props.id]);\n\n  const openAdmin = useCallback(\n    (event: any) => {\n      const modelDef = ModelInformationDict[props.model];\n\n      if (!modelDef.admin_url) {\n        return;\n      }\n\n      // Generate the URL for the admin interface\n      const url = generateUrl(\n        `${server.server.django_admin}${modelDef.admin_url}${props.id}/`\n      );\n\n      if (eventModified(event)) {\n        // Open the link in a new tab\n        window.open(url, '_blank');\n      } else {\n        window.open(url, '_self');\n      }\n    },\n    [props.model, props.id]\n  );\n\n  return (\n    <ActionButton\n      icon={<IconUserStar />}\n      color='blue'\n      size='lg'\n      variant='filled'\n      tooltip={t`Open in admin interface`}\n      hidden={!enabled}\n      onClick={openAdmin}\n      tooltipAlignment='bottom'\n    />\n  );\n}\n"],"names":["AdminButton","props","user","useUserState","server","useServerApiState","enabled","useMemo","isLoggedIn","isSuperuser","modelDef","ModelInformationDict","model","django_admin","admin_url","id","openAdmin","useCallback","event","url","generateUrl","eventModified","window","open","jsx","ActionButton","IconUserStar","_i18n","_"],"mappings":"kLA0BA,SAAwBA,EAAYC,EAAmC,CACrE,MAAMC,EAAOC,EAAAA,EACPC,EAASC,EAAAA,EAETC,EAAmBC,EAAAA,QAAQ,IAAM,CAErC,GAAI,CAACL,GAAQ,CAACA,EAAKM,cAAgB,CAACN,EAAKO,cACvC,MAAO,GAGT,MAAMC,EAAWC,EAAqBV,EAAMW,KAAK,EAajD,MAVI,GAACR,EAAOA,OAAOS,cAKf,CAACH,EAASI,WAKV,CAACb,EAAMc,GAKb,EAAG,CAACb,EAAMD,EAAMW,MAAOX,EAAMc,EAAE,CAAC,EAE1BC,EAAYC,cACfC,GAAe,CACd,MAAMR,EAAWC,EAAqBV,EAAMW,KAAK,EAEjD,GAAI,CAACF,EAASI,UACZ,OAIF,MAAMK,EAAMC,EACV,GAAGhB,EAAOA,OAAOS,YAAY,GAAGH,EAASI,SAAS,GAAGb,EAAMc,EAAE,GAC/D,EAEIM,EAAcH,CAAK,EAErBI,OAAOC,KAAKJ,EAAK,QAAQ,EAEzBG,OAAOC,KAAKJ,EAAK,OAAO,CAE5B,EACA,CAAClB,EAAMW,MAAOX,EAAMc,EAAE,CACxB,EAEA,OACES,EAAAA,IAACC,EAAA,CACC,KAAMD,EAAAA,IAACE,EAAA,EAAY,EACnB,MAAM,OACN,KAAK,KACL,QAAQ,SACR,QAAQC,EAAAC,EAAC,CAAAb,GAAA,QAAA,CAAyB,EAClC,OAAQ,CAACT,EACT,QAASU,EACT,iBAAiB,SAAQ,CAG/B"}