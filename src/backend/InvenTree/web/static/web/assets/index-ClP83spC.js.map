{"version":3,"mappings":"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","names":["ApiEndpoints","api_server_info","user_list","user_set_password","user_me","user_profile","user_roles","user_token","user_tokens","user_simple_login","user_reset","user_reset_set","auth_pwd_change","auth_login","auth_login_2fa","auth_session","auth_signup","auth_authenticators","auth_recovery","auth_mfa_reauthenticate","auth_totp","auth_trust","auth_reauthenticate","auth_email","auth_email_verify","auth_providers","auth_provider_redirect","auth_config","currency_list","currency_refresh","all_units","task_overview","task_pending_list","task_scheduled_list","task_failed_list","api_search","settings_global_list","settings_user_list","news","global_status","custom_state_list","version","license","group_list","owner_list","ruleset_list","content_type_list","icons","selectionlist_list","selectionlist_detail","barcode","barcode_history","barcode_link","barcode_unlink","barcode_generate","data_output","import_session_list","import_session_accept_fields","import_session_accept_rows","import_session_column_mapping_list","import_session_row_list","notifications_list","notifications_readall","build_order_list","build_order_issue","build_order_cancel","build_order_hold","build_order_complete","build_output_complete","build_output_create","build_output_scrap","build_output_delete","build_order_auto_allocate","build_order_allocate","build_order_consume","build_order_deallocate","build_line_list","build_item_list","bom_list","bom_item_validate","bom_validate","bom_substitute_list","part_list","part_parameter_list","part_parameter_template_list","part_thumbs_list","part_pricing","part_requirements","part_serial_numbers","part_scheduling","part_pricing_internal","part_pricing_sale","part_stocktake_list","category_list","category_tree","category_parameter_list","related_part_list","part_test_template_list","company_list","contact_list","address_list","supplier_part_list","supplier_part_pricing_list","manufacturer_part_list","manufacturer_part_parameter_list","stock_location_list","stock_location_type_list","stock_location_tree","stock_item_list","stock_tracking_list","stock_test_result_list","stock_transfer","stock_remove","stock_return","stock_add","stock_count","stock_change_status","stock_merge","stock_assign","stock_status","stock_install","stock_uninstall","stock_serialize","stock_serial_info","generate_batch_code","generate_serial_number","purchase_order_list","purchase_order_issue","purchase_order_hold","purchase_order_cancel","purchase_order_complete","purchase_order_line_list","purchase_order_extra_line_list","purchase_order_receive","sales_order_list","sales_order_issue","sales_order_hold","sales_order_cancel","sales_order_ship","sales_order_complete","sales_order_allocate","sales_order_allocate_serials","sales_order_line_list","sales_order_extra_line_list","sales_order_allocation_list","sales_order_shipment_list","sales_order_shipment_complete","return_order_list","return_order_issue","return_order_hold","return_order_cancel","return_order_complete","return_order_receive","return_order_line_list","return_order_extra_line_list","label_list","label_print","report_list","report_print","report_snippet","report_asset","plugin_list","plugin_setting_list","plugin_user_setting_list","plugin_registry_status","plugin_install","plugin_reload","plugin_activate","plugin_uninstall","plugin_admin","plugin_ui_features_list","plugin_locate_item","machine_types_list","machine_driver_list","machine_registry_status","machine_list","machine_restart","machine_setting_list","machine_setting_detail","attachment_list","error_report_list","project_code_list","custom_unit_list","notes_image_upload","email_list","email_test","config_list","ModelInformationDict","part","label","_i18n","_","id","label_multiple","url_overview","url_detail","api_endpoint","admin_url","icon","partparametertemplate","parttesttemplate","supplierpart","manufacturerpart","partcategory","stockitem","stocklocation","stocklocationtype","stockhistory","build","buildline","builditem","company","projectcode","purchaseorder","purchaseorderlineitem","salesorder","salesordershipment","returnorder","returnorderlineitem","address","contact","owner","user","group","importsession","labeltemplate","reporttemplate","pluginconfig","contenttype","selectionlist","error","apiPrefix","apiUrl","endpoint","pk","pathParams","_url","startsWith","indexOf","replace","key","cancelEvent","event","preventDefault","stopPropagation","nativeEvent","stopImmediatePropagation","getBaseUrl","window","INVENTREE_SETTINGS","base_url","getDetailUrl","model","absolute","modelInfo","url","toString","base","console","navigateToLink","link","navigate","eventModified","open","ctrlKey","shiftKey","metaKey","UserRoles","admin","part_category","purchase_order","return_order","sales_order","stock","stock_location","UserPermissions","view","add","change","delete","FlowEnum","VerifyEmail","Login","Signup","ProviderRedirect","ProviderSignup","ProviderToken","MfaAuthenticate","Reauthenticate","MfaReauthenticate","MfaTrust","emptyServerAPI","server","instance","apiVersion","worker_running","worker_pending_tasks","plugins_enabled","plugins_install_disabled","active_plugins","email_configured","debug_mode","docker_mode","database","system_health","platform","installer","target","default_locale","django_admin","settings","customize","SizeMarks","value","get_server_setting","val","useServerApiState","create","persist","set","get","setServer","newServer","fetchServerApiState","api","then","response","data","catch","headers","Authorization","undefined","auth_context","setAuthContext","sso_enabled","socialaccount","providers","length","registration_enabled","sso_registration_enabled","sso_registration","password_forgotten_enabled","name","storage","createJSONStorage","sessionStorage","ModelType","statusCodeList","BuildStatus","PurchaseOrderStatus","ReturnOrderStatus","ReturnOrderLineStatus","SalesOrderStatus","StockHistoryCode","StockStatus","DataImportStatusCode","statusColorMap","dark","warning","success","info","danger","primary","secondary","default","useGlobalStatusState","status","setStatus","newStatus","fetchStatus","isLoggedIn","useUserState","getState","newStatusLookup","status_class","values","generateUrl","getHost","useLocalState","newUrl","host","URL","useIconState","hasLoaded","packages","packagesMap","fetchIcons","packs","_error","hideNotification","showNotification","title","message","color","Promise","all","map","pack","prefix","fonts","fontName","src","Object","entries","format","join","font","FontFace","load","document","fromEntries","isTrue","s","String","trim","toLowerCase","includes","resolveItem","obj","path","split","reduce","prev","curr","identifierString","useGlobalSettingsState","loaded","isError","lookup","fetchSettings","generate_lookup","getSetting","default_value","isSet","useUserSettingsState","createPluginSettingsState","plugin","createStore","createMachineSettingsState","machine","configType","config_type","filter","lookup_dir","setting","fetchGlobalStates","setApiDefaults","extractErrorMessage","field","defaultMessage","error_data","notYetImplemented","notifications","hide","show","permissionDenied","invalidResponse","returnCode","showTimeoutNotification","showLoginNotification","jsx","IconCircleCheck","IconExclamationCircle","autoClose","showApiErrorMessage","errorMessage","followRedirect","redirect","redirectUrl","queryParams","URLSearchParams","post","params","method","form","createElement","action","hasOwn","prototype","hasOwnProperty","call","hiddenField","type","appendChild","body","submit","doBasicLogin","username","password","code","clearUserState","setAuthenticated","fetchUserState","clearCsrfCookie","ensureCsrf","loginDone","baseURL","meta","is_authenticated","err","handlePossibleMFAError","observeProfile","mfa_flow","flows","find","flow","is_pending","handleMfaLogin","doLogout","getCsrfCookie","authApi","doSimpleLogin","email","axios","timeout","getUser","language","setLanguage","userTheme","setTheme","setWidgets","setLayouts","profile","theme","newTheme","keys","item","widgets","layouts","handleReset","location","setError","handleSuccessFullAuth","mfa_trust","trust","remember","errors","msg","e","checkLoginState","no_redirect","setLoginChecked","loginSuccess","state","finally","cookie","row","ProviderLogin","provider","process","callback_url","csrfmiddlewaretoken","config","requestConfig","getTotpSecret","setTotpQr","secret","handleVerifyTotp","handlePasswordReset","passwordError","handleVerifyEmail","handleChangePassword","pwd1","pwd2","current","new_password","new_password2","new_password1","current_password","Array","isArray","forEach","param","push","is_authed","authed","userId","first_name","last_name","setUser","newUser","fetchUserToken","isAuthed","groups","roles","permissions","is_staff","is_superuser","isStaff","isSuperuser","checkUserRole","role","permission","hasDeleteRole","hasChangeRole","hasAddRole","hasViewRole","checkUserPermission","hasDeletePermission","hasChangePermission","hasAddPermission","hasViewPermission","login_checked","autoupdate","toggleAutoupdate","api_host","hostList","origin","setHost","newHost","newHostKey","hostKey","setHostList","newHostList","newLanguage","noPatch","patchUser","primaryColor","whiteColor","blackColor","radius","loader","newValues","newWidgets","JSON","stringify","newLayouts","showSampleDashboard","setShowSampleDashboard","lastUsedPanels","setLastUsedPanel","panelKey","detailDrawerStack","addDetailDrawer","navigationOpen","setNavigationOpen","allowMobile","setAllowMobile","patch","log","defaults","withCredentials","withXSRFToken","xsrfCookieName","xsrfHeaderName","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","localStorageColorSchemeManager","handleStorageEvent","defaultValue","localStorage","getItem","setItem","warn","subscribe","onUpdate","storageArea","isMantineColorScheme","newValue","addEventListener","unsubscribe","removeEventListener","clear","removeItem","colorSchema","createTheme","vars","themeToVars","LoadingFallback","fullHeight","MantineProvider","Stack","Center","Loader","Loadable","Component","noFallback","props","Suspense","checkMobile","height","width","useViewportSize","MobileAppView","lazy","__vitePreload","DesktopAppView","MainView","useShallow","useEffect","mobile_mode","IS_DEV","import","IS_DEMO","IS_DEV_OR_DEMO","loaded_vals","server_list","default_server","show_server_selector","sentry_dsn","Sentry","dsn","tracesSampleRate","environment","React","ReactDOM","ReactDOMClient","MantineCore","MantineNotifications","LinguiCore","LinguiReact","pathname","getElementById","render","React.StrictMode"],"ignoreList":[],"sources":["../../../../../../frontend/lib/enums/ApiEndpoints.tsx","../../../../../../frontend/lib/enums/ModelInformation.tsx","../../../../../../frontend/lib/functions/Api.tsx","../../../../../../frontend/lib/functions/Events.tsx","../../../../../../frontend/lib/functions/Navigation.tsx","../../../../../../frontend/lib/enums/Roles.tsx","../../../../../../frontend/lib/types/Auth.tsx","../../../../../../frontend/src/defaults/defaults.tsx","../../../../../../frontend/src/states/ServerApiState.tsx","../../../../../../frontend/lib/enums/ModelType.tsx","../../../../../../frontend/src/defaults/backendMappings.tsx","../../../../../../frontend/src/states/GlobalStatusState.tsx","../../../../../../frontend/src/functions/urls.tsx","../../../../../../frontend/src/states/IconState.tsx","../../../../../../frontend/lib/functions/Conversion.tsx","../../../../../../frontend/src/states/SettingsStates.tsx","../../../../../../frontend/src/states/states.tsx","../../../../../../frontend/src/functions/api.tsx","../../../../../../frontend/src/functions/notifications.tsx","../../../../../../frontend/src/functions/auth.tsx","../../../../../../frontend/src/states/UserState.tsx","../../../../../../frontend/src/states/LocalState.tsx","../../../../../../frontend/src/App.tsx","../../../../../../frontend/src/contexts/colorSchema.tsx","../../../../../../frontend/src/theme.ts","../../../../../../frontend/src/functions/loading.tsx","../../../../../../frontend/src/views/MainView.tsx","../../../../../../frontend/src/main.tsx"],"sourcesContent":["/*\n * Enumeration of available API endpoints.\n *\n * In the cases where endpoints can be accessed with a primary key,\n * the primary key should be appended to the endpoint.\n * The exception to this is when the endpoint provides an :id parameter.\n */\n\nexport enum ApiEndpoints {\n  api_server_info = '',\n\n  // User API endpoints\n  user_list = 'user/',\n  user_set_password = 'user/:id/set-password/',\n  user_me = 'user/me/',\n  user_profile = 'user/profile/',\n  user_roles = 'user/roles/',\n  user_token = 'user/token/',\n  user_tokens = 'user/tokens/',\n  user_simple_login = 'email/generate/',\n\n  // User auth endpoints\n  user_reset = 'auth/v1/auth/password/request',\n  user_reset_set = 'auth/v1/auth/password/reset',\n  auth_pwd_change = 'auth/v1/account/password/change',\n  auth_login = 'auth/v1/auth/login',\n  auth_login_2fa = 'auth/v1/auth/2fa/authenticate',\n  auth_session = 'auth/v1/auth/session',\n  auth_signup = 'auth/v1/auth/signup',\n  auth_authenticators = 'auth/v1/account/authenticators',\n  auth_recovery = 'auth/v1/account/authenticators/recovery-codes',\n  auth_mfa_reauthenticate = 'auth/v1/auth/2fa/reauthenticate',\n  auth_totp = 'auth/v1/account/authenticators/totp',\n  auth_trust = 'auth/v1/auth/2fa/trust',\n  auth_reauthenticate = 'auth/v1/auth/reauthenticate',\n  auth_email = 'auth/v1/account/email',\n  auth_email_verify = 'auth/v1/auth/email/verify',\n  auth_providers = 'auth/v1/account/providers',\n  auth_provider_redirect = 'auth/v1/auth/provider/redirect',\n  auth_config = 'auth/v1/config',\n\n  // Generic API endpoints\n  currency_list = 'currency/exchange/',\n  currency_refresh = 'currency/refresh/',\n  all_units = 'units/all/',\n  task_overview = 'background-task/',\n  task_pending_list = 'background-task/pending/',\n  task_scheduled_list = 'background-task/scheduled/',\n  task_failed_list = 'background-task/failed/',\n  api_search = 'search/',\n  settings_global_list = 'settings/global/',\n  settings_user_list = 'settings/user/',\n  news = 'news/',\n  global_status = 'generic/status/',\n  custom_state_list = 'generic/status/custom/',\n  version = 'version/',\n  license = 'license/',\n  group_list = 'user/group/',\n  owner_list = 'user/owner/',\n  ruleset_list = 'user/ruleset/',\n  content_type_list = 'contenttype/',\n  icons = 'icons/',\n  selectionlist_list = 'selection/',\n  selectionlist_detail = 'selection/:id/',\n\n  // Barcode API endpoints\n  barcode = 'barcode/',\n  barcode_history = 'barcode/history/',\n  barcode_link = 'barcode/link/',\n  barcode_unlink = 'barcode/unlink/',\n  barcode_generate = 'barcode/generate/',\n\n  // Data output endpoints\n  data_output = 'data-output/',\n\n  // Data import endpoints\n  import_session_list = 'importer/session/',\n  import_session_accept_fields = 'importer/session/:id/accept_fields/',\n  import_session_accept_rows = 'importer/session/:id/accept_rows/',\n  import_session_column_mapping_list = 'importer/column-mapping/',\n  import_session_row_list = 'importer/row/',\n\n  // Notification endpoints\n  notifications_list = 'notifications/',\n  notifications_readall = 'notifications/readall/',\n\n  // Build API endpoints\n  build_order_list = 'build/',\n  build_order_issue = 'build/:id/issue/',\n  build_order_cancel = 'build/:id/cancel/',\n  build_order_hold = 'build/:id/hold/',\n  build_order_complete = 'build/:id/finish/',\n  build_output_complete = 'build/:id/complete/',\n  build_output_create = 'build/:id/create-output/',\n  build_output_scrap = 'build/:id/scrap-outputs/',\n  build_output_delete = 'build/:id/delete-outputs/',\n  build_order_auto_allocate = 'build/:id/auto-allocate/',\n  build_order_allocate = 'build/:id/allocate/',\n  build_order_consume = 'build/:id/consume/',\n  build_order_deallocate = 'build/:id/unallocate/',\n\n  build_line_list = 'build/line/',\n  build_item_list = 'build/item/',\n\n  bom_list = 'bom/',\n  bom_item_validate = 'bom/:id/validate/',\n  bom_validate = 'part/:id/bom-validate/',\n  bom_substitute_list = 'bom/substitute/',\n\n  // Part API endpoints\n  part_list = 'part/',\n  part_parameter_list = 'part/parameter/',\n  part_parameter_template_list = 'part/parameter/template/',\n  part_thumbs_list = 'part/thumbs/',\n  part_pricing = 'part/:id/pricing/',\n  part_requirements = 'part/:id/requirements/',\n  part_serial_numbers = 'part/:id/serial-numbers/',\n  part_scheduling = 'part/:id/scheduling/',\n  part_pricing_internal = 'part/internal-price/',\n  part_pricing_sale = 'part/sale-price/',\n  part_stocktake_list = 'part/stocktake/',\n  category_list = 'part/category/',\n  category_tree = 'part/category/tree/',\n  category_parameter_list = 'part/category/parameters/',\n  related_part_list = 'part/related/',\n  part_test_template_list = 'part/test-template/',\n\n  // Company API endpoints\n  company_list = 'company/',\n  contact_list = 'company/contact/',\n  address_list = 'company/address/',\n  supplier_part_list = 'company/part/',\n  supplier_part_pricing_list = 'company/price-break/',\n  manufacturer_part_list = 'company/part/manufacturer/',\n  manufacturer_part_parameter_list = 'company/part/manufacturer/parameter/',\n\n  // Stock location endpoints\n  stock_location_list = 'stock/location/',\n  stock_location_type_list = 'stock/location-type/',\n  stock_location_tree = 'stock/location/tree/',\n\n  // Stock item API endpoints\n  stock_item_list = 'stock/',\n  stock_tracking_list = 'stock/track/',\n  stock_test_result_list = 'stock/test/',\n  stock_transfer = 'stock/transfer/',\n  stock_remove = 'stock/remove/',\n  stock_return = 'stock/return/',\n  stock_add = 'stock/add/',\n  stock_count = 'stock/count/',\n  stock_change_status = 'stock/change_status/',\n  stock_merge = 'stock/merge/',\n  stock_assign = 'stock/assign/',\n  stock_status = 'stock/status/',\n  stock_install = 'stock/:id/install/',\n  stock_uninstall = 'stock/:id/uninstall/',\n  stock_serialize = 'stock/:id/serialize/',\n  stock_serial_info = 'stock/:id/serial-numbers/',\n\n  // Generator API endpoints\n  generate_batch_code = 'generate/batch-code/',\n  generate_serial_number = 'generate/serial-number/',\n\n  // Order API endpoints\n  purchase_order_list = 'order/po/',\n  purchase_order_issue = 'order/po/:id/issue/',\n  purchase_order_hold = 'order/po/:id/hold/',\n  purchase_order_cancel = 'order/po/:id/cancel/',\n  purchase_order_complete = 'order/po/:id/complete/',\n  purchase_order_line_list = 'order/po-line/',\n  purchase_order_extra_line_list = 'order/po-extra-line/',\n  purchase_order_receive = 'order/po/:id/receive/',\n\n  sales_order_list = 'order/so/',\n  sales_order_issue = 'order/so/:id/issue/',\n  sales_order_hold = 'order/so/:id/hold/',\n  sales_order_cancel = 'order/so/:id/cancel/',\n  sales_order_ship = 'order/so/:id/ship/',\n  sales_order_complete = 'order/so/:id/complete/',\n  sales_order_allocate = 'order/so/:id/allocate/',\n  sales_order_allocate_serials = 'order/so/:id/allocate-serials/',\n\n  sales_order_line_list = 'order/so-line/',\n  sales_order_extra_line_list = 'order/so-extra-line/',\n  sales_order_allocation_list = 'order/so-allocation/',\n\n  sales_order_shipment_list = 'order/so/shipment/',\n  sales_order_shipment_complete = 'order/so/shipment/:id/ship/',\n\n  return_order_list = 'order/ro/',\n  return_order_issue = 'order/ro/:id/issue/',\n  return_order_hold = 'order/ro/:id/hold/',\n  return_order_cancel = 'order/ro/:id/cancel/',\n  return_order_complete = 'order/ro/:id/complete/',\n  return_order_receive = 'order/ro/:id/receive/',\n  return_order_line_list = 'order/ro-line/',\n  return_order_extra_line_list = 'order/ro-extra-line/',\n\n  // Template API endpoints\n  label_list = 'label/template/',\n  label_print = 'label/print/',\n  report_list = 'report/template/',\n  report_print = 'report/print/',\n  report_snippet = 'report/snippet/',\n  report_asset = 'report/asset/',\n\n  // Plugin API endpoints\n  plugin_list = 'plugins/',\n  plugin_setting_list = 'plugins/:plugin/settings/',\n  plugin_user_setting_list = 'plugins/:plugin/user-settings/',\n  plugin_registry_status = 'plugins/status/',\n  plugin_install = 'plugins/install/',\n  plugin_reload = 'plugins/reload/',\n  plugin_activate = 'plugins/:key/activate/',\n  plugin_uninstall = 'plugins/:key/uninstall/',\n  plugin_admin = 'plugins/:key/admin/',\n\n  // User interface plugin endpoints\n  plugin_ui_features_list = 'plugins/ui/features/:feature_type/',\n\n  // Special plugin endpoints\n  plugin_locate_item = 'locate/',\n\n  // Machine API endpoints\n  machine_types_list = 'machine/types/',\n  machine_driver_list = 'machine/drivers/',\n  machine_registry_status = 'machine/status/',\n  machine_list = 'machine/',\n  machine_restart = 'machine/:machine/restart/',\n  machine_setting_list = 'machine/:machine/settings/',\n  machine_setting_detail = 'machine/:machine/settings/:config_type/',\n\n  // Miscellaneous API endpoints\n  attachment_list = 'attachment/',\n  error_report_list = 'error-report/',\n  project_code_list = 'project-code/',\n  custom_unit_list = 'units/',\n  notes_image_upload = 'notes-image-upload/',\n  email_list = 'admin/email/',\n  email_test = 'admin/email/test/',\n  config_list = 'admin/config/'\n}\n","import { t } from '@lingui/core/macro';\nimport type { InvenTreeIconType } from '../types/Icons';\nimport { ApiEndpoints } from './ApiEndpoints';\nimport type { ModelType } from './ModelType';\n\nexport interface ModelInformationInterface {\n  label: string;\n  label_multiple: string;\n  url_overview?: string;\n  url_detail?: string;\n  api_endpoint: ApiEndpoints;\n  admin_url?: string;\n  icon: keyof InvenTreeIconType;\n}\n\nexport interface TranslatableModelInformationInterface\n  extends Omit<ModelInformationInterface, 'label' | 'label_multiple'> {\n  label: () => string;\n  label_multiple: () => string;\n}\n\nexport type ModelDict = {\n  [key in keyof typeof ModelType]: TranslatableModelInformationInterface;\n};\n\nexport const ModelInformationDict: ModelDict = {\n  part: {\n    label: () => t`Part`,\n    label_multiple: () => t`Parts`,\n    url_overview: '/part/category/index/parts',\n    url_detail: '/part/:pk/',\n    api_endpoint: ApiEndpoints.part_list,\n    admin_url: '/part/part/',\n    icon: 'part'\n  },\n  partparametertemplate: {\n    label: () => t`Part Parameter Template`,\n    label_multiple: () => t`Part Parameter Templates`,\n    url_overview: '/settings/admin/part-parameters',\n    url_detail: '/partparametertemplate/:pk/',\n    api_endpoint: ApiEndpoints.part_parameter_template_list,\n    icon: 'test_templates'\n  },\n  parttesttemplate: {\n    label: () => t`Part Test Template`,\n    label_multiple: () => t`Part Test Templates`,\n    url_detail: '/parttesttemplate/:pk/',\n    api_endpoint: ApiEndpoints.part_test_template_list,\n    icon: 'test'\n  },\n  supplierpart: {\n    label: () => t`Supplier Part`,\n    label_multiple: () => t`Supplier Parts`,\n    url_overview: '/purchasing/index/supplier-parts',\n    url_detail: '/purchasing/supplier-part/:pk/',\n    api_endpoint: ApiEndpoints.supplier_part_list,\n    admin_url: '/company/supplierpart/',\n    icon: 'supplier_part'\n  },\n  manufacturerpart: {\n    label: () => t`Manufacturer Part`,\n    label_multiple: () => t`Manufacturer Parts`,\n    url_overview: '/purchasing/index/manufacturer-parts',\n    url_detail: '/purchasing/manufacturer-part/:pk/',\n    api_endpoint: ApiEndpoints.manufacturer_part_list,\n    admin_url: '/company/manufacturerpart/',\n    icon: 'manufacturers'\n  },\n  partcategory: {\n    label: () => t`Part Category`,\n    label_multiple: () => t`Part Categories`,\n    url_overview: '/part/category/parts/subcategories',\n    url_detail: '/part/category/:pk/',\n    api_endpoint: ApiEndpoints.category_list,\n    admin_url: '/part/partcategory/',\n    icon: 'category'\n  },\n  stockitem: {\n    label: () => t`Stock Item`,\n    label_multiple: () => t`Stock Items`,\n    url_overview: '/stock/location/index/stock-items',\n    url_detail: '/stock/item/:pk/',\n    api_endpoint: ApiEndpoints.stock_item_list,\n    admin_url: '/stock/stockitem/',\n    icon: 'stock'\n  },\n  stocklocation: {\n    label: () => t`Stock Location`,\n    label_multiple: () => t`Stock Locations`,\n    url_overview: '/stock/location',\n    url_detail: '/stock/location/:pk/',\n    api_endpoint: ApiEndpoints.stock_location_list,\n    admin_url: '/stock/stocklocation/',\n    icon: 'location'\n  },\n  stocklocationtype: {\n    label: () => t`Stock Location Type`,\n    label_multiple: () => t`Stock Location Types`,\n    api_endpoint: ApiEndpoints.stock_location_type_list,\n    icon: 'location'\n  },\n  stockhistory: {\n    label: () => t`Stock History`,\n    label_multiple: () => t`Stock Histories`,\n    api_endpoint: ApiEndpoints.stock_tracking_list,\n    icon: 'history'\n  },\n  build: {\n    label: () => t`Build`,\n    label_multiple: () => t`Builds`,\n    url_overview: '/manufacturing/index/buildorders/',\n    url_detail: '/manufacturing/build-order/:pk/',\n    api_endpoint: ApiEndpoints.build_order_list,\n    admin_url: '/build/build/',\n    icon: 'build_order'\n  },\n  buildline: {\n    label: () => t`Build Line`,\n    label_multiple: () => t`Build Lines`,\n    url_overview: '/build/line',\n    url_detail: '/build/line/:pk/',\n    api_endpoint: ApiEndpoints.build_line_list,\n    icon: 'build_order'\n  },\n  builditem: {\n    label: () => t`Build Item`,\n    label_multiple: () => t`Build Items`,\n    api_endpoint: ApiEndpoints.build_item_list,\n    icon: 'build_order'\n  },\n  company: {\n    label: () => t`Company`,\n    label_multiple: () => t`Companies`,\n    url_detail: '/company/:pk/',\n    api_endpoint: ApiEndpoints.company_list,\n    admin_url: '/company/company/',\n    icon: 'building'\n  },\n  projectcode: {\n    label: () => t`Project Code`,\n    label_multiple: () => t`Project Codes`,\n    url_detail: '/project-code/:pk/',\n    api_endpoint: ApiEndpoints.project_code_list,\n    icon: 'list_details'\n  },\n  purchaseorder: {\n    label: () => t`Purchase Order`,\n    label_multiple: () => t`Purchase Orders`,\n    url_overview: '/purchasing/index/purchaseorders',\n    url_detail: '/purchasing/purchase-order/:pk/',\n    api_endpoint: ApiEndpoints.purchase_order_list,\n    admin_url: '/order/purchaseorder/',\n    icon: 'purchase_orders'\n  },\n  purchaseorderlineitem: {\n    label: () => t`Purchase Order Line`,\n    label_multiple: () => t`Purchase Order Lines`,\n    api_endpoint: ApiEndpoints.purchase_order_line_list,\n    icon: 'purchase_orders'\n  },\n  salesorder: {\n    label: () => t`Sales Order`,\n    label_multiple: () => t`Sales Orders`,\n    url_overview: '/sales/index/salesorders',\n    url_detail: '/sales/sales-order/:pk/',\n    api_endpoint: ApiEndpoints.sales_order_list,\n    admin_url: '/order/salesorder/',\n    icon: 'sales_orders'\n  },\n  salesordershipment: {\n    label: () => t`Sales Order Shipment`,\n    label_multiple: () => t`Sales Order Shipments`,\n    url_detail: '/sales/shipment/:pk/',\n    api_endpoint: ApiEndpoints.sales_order_shipment_list,\n    icon: 'sales_orders'\n  },\n  returnorder: {\n    label: () => t`Return Order`,\n    label_multiple: () => t`Return Orders`,\n    url_overview: '/sales/index/returnorders',\n    url_detail: '/sales/return-order/:pk/',\n    api_endpoint: ApiEndpoints.return_order_list,\n    admin_url: '/order/returnorder/',\n    icon: 'return_orders'\n  },\n  returnorderlineitem: {\n    label: () => t`Return Order Line Item`,\n    label_multiple: () => t`Return Order Line Items`,\n    api_endpoint: ApiEndpoints.return_order_line_list,\n    icon: 'return_orders'\n  },\n  address: {\n    label: () => t`Address`,\n    label_multiple: () => t`Addresses`,\n    url_detail: '/address/:pk/',\n    api_endpoint: ApiEndpoints.address_list,\n    icon: 'address'\n  },\n  contact: {\n    label: () => t`Contact`,\n    label_multiple: () => t`Contacts`,\n    url_detail: '/contact/:pk/',\n    api_endpoint: ApiEndpoints.contact_list,\n    icon: 'group'\n  },\n  owner: {\n    label: () => t`Owner`,\n    label_multiple: () => t`Owners`,\n    url_detail: '/owner/:pk/',\n    api_endpoint: ApiEndpoints.owner_list,\n    icon: 'group'\n  },\n  user: {\n    label: () => t`User`,\n    label_multiple: () => t`Users`,\n    url_detail: '/core/user/:pk/',\n    api_endpoint: ApiEndpoints.user_list,\n    icon: 'user'\n  },\n  group: {\n    label: () => t`Group`,\n    label_multiple: () => t`Groups`,\n    url_detail: '/core/group/:pk/',\n    api_endpoint: ApiEndpoints.group_list,\n    admin_url: '/auth/group/',\n    icon: 'group'\n  },\n  importsession: {\n    label: () => t`Import Session`,\n    label_multiple: () => t`Import Sessions`,\n    url_overview: '/settings/admin/import',\n    url_detail: '/import/:pk/',\n    api_endpoint: ApiEndpoints.import_session_list,\n    icon: 'import'\n  },\n  labeltemplate: {\n    label: () => t`Label Template`,\n    label_multiple: () => t`Label Templates`,\n    url_overview: '/settings/admin/labels',\n    url_detail: '/settings/admin/labels/:pk/',\n    api_endpoint: ApiEndpoints.label_list,\n    icon: 'labels'\n  },\n  reporttemplate: {\n    label: () => t`Report Template`,\n    label_multiple: () => t`Report Templates`,\n    url_overview: '/settings/admin/reports',\n    url_detail: '/settings/admin/reports/:pk/',\n    api_endpoint: ApiEndpoints.report_list,\n    icon: 'reports'\n  },\n  pluginconfig: {\n    label: () => t`Plugin Configuration`,\n    label_multiple: () => t`Plugin Configurations`,\n    url_overview: '/settings/admin/plugin',\n    url_detail: '/settings/admin/plugin/:pk/',\n    api_endpoint: ApiEndpoints.plugin_list,\n    icon: 'plugin'\n  },\n  contenttype: {\n    label: () => t`Content Type`,\n    label_multiple: () => t`Content Types`,\n    api_endpoint: ApiEndpoints.content_type_list,\n    icon: 'list_details'\n  },\n  selectionlist: {\n    label: () => t`Selection List`,\n    label_multiple: () => t`Selection Lists`,\n    url_overview: '/settings/admin/part-parameters',\n    api_endpoint: ApiEndpoints.selectionlist_list,\n    icon: 'list_details'\n  },\n  error: {\n    label: () => t`Error`,\n    label_multiple: () => t`Errors`,\n    api_endpoint: ApiEndpoints.error_report_list,\n    url_overview: '/settings/admin/errors',\n    url_detail: '/settings/admin/errors/:pk/',\n    icon: 'exclamation'\n  }\n};\n","import type { ApiEndpoints } from '../enums/ApiEndpoints';\nimport type { PathParams } from '../types/Core';\n\n/**\n * Function to return the API prefix.\n * For now it is fixed, but may be configurable in the future.\n */\nexport function apiPrefix(): string {\n  return '/api/';\n}\n\n/**\n * Construct an API URL with an endpoint and (optional) pk value\n */\nexport function apiUrl(\n  endpoint: ApiEndpoints | string,\n  pk?: any,\n  pathParams?: PathParams\n): string {\n  let _url = endpoint;\n\n  // If the URL does not start with a '/', add the API prefix\n  if (!_url.startsWith('/')) {\n    _url = apiPrefix() + _url;\n  }\n\n  if (_url && pk) {\n    if (_url.indexOf(':id') >= 0) {\n      _url = _url.replace(':id', `${pk}`);\n    } else {\n      _url += `${pk}/`;\n    }\n  }\n\n  if (_url && pathParams) {\n    for (const key in pathParams) {\n      _url = _url.replace(`:${key}`, `${pathParams[key]}`);\n    }\n  }\n\n  return _url;\n}\n","// Helper function to cancel event propagation\nexport function cancelEvent(event: any) {\n  event?.preventDefault();\n  event?.stopPropagation();\n  event?.nativeEvent?.stopImmediatePropagation();\n}\n","import type { NavigateFunction } from 'react-router-dom';\nimport { ModelInformationDict } from '../enums/ModelInformation';\nimport type { ModelType } from '../enums/ModelType';\nimport { apiUrl } from './Api';\nimport { cancelEvent } from './Events';\n\nexport const getBaseUrl = (): string =>\n  (window as any).INVENTREE_SETTINGS?.base_url || 'web';\n\n/**\n * Returns the detail view URL for a given model type.\n * This is the UI URL, not the API URL.\n */\nexport function getDetailUrl(\n  model: ModelType,\n  pk: number | string,\n  absolute?: boolean\n): string {\n  const modelInfo = ModelInformationDict[model];\n\n  if (pk === undefined || pk === null) {\n    return '';\n  }\n\n  if (!!pk && modelInfo && modelInfo.url_detail) {\n    const url = modelInfo.url_detail.replace(':pk', pk.toString());\n    const base = getBaseUrl();\n\n    if (absolute && base) {\n      return `/${base}${url}`;\n    } else {\n      return url;\n    }\n  }\n\n  console.error(`No detail URL found for model ${model} <${pk}>`);\n  return '';\n}\n\n/**\n * Returns the API detail URL for a given model type.\n */\nexport function getApiUrl(\n  model: ModelType,\n  pk: number | string\n): string | undefined {\n  const modelInfo = ModelInformationDict[model];\n\n  if (pk === undefined || pk === null) {\n    return '';\n  }\n\n  if (!!pk && modelInfo && modelInfo.api_endpoint) {\n    return apiUrl(modelInfo.api_endpoint, pk);\n  }\n\n  console.error(`No API detail URL found for model ${model} <${pk}>`);\n  return undefined;\n}\n\n/*\n * Navigate to a provided link.\n * - If the link is to be opened externally, open it in a new tab.\n * - Otherwise, navigate using the provided navigate function.\n */\nexport const navigateToLink = (\n  link: string,\n  navigate: NavigateFunction,\n  event: any\n) => {\n  cancelEvent(event);\n\n  const base = `/${getBaseUrl()}`;\n\n  if (eventModified(event)) {\n    // Open the link in a new tab\n    let url = link;\n    if (link.startsWith('/') && !link.startsWith(base)) {\n      url = `${base}${link}`;\n    }\n    window.open(url, '_blank');\n  } else {\n    // Navigate internally\n    let url = link;\n\n    if (link.startsWith(base)) {\n      // Strip the base URL from the link\n      url = link.replace(base, '');\n    }\n\n    navigate(url);\n  }\n};\n\n/**\n * Check if the event is modified (e.g. ctrl, shift, or meta key pressed)\n * @param event - The event to check\n * @returns true if the event was modified\n */\nexport const eventModified = (\n  event: React.MouseEvent<HTMLButtonElement | HTMLAnchorElement>\n) => {\n  return event?.ctrlKey || event?.shiftKey || event?.metaKey;\n};\n","import { t } from '@lingui/core/macro';\n\n/*\n * Enumeration of available user role groups\n */\nexport enum UserRoles {\n  admin = 'admin',\n  build = 'build',\n  part = 'part',\n  part_category = 'part_category',\n  purchase_order = 'purchase_order',\n  return_order = 'return_order',\n  sales_order = 'sales_order',\n  stock = 'stock',\n  stock_location = 'stock_location'\n}\n\n/*\n * Enumeration of available user permissions within each role group\n */\nexport enum UserPermissions {\n  view = 'view',\n  add = 'add',\n  change = 'change',\n  delete = 'delete'\n}\n\nexport function userRoleLabel(role: UserRoles): string {\n  switch (role) {\n    case UserRoles.admin:\n      return t`Admin`;\n    case UserRoles.build:\n      return t`Build Orders`;\n    case UserRoles.part:\n      return t`Parts`;\n    case UserRoles.part_category:\n      return t`Part Categories`;\n    case UserRoles.purchase_order:\n      return t`Purchase Orders`;\n    case UserRoles.return_order:\n      return t`Return Orders`;\n    case UserRoles.sales_order:\n      return t`Sales Orders`;\n    case UserRoles.stock:\n      return t`Stock Items`;\n    case UserRoles.stock_location:\n      return t`Stock Location`;\n    default:\n      return role as string;\n  }\n}\n","export interface AuthContext {\n  status: number;\n  user?: {\n    id: number;\n    display: string;\n    has_usable_password: boolean;\n    username: string;\n  };\n  methods?: {\n    method: string;\n    at: number;\n    username: string;\n  }[];\n  data: { flows: Flow[] };\n  meta: { is_authenticated: boolean };\n}\n\nexport enum FlowEnum {\n  VerifyEmail = 'verify_email',\n  Login = 'login',\n  Signup = 'signup',\n  ProviderRedirect = 'provider_redirect',\n  ProviderSignup = 'provider_signup',\n  ProviderToken = 'provider_token',\n  MfaAuthenticate = 'mfa_authenticate',\n  Reauthenticate = 'reauthenticate',\n  MfaReauthenticate = 'mfa_reauthenticate',\n  MfaTrust = 'mfa_trust'\n}\n\nexport interface Flow {\n  id: FlowEnum;\n  providers?: string[];\n  is_pending?: boolean[];\n}\n\nexport interface AuthProvider {\n  id: string;\n  name: string;\n  flows: string[];\n  client_id: string;\n}\n\nexport interface AuthConfig {\n  account: {\n    authentication_method: string;\n  };\n  socialaccount: { providers: AuthProvider[] };\n  mfa: {\n    supported_types: string[];\n  };\n  usersessions: {\n    track_activity: boolean;\n  };\n}\n\n// Errors\nexport type ErrorResponse = {\n  data: any;\n  status: number;\n  statusText: string;\n  message?: string;\n};\n","import type { MantineRadius } from '@mantine/core';\n\nexport const emptyServerAPI = {\n  server: null,\n  version: null,\n  instance: null,\n  apiVersion: null,\n  worker_running: null,\n  worker_pending_tasks: null,\n  plugins_enabled: null,\n  plugins_install_disabled: null,\n  active_plugins: [],\n  email_configured: null,\n  debug_mode: null,\n  docker_mode: null,\n  database: null,\n  system_health: null,\n  platform: null,\n  installer: null,\n  target: null,\n  default_locale: null,\n  django_admin: null,\n  settings: null,\n  customize: null\n};\n\nexport interface SiteMarkProps {\n  value: number;\n  label: MantineRadius;\n}\n\nexport const SizeMarks: SiteMarkProps[] = [\n  { value: 0, label: 'xs' },\n  { value: 25, label: 'sm' },\n  { value: 50, label: 'md' },\n  { value: 75, label: 'lg' },\n  { value: 100, label: 'xl' }\n];\n","import { create } from 'zustand';\nimport { createJSONStorage, persist } from 'zustand/middleware';\n\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { apiUrl } from '@lib/functions/Api';\nimport type { AuthConfig, AuthContext } from '@lib/types/Auth';\nimport { api } from '../App';\nimport { emptyServerAPI } from '../defaults/defaults';\nimport type { ServerAPIProps } from './states';\n\ninterface ServerApiStateProps {\n  server: ServerAPIProps;\n  setServer: (newServer: ServerAPIProps) => void;\n  fetchServerApiState: () => Promise<void>;\n  auth_config?: AuthConfig;\n  auth_context?: AuthContext;\n  setAuthContext: (auth_context: AuthContext | undefined) => void;\n  sso_enabled: () => boolean;\n  registration_enabled: () => boolean;\n  sso_registration_enabled: () => boolean;\n  password_forgotten_enabled: () => boolean;\n}\n\nfunction get_server_setting(val: any) {\n  if (val === null || val === undefined) {\n    return false;\n  }\n  return val;\n}\n\nexport const useServerApiState = create<ServerApiStateProps>()(\n  persist(\n    (set, get) => ({\n      server: emptyServerAPI,\n      setServer: (newServer: ServerAPIProps) => set({ server: newServer }),\n      fetchServerApiState: async () => {\n        // Fetch server data\n        await api\n          .get(apiUrl(ApiEndpoints.api_server_info))\n          .then((response) => {\n            set({ server: response.data });\n          })\n          .catch(() => {\n            console.error('ERR: Error fetching server info');\n          });\n\n        // Fetch login/SSO behaviour\n        await api\n          .get(apiUrl(ApiEndpoints.auth_config), {\n            headers: { Authorization: '' }\n          })\n          .then((response) => {\n            set({ auth_config: response.data.data });\n          })\n          .catch(() => {\n            console.error('ERR: Error fetching SSO information');\n          });\n      },\n      auth_config: undefined,\n      auth_context: undefined,\n      setAuthContext(auth_context) {\n        set({ auth_context });\n      },\n      sso_enabled: () => {\n        const data = get().auth_config?.socialaccount.providers;\n        return !(data === undefined || data.length == 0);\n      },\n      registration_enabled: () => {\n        return get_server_setting(get().server?.settings?.registration_enabled);\n      },\n      sso_registration_enabled: () => {\n        return get_server_setting(get().server?.settings?.sso_registration);\n      },\n      password_forgotten_enabled: () => {\n        return get_server_setting(\n          get().server?.settings?.password_forgotten_enabled\n        );\n      }\n    }),\n    {\n      name: 'server-api-state',\n      storage: createJSONStorage(() => sessionStorage)\n    }\n  )\n);\n","/*\n * Enumeration of available API model types\n */\nexport enum ModelType {\n  part = 'part',\n  supplierpart = 'supplierpart',\n  manufacturerpart = 'manufacturerpart',\n  partcategory = 'partcategory',\n  partparametertemplate = 'partparametertemplate',\n  parttesttemplate = 'parttesttemplate',\n  projectcode = 'projectcode',\n  stockitem = 'stockitem',\n  stocklocation = 'stocklocation',\n  stocklocationtype = 'stocklocationtype',\n  stockhistory = 'stockhistory',\n  build = 'build',\n  buildline = 'buildline',\n  builditem = 'builditem',\n  company = 'company',\n  purchaseorder = 'purchaseorder',\n  purchaseorderlineitem = 'purchaseorderlineitem',\n  salesorder = 'salesorder',\n  salesordershipment = 'salesordershipment',\n  returnorder = 'returnorder',\n  returnorderlineitem = 'returnorderlineitem',\n  importsession = 'importsession',\n  address = 'address',\n  contact = 'contact',\n  owner = 'owner',\n  user = 'user',\n  group = 'group',\n  reporttemplate = 'reporttemplate',\n  labeltemplate = 'labeltemplate',\n  pluginconfig = 'pluginconfig',\n  contenttype = 'contenttype',\n  selectionlist = 'selectionlist',\n  error = 'error'\n}\n","import { ModelType } from '@lib/enums/ModelType';\n\n/* Lookup tables for mapping backend responses to internal types */\n\n/**\n * List of status codes which are used in the backend\n * and the model type they are associated with\n */\nexport const statusCodeList: Record<string, ModelType> = {\n  BuildStatus: ModelType.build,\n  PurchaseOrderStatus: ModelType.purchaseorder,\n  ReturnOrderStatus: ModelType.returnorder,\n  ReturnOrderLineStatus: ModelType.returnorderlineitem,\n  SalesOrderStatus: ModelType.salesorder,\n  StockHistoryCode: ModelType.stockhistory,\n  StockStatus: ModelType.stockitem,\n  DataImportStatusCode: ModelType.importsession\n};\n\n/*\n * Map the colors used in the backend to the colors used in the frontend\n */\nexport const statusColorMap: { [key: string]: string } = {\n  dark: 'dark',\n  warning: 'yellow',\n  success: 'green',\n  info: 'cyan',\n  danger: 'red',\n  primary: 'blue',\n  secondary: 'gray',\n  default: 'gray'\n};\n","import { create } from 'zustand';\nimport { createJSONStorage, persist } from 'zustand/middleware';\n\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport type { ModelType } from '@lib/enums/ModelType';\nimport { apiUrl } from '@lib/functions/Api';\nimport { api } from '../App';\nimport type { StatusCodeListInterface } from '../components/render/StatusRenderer';\nimport { statusCodeList } from '../defaults/backendMappings';\nimport { useUserState } from './UserState';\n\nexport type StatusLookup = Record<ModelType | string, StatusCodeListInterface>;\n\ninterface ServerStateProps {\n  status?: StatusLookup;\n  setStatus: (newStatus: StatusLookup) => void;\n  fetchStatus: () => Promise<void>;\n}\n\nexport const useGlobalStatusState = create<ServerStateProps>()(\n  persist(\n    (set) => ({\n      status: undefined,\n      setStatus: (newStatus: StatusLookup) => set({ status: newStatus }),\n      fetchStatus: async () => {\n        const { isLoggedIn } = useUserState.getState();\n\n        // Fetch status data for rendering labels\n        if (!isLoggedIn()) {\n          return;\n        }\n\n        await api\n          .get(apiUrl(ApiEndpoints.global_status))\n          .then((response) => {\n            const newStatusLookup: StatusLookup = {} as StatusLookup;\n            for (const key in response.data) {\n              newStatusLookup[statusCodeList[key] || key] = {\n                status_class: key,\n                values: response.data[key].values\n              };\n            }\n            set({ status: newStatusLookup });\n          })\n          .catch(() => {\n            console.error('ERR: Error fetching global status information');\n          });\n      }\n    }),\n    {\n      name: 'global-status-state',\n      storage: createJSONStorage(() => sessionStorage)\n    }\n  )\n);\n","import { useLocalState } from '../states/LocalState';\n\n/**\n * Returns the edit view URL for a given model type\n */\nexport function generateUrl(url: string | URL, base?: string): string {\n  const { getHost } = useLocalState.getState();\n\n  let newUrl: string | URL = url;\n\n  const host: string = getHost();\n\n  try {\n    if (base) {\n      newUrl = new URL(url, base).toString();\n    } else if (host) {\n      newUrl = new URL(url, host).toString();\n    } else {\n      newUrl = url.toString();\n    }\n  } catch (e: any) {\n    console.error(`ERR: generateURL failed. url='${url}', base='${base}'`);\n  }\n\n  return newUrl.toString();\n}\n","import { create } from 'zustand';\n\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { apiUrl } from '@lib/functions/Api';\nimport { t } from '@lingui/core/macro';\nimport { hideNotification, showNotification } from '@mantine/notifications';\nimport { api } from '../App';\nimport { generateUrl } from '../functions/urls';\n\ntype IconPackage = {\n  name: string;\n  prefix: string;\n  fonts: Record<string, string>;\n  icons: Record<\n    string,\n    {\n      name: string;\n      category: string;\n      tags: string[];\n      variants: Record<string, string>;\n    }\n  >;\n};\n\ntype IconState = {\n  hasLoaded: boolean;\n  packages: IconPackage[];\n  packagesMap: Record<string, IconPackage>;\n  fetchIcons: () => Promise<void>;\n};\n\nexport const useIconState = create<IconState>()((set, get) => ({\n  hasLoaded: false,\n  packages: [],\n  packagesMap: {},\n  fetchIcons: async () => {\n    if (get().hasLoaded) return;\n\n    const packs = await api.get(apiUrl(ApiEndpoints.icons)).catch((_error) => {\n      console.error('ERR: Could not fetch icon packages');\n\n      hideNotification('icon-fetch-error');\n\n      showNotification({\n        id: 'icon-fetch-error',\n        title: t`Error`,\n        message: t`Error loading icon package from server`,\n        color: 'red'\n      });\n    });\n\n    if (!packs) {\n      return;\n    }\n\n    await Promise.all(\n      packs.data.map(async (pack: any) => {\n        if (pack.prefix && pack.fonts) {\n          const fontName = `inventree-icon-font-${pack.prefix}`;\n          const src = Object.entries(pack.fonts as Record<string, string>)\n            .map(\n              ([format, url]) => `url(${generateUrl(url)}) format(\"${format}\")`\n            )\n            .join(',\\n');\n          const font = new FontFace(fontName, `${src};`);\n          await font.load();\n          document.fonts.add(font);\n          return font;\n        } else {\n          console.error(\n            \"ERR: Icon package is missing 'prefix' or 'fonts' field\"\n          );\n          hideNotification('icon-fetch-error');\n          showNotification({\n            id: 'icon-fetch-error',\n            title: t`Error`,\n            message: t`Error loading icon package from server`,\n            color: 'red'\n          });\n\n          return null;\n        }\n      })\n    );\n\n    set({\n      hasLoaded: true,\n      packages: packs.data,\n      packagesMap: Object.fromEntries(\n        packs.data?.map((pack: any) => [pack.prefix, pack])\n      )\n    });\n  }\n}));\n","/*\n * Determine if the provided value is \"true\":\n *\n * Many settings stored on the server are true/false,\n * but stored as string values, \"true\" / \"false\".\n *\n * This function provides a wrapper to ensure that the return type is boolean\n */\nexport function isTrue(value: any): boolean {\n  if (value === true) {\n    return true;\n  }\n\n  if (value === false) {\n    return false;\n  }\n\n  const s = String(value).trim().toLowerCase();\n\n  return ['true', 'yes', '1', 'on', 't', 'y'].includes(s);\n}\n\n/*\n * Resolve a nested item in an object.\n * Returns the resolved item, if it exists.\n *\n * e.g. resolveItem(data, \"sub.key.accessor\")\n *\n * Allows for retrieval of nested items in an object.\n */\nexport function resolveItem(obj: any, path: string): any {\n  const properties = path.split('.');\n  return properties.reduce((prev, curr) => prev?.[curr], obj);\n}\n\nexport function identifierString(value: string): string {\n  // Convert an input string e.g. \"Hello World\" into a string that can be used as an identifier, e.g. \"hello-world\"\n\n  value = value || '-';\n\n  return value.toLowerCase().replace(/[^a-z0-9]/g, '-');\n}\n","/**\n * State management for remote (server side) settings\n */\nimport { create, createStore } from 'zustand';\n\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { apiUrl } from '@lib/functions/Api';\nimport { isTrue } from '@lib/functions/Conversion';\nimport type { PathParams } from '@lib/types/Core';\nimport type {\n  Setting,\n  SettingsLookup,\n  SettingsStateProps\n} from '@lib/types/Settings';\nimport { api } from '../App';\nimport { useUserState } from './UserState';\n\n/**\n * State management for global (server side) settings\n */\nexport const useGlobalSettingsState = create<SettingsStateProps>(\n  (set, get) => ({\n    settings: [],\n    loaded: false,\n    isError: false,\n    lookup: {},\n    endpoint: ApiEndpoints.settings_global_list,\n    fetchSettings: async () => {\n      let success = true;\n      const { isLoggedIn } = useUserState.getState();\n\n      if (!isLoggedIn()) {\n        set({\n          loaded: false,\n          isError: true\n        });\n        return success;\n      }\n\n      await api\n        .get(apiUrl(ApiEndpoints.settings_global_list))\n        .then((response) => {\n          set({\n            settings: response.data,\n            lookup: generate_lookup(response.data),\n            loaded: true,\n            isError: false\n          });\n        })\n        .catch((_error) => {\n          console.error('ERR: Error fetching global settings');\n          success = false;\n\n          set({\n            loaded: false,\n            isError: true\n          });\n        });\n\n      return success;\n    },\n    getSetting: (key: string, default_value?: string) => {\n      return get().lookup[key] ?? default_value ?? '';\n    },\n    isSet: (key: string, default_value?: boolean) => {\n      const value = get().lookup[key] ?? default_value ?? 'false';\n      return isTrue(value);\n    }\n  })\n);\n\n/**\n * State management for user (server side) settings\n */\nexport const useUserSettingsState = create<SettingsStateProps>((set, get) => ({\n  settings: [],\n  lookup: {},\n  loaded: false,\n  isError: false,\n  endpoint: ApiEndpoints.settings_user_list,\n  fetchSettings: async () => {\n    let success = true;\n    const { isLoggedIn } = useUserState.getState();\n\n    if (!isLoggedIn()) {\n      set({\n        loaded: false\n      });\n      return success;\n    }\n\n    await api\n      .get(apiUrl(ApiEndpoints.settings_user_list))\n      .then((response) => {\n        set({\n          settings: response.data,\n          lookup: generate_lookup(response.data),\n          loaded: true\n        });\n      })\n      .catch((_error) => {\n        console.error('ERR: Error fetching user settings');\n        success = false;\n        set({\n          loaded: false\n        });\n      });\n\n    return success;\n  },\n  getSetting: (key: string, default_value?: string) => {\n    return get().lookup[key] ?? default_value ?? '';\n  },\n  isSet: (key: string, default_value?: boolean) => {\n    const value = get().lookup[key] ?? default_value ?? 'false';\n    return isTrue(value);\n  }\n}));\n\n/**\n * State management for plugin settings\n */\ninterface CreatePluginSettingStateProps {\n  plugin: string;\n  endpoint: ApiEndpoints;\n}\n\nexport const createPluginSettingsState = ({\n  plugin,\n  endpoint\n}: CreatePluginSettingStateProps) => {\n  const pathParams: PathParams = { plugin };\n\n  return createStore<SettingsStateProps>()((set, get) => ({\n    settings: [],\n    lookup: {},\n    loaded: false,\n    isError: false,\n    endpoint: endpoint,\n    pathParams,\n    fetchSettings: async () => {\n      let success = true;\n\n      if (!plugin) {\n        set({\n          loaded: false,\n          isError: true\n        });\n\n        return false;\n      }\n\n      set({\n        loaded: false,\n        isError: false\n      });\n\n      await api\n        .get(apiUrl(endpoint, undefined, { plugin }))\n        .then((response) => {\n          const settings = response.data;\n          set({\n            settings,\n            lookup: generate_lookup(settings),\n            loaded: true,\n            isError: false\n          });\n        })\n        .catch((_error) => {\n          console.error(\n            `ERR: Could not fetch plugin settings for plugin ${plugin}`\n          );\n          success = false;\n          set({\n            loaded: false,\n            isError: true\n          });\n        });\n\n      return success;\n    },\n    getSetting: (key: string, default_value?: string) => {\n      return get().lookup[key] ?? default_value ?? '';\n    },\n    isSet: (key: string, default_value?: boolean) => {\n      const value = get().lookup[key] ?? default_value ?? 'false';\n      return isTrue(value);\n    }\n  }));\n};\n\n/**\n * State management for machine settings\n */\ninterface CreateMachineSettingStateProps {\n  machine: string;\n  configType: 'M' | 'D';\n}\n\nexport const createMachineSettingsState = ({\n  machine,\n  configType\n}: CreateMachineSettingStateProps) => {\n  const pathParams: PathParams = { machine, config_type: configType };\n\n  return createStore<SettingsStateProps>((set, get) => ({\n    settings: [],\n    lookup: {},\n    loaded: false,\n    isError: false,\n    endpoint: ApiEndpoints.machine_setting_detail,\n    pathParams,\n    fetchSettings: async () => {\n      let success = true;\n\n      await api\n        .get(apiUrl(ApiEndpoints.machine_setting_list, undefined, { machine }))\n        .then((response) => {\n          const settings = response.data.filter(\n            (s: any) => s.config_type === configType\n          );\n          set({\n            settings,\n            lookup: generate_lookup(settings),\n            loaded: true,\n            isError: false\n          });\n        })\n        .catch((error) => {\n          console.error(\n            `Error fetching machine settings for machine ${machine} with type ${configType}:`,\n            error\n          );\n          success = false;\n          set({\n            loaded: false,\n            isError: true\n          });\n        });\n\n      return success;\n    },\n    getSetting: (key: string, default_value?: string) => {\n      return get().lookup[key] ?? default_value ?? '';\n    },\n    isSet: (key: string, default_value?: boolean) => {\n      const value = get().lookup[key] ?? default_value ?? 'false';\n      return isTrue(value);\n    }\n  }));\n};\n\n/*\n  return a lookup dictionary for the value of the provided Setting list\n*/\nfunction generate_lookup(data: Setting[]) {\n  const lookup_dir: SettingsLookup = {};\n  for (const setting of data) {\n    lookup_dir[setting.key] = setting.value;\n  }\n  return lookup_dir;\n}\n","import type { PluginProps } from '@lib/types/Plugins';\nimport type { NavigateFunction } from 'react-router-dom';\nimport { setApiDefaults } from '../App';\nimport { useGlobalStatusState } from './GlobalStatusState';\nimport { useIconState } from './IconState';\nimport { useServerApiState } from './ServerApiState';\nimport { useGlobalSettingsState, useUserSettingsState } from './SettingsStates';\nimport { useUserState } from './UserState';\n\n// Type interface fully defining the current server\nexport interface ServerAPIProps {\n  server: null | string;\n  version: null | string;\n  instance: null | string;\n  apiVersion: null | number;\n  worker_running: null | boolean;\n  worker_pending_tasks: null | number;\n  plugins_enabled: null | boolean;\n  plugins_install_disabled: null | boolean;\n  active_plugins: PluginProps[];\n  email_configured: null | boolean;\n  debug_mode: null | boolean;\n  docker_mode: null | boolean;\n  database: null | string;\n  system_health: null | boolean;\n  platform: null | string;\n  installer: null | string;\n  target: null | string;\n  default_locale: null | string;\n  django_admin: null | string;\n  settings: {\n    sso_registration: null | boolean;\n    registration_enabled: null | boolean;\n    password_forgotten_enabled: null | boolean;\n  } | null;\n  customize: null | {\n    logo: string;\n    splash: string;\n    login_message: string;\n    navbar_message: string;\n  };\n}\n\n/*\n * Refetch all global state information.\n * Necessary on login, or if locale is changed.\n */\nexport async function fetchGlobalStates(\n  navigate?: NavigateFunction | undefined\n) {\n  const { isLoggedIn } = useUserState.getState();\n\n  if (!isLoggedIn()) {\n    return;\n  }\n\n  setApiDefaults();\n  await Promise.all([\n    useServerApiState.getState().fetchServerApiState(),\n    useUserSettingsState.getState().fetchSettings(),\n    useGlobalSettingsState.getState().fetchSettings(),\n    useGlobalStatusState.getState().fetchStatus(),\n    useIconState.getState().fetchIcons()\n  ]);\n}\n","import { t } from '@lingui/core/macro';\n\n/**\n * Extract a sensible error message from an API error response\n * @param error The error response from the API\n * @param field The field to extract the error message from (optional)\n * @param defaultMessage A default message to use if no error message is found (optional)\n */\nexport function extractErrorMessage({\n  error,\n  field,\n  defaultMessage\n}: {\n  error: any;\n  field?: string;\n  defaultMessage?: string;\n}): string {\n  const error_data = error.response?.data ?? error.data ?? null;\n\n  let message = '';\n\n  if (error_data) {\n    message = error_data[field ?? 'error'] ?? error_data['non_field_errors'];\n  }\n\n  // No message? Look at the response status codes\n  if (!message) {\n    const status = error.status ?? error.response?.status ?? null;\n\n    if (status) {\n      switch (status) {\n        case 400:\n          message = t`Bad request`;\n          break;\n        case 401:\n          message = t`Unauthorized`;\n          break;\n        case 403:\n          message = t`Forbidden`;\n          break;\n        case 404:\n          message = t`Not found`;\n          break;\n        case 405:\n          message = t`Method not allowed`;\n          break;\n        case 500:\n          message = t`Internal server error`;\n          break;\n        default:\n          message = t`Unknown error`;\n          break;\n      }\n\n      message = `${status} - ${message}`;\n    }\n  }\n\n  if (!message) {\n    message = defaultMessage ?? t`An error occurred`;\n  }\n\n  return message;\n}\n","import { t } from '@lingui/core/macro';\nimport { notifications } from '@mantine/notifications';\nimport { IconCircleCheck, IconExclamationCircle } from '@tabler/icons-react';\nimport { extractErrorMessage } from './api';\n\n/**\n * Show a notification that the feature is not yet implemented\n */\nexport function notYetImplemented() {\n  notifications.hide('not-implemented');\n\n  notifications.show({\n    title: t`Not implemented`,\n    message: t`This feature is not yet implemented`,\n    color: 'red',\n    id: 'not-implemented'\n  });\n}\n\n/**\n * Show a notification that the user does not have permission to perform the action\n */\nexport function permissionDenied() {\n  notifications.show({\n    title: t`Permission Denied`,\n    message: t`You do not have permission to perform this action`,\n    color: 'red'\n  });\n}\n\n/**\n * Display a notification on an invalid return code\n */\nexport function invalidResponse(returnCode: number) {\n  // TODO: Specific return code messages\n  notifications.show({\n    title: t`Invalid Return Code`,\n    message: t`Server returned status ${returnCode}`,\n    color: 'red'\n  });\n}\n\n/**\n * Display a notification on timeout\n */\nexport function showTimeoutNotification() {\n  notifications.show({\n    title: t`Timeout`,\n    message: t`The request timed out`,\n    color: 'red'\n  });\n}\n\n/*\n * Display a login / logout notification message.\n * Any existing login notification(s) will be hidden.\n */\nexport function showLoginNotification({\n  title,\n  message,\n  success = true\n}: {\n  title: string;\n  message: string;\n  success?: boolean;\n}) {\n  notifications.hide('login');\n\n  notifications.show({\n    title: title,\n    message: message,\n    color: success ? 'green' : 'red',\n    icon: success ? <IconCircleCheck /> : <IconExclamationCircle />,\n    id: 'login',\n    autoClose: 2500\n  });\n}\n\nexport function showApiErrorMessage({\n  error,\n  title,\n  message,\n  field,\n  id\n}: {\n  error: any;\n  title: string;\n  message?: string;\n  field?: string;\n  id?: string;\n}) {\n  const errorMessage = extractErrorMessage({\n    error: error,\n    field: field,\n    defaultMessage: message\n  });\n\n  notifications.hide(id ?? 'api-error');\n\n  notifications.show({\n    id: id ?? 'api-error',\n    title: title,\n    message: errorMessage,\n    color: 'red'\n  });\n}\n","import { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { apiUrl } from '@lib/functions/Api';\nimport { type AuthProvider, FlowEnum } from '@lib/types/Auth';\nimport { t } from '@lingui/core/macro';\nimport { notifications, showNotification } from '@mantine/notifications';\nimport axios from 'axios';\nimport type { AxiosRequestConfig } from 'axios';\nimport type { Location, NavigateFunction } from 'react-router-dom';\nimport { api, setApiDefaults } from '../App';\nimport { useLocalState } from '../states/LocalState';\nimport { useServerApiState } from '../states/ServerApiState';\nimport { useUserState } from '../states/UserState';\nimport { fetchGlobalStates } from '../states/states';\nimport { showLoginNotification } from './notifications';\nimport { generateUrl } from './urls';\n\nexport function followRedirect(navigate: NavigateFunction, redirect: any) {\n  let url = redirect?.redirectUrl ?? '/home';\n\n  if (redirect?.queryParams) {\n    // Construct and appand query parameters\n    url = `${url}?${new URLSearchParams(redirect.queryParams).toString()}`;\n  }\n\n  navigate(url);\n}\n\n/**\n * sends a request to the specified url from a form. this will change the window location.\n * @param {string} path the path to send the post request to\n * @param {object} params the parameters to add to the url\n * @param {string} [method=post] the method to use on the form\n *\n * Source https://stackoverflow.com/questions/133925/javascript-post-request-like-a-form-submit/133997#133997\n */\n\nfunction post(path: string, params: any, method = 'post') {\n  const form = document.createElement('form');\n  form.method = method;\n  form.action = path;\n\n  for (const key in params) {\n    if (\n      params.hasOwn?.(key) ||\n      Object.prototype.hasOwnProperty.call(params, key)\n    ) {\n      const hiddenField = document.createElement('input');\n      hiddenField.type = 'hidden';\n      hiddenField.name = key;\n      hiddenField.value = params[key];\n\n      form.appendChild(hiddenField);\n    }\n  }\n\n  document.body.appendChild(form);\n  form.submit();\n}\n\n/**\n * Attempt to login using username:password combination.\n * If login is successful, an API token will be returned.\n * This API token is used for any future API requests.\n */\nexport async function doBasicLogin(\n  username: string,\n  password: string,\n  navigate: NavigateFunction,\n  code?: string\n) {\n  const { getHost } = useLocalState.getState();\n  const { clearUserState, setAuthenticated, fetchUserState } =\n    useUserState.getState();\n  const { setAuthContext } = useServerApiState.getState();\n\n  if (username.length == 0 || password.length == 0) {\n    return;\n  }\n\n  clearCsrfCookie();\n  await ensureCsrf();\n\n  let loginDone = false;\n  let success = false;\n\n  const host: string = getHost();\n\n  // Attempt login with\n  await api\n    .post(\n      apiUrl(ApiEndpoints.auth_login),\n      {\n        username: username,\n        password: password\n      },\n      {\n        baseURL: host\n      }\n    )\n    .then((response) => {\n      setAuthContext(response.data?.data);\n      if (response.status == 200 && response.data?.meta?.is_authenticated) {\n        setAuthenticated(true);\n        loginDone = true;\n        success = true;\n      }\n    })\n    .catch(async (err) => {\n      notifications.hide('auth-login-error');\n\n      if (err?.response?.status) {\n        switch (err.response.status) {\n          case 401:\n            await handlePossibleMFAError(err);\n            break;\n          case 409:\n            notifications.show({\n              title: t`Already logged in`,\n              message: t`There is a conflicting session on the server for this browser. Please logout of that first.`,\n              color: 'red',\n              id: 'auth-login-error',\n              autoClose: false\n            });\n            break;\n          default:\n            notifications.show({\n              title: `${t`Login failed`} (${err.response.status})`,\n              message: t`Check your input and try again.`,\n              id: 'auth-login-error',\n              color: 'red'\n            });\n            break;\n        }\n      } else {\n        notifications.show({\n          title: t`Login failed`,\n          message: t`No response from server.`,\n          color: 'red',\n          id: 'login-error'\n        });\n      }\n    });\n\n  if (loginDone) {\n    await fetchUserState();\n    // see if mfa registration is required\n    await fetchGlobalStates(navigate);\n    observeProfile();\n  } else if (!success) {\n    clearUserState();\n  }\n  return success;\n\n  async function handlePossibleMFAError(err: any) {\n    setAuthContext(err.response.data?.data);\n    const mfa_flow = err.response.data.data.flows.find(\n      (flow: any) => flow.id == FlowEnum.MfaAuthenticate\n    );\n    if (mfa_flow?.is_pending) {\n      // MFA is required - we might already have a code\n      if (code && code.length > 0) {\n        const rslt = await handleMfaLogin(\n          navigate,\n          undefined,\n          { code: code },\n          () => {}\n        );\n        if (rslt) {\n          setAuthenticated(true);\n          loginDone = true;\n          success = true;\n          notifications.show({\n            title: t`MFA Login successful`,\n            message: t`MFA details were automatically provided in the browser`,\n            color: 'green'\n          });\n        }\n      }\n      // No code or success - off to the mfa page\n      if (!loginDone) {\n        success = true;\n        navigate('/mfa');\n      }\n    }\n  }\n}\n\n/**\n * Logout the user from the current session\n *\n * @arg deleteToken: If true, delete the token from the server\n */\nexport const doLogout = async (navigate: NavigateFunction) => {\n  const { clearUserState, isLoggedIn } = useUserState.getState();\n  const { setAuthContext } = useServerApiState.getState();\n\n  // Logout from the server session\n  if (isLoggedIn() || !!getCsrfCookie()) {\n    await authApi(apiUrl(ApiEndpoints.auth_session), undefined, 'delete').catch(\n      () => {}\n    );\n    showLoginNotification({\n      title: t`Logged Out`,\n      message: t`Successfully logged out`\n    });\n  }\n\n  clearUserState();\n  clearCsrfCookie();\n  setAuthContext(undefined);\n  navigate('/login');\n};\n\nexport const doSimpleLogin = async (email: string) => {\n  const { getHost } = useLocalState.getState();\n  const mail = await axios\n    .post(\n      apiUrl(ApiEndpoints.user_simple_login),\n      {\n        email: email\n      },\n      {\n        baseURL: getHost(),\n        timeout: 2000\n      }\n    )\n    .then((response) => response.data)\n    .catch((_error) => {\n      return false;\n    });\n  return mail;\n};\n\nfunction observeProfile() {\n  // overwrite language and theme info in session with profile info\n\n  const user = useUserState.getState().getUser();\n  const { language, setLanguage, userTheme, setTheme, setWidgets, setLayouts } =\n    useLocalState.getState();\n  if (user) {\n    if (user.profile?.language && language != user.profile.language) {\n      showNotification({\n        title: t`Language changed`,\n        message: t`Your active language has been changed to the one set in your profile`,\n        color: 'blue',\n        icon: 'language'\n      });\n      setLanguage(user.profile.language, true);\n    }\n\n    if (user.profile?.theme) {\n      // extract keys of usertheme and set them to the values of user.profile.theme\n      const newTheme = Object.keys(userTheme).map((key) => {\n        return {\n          key: key as keyof typeof userTheme,\n          value: user.profile.theme[key] as string\n        };\n      });\n      const diff = newTheme.filter(\n        (item) => userTheme[item.key] !== item.value\n      );\n      if (diff.length > 0) {\n        showNotification({\n          title: t`Theme changed`,\n          message: t`Your active theme has been changed to the one set in your profile`,\n          color: 'blue'\n        });\n        setTheme(newTheme);\n      }\n    }\n\n    if (user.profile?.widgets) {\n      const data = user.profile.widgets;\n      // split data into widgets and layouts (either might be undefined)\n      const widgets = data.widgets ?? [];\n      const layouts = data.layouts ?? {};\n      setWidgets(widgets, true);\n      setLayouts(layouts, true);\n    }\n  }\n}\n\nexport async function ensureCsrf() {\n  const cookie = getCsrfCookie();\n  if (cookie == undefined) {\n    await api.get(apiUrl(ApiEndpoints.auth_session)).catch(() => {});\n  }\n}\n\nexport function handleReset(\n  navigate: NavigateFunction,\n  values: { email: string }\n) {\n  ensureCsrf();\n  api.post(apiUrl(ApiEndpoints.user_reset), values).then((val) => {\n    if (val.status === 200) {\n      notifications.show({\n        title: t`Mail delivery successful`,\n        message: t`Check your inbox for a reset link. This only works if you have an account. Check in spam too.`,\n        color: 'green',\n        autoClose: false\n      });\n      navigate('/login');\n    } else {\n      notifications.show({\n        title: t`Reset failed`,\n        message: t`Check your input and try again.`,\n        color: 'red'\n      });\n    }\n  });\n}\n\nexport async function handleMfaLogin(\n  navigate: NavigateFunction,\n  location: Location<any> | undefined,\n  values: { code: string; remember?: boolean },\n  setError: (message: string | undefined) => void\n) {\n  const { setAuthContext } = useServerApiState.getState();\n\n  const result = await authApi(\n    apiUrl(ApiEndpoints.auth_login_2fa),\n    undefined,\n    'post',\n    {\n      code: values.code\n    }\n  )\n    .then((response) => {\n      handleSuccessFullAuth(response, navigate, location, setError);\n      return true;\n    })\n    .catch((err) => {\n      // Already logged in, but with a different session\n      if (err?.response?.status == 409) {\n        notifications.show({\n          title: t`Already logged in`,\n          message: t`There is a conflicting session on the server for this browser. Please logout of that first.`,\n          color: 'red',\n          autoClose: false\n        });\n        // MFA trust flow pending\n      } else if (err?.response?.status == 401) {\n        const mfa_trust = err.response.data.data.flows.find(\n          (flow: any) => flow.id == FlowEnum.MfaTrust\n        );\n        if (mfa_trust?.is_pending) {\n          setAuthContext(err.response.data.data);\n          authApi(apiUrl(ApiEndpoints.auth_trust), undefined, 'post', {\n            trust: values.remember ?? false\n          }).then((response) => {\n            handleSuccessFullAuth(response, navigate, location, setError);\n          });\n        }\n      } else {\n        const errors = err.response?.data?.errors;\n        let msg = t`An error occurred`;\n\n        if (errors) {\n          msg = errors.map((e: any) => e.message).join(', ');\n        }\n        setError(msg);\n      }\n      return false;\n    });\n  return result;\n}\n\n/**\n * Check login state, and redirect the user as required.\n *\n * The user may be logged in via the following methods:\n * - An existing API token is stored in the session\n * - An existing CSRF cookie is stored in the browser\n */\nexport const checkLoginState = async (\n  navigate: any,\n  redirect?: any,\n  no_redirect?: boolean\n) => {\n  const { setLoginChecked } = useUserState.getState();\n  setApiDefaults();\n\n  if (redirect == '/') {\n    redirect = '/home';\n  }\n\n  const { isLoggedIn, fetchUserState } = useUserState.getState();\n\n  // Callback function when login is successful\n  const loginSuccess = () => {\n    setLoginChecked(true);\n    showLoginNotification({\n      title: t`Logged In`,\n      message: t`Successfully logged in`\n    });\n\n    observeProfile();\n\n    fetchGlobalStates(navigate);\n    followRedirect(navigate, redirect);\n  };\n\n  if (isLoggedIn()) {\n    // Already logged in\n    loginSuccess();\n    return;\n  }\n\n  // Not yet logged in, but we might have a valid session cookie\n  // Attempt to login\n  await fetchUserState();\n\n  if (isLoggedIn()) {\n    loginSuccess();\n  } else if (!no_redirect) {\n    setLoginChecked(true);\n    navigate('/login', { state: redirect });\n  }\n  setLoginChecked(true);\n};\n\nfunction handleSuccessFullAuth(\n  response?: any,\n  navigate?: NavigateFunction,\n  location?: Location<any>,\n  setError?: (message: string | undefined) => void\n) {\n  const { setAuthenticated, fetchUserState } = useUserState.getState();\n  const { setAuthContext } = useServerApiState.getState();\n\n  if (setError) {\n    // If an error function is provided, clear any previous errors\n    setError(undefined);\n  }\n\n  if (response.data?.data) {\n    setAuthContext(response.data?.data);\n  }\n  setAuthenticated();\n\n  fetchUserState().finally(() => {\n    observeProfile();\n    fetchGlobalStates(navigate);\n\n    if (navigate && location) {\n      followRedirect(navigate, location?.state);\n    }\n  });\n}\n\n/*\n * Return the value of the CSRF cookie, if available\n */\nexport function getCsrfCookie() {\n  const cookieValue = document.cookie\n    .split('; ')\n    .find((row) => row.startsWith('csrftoken='))\n    ?.split('=')[1];\n\n  return cookieValue;\n}\n\n/*\n * Clear out the CSRF and session cookies (force session logout)\n */\nexport function clearCsrfCookie() {\n  document.cookie =\n    'csrftoken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n}\n\nexport async function ProviderLogin(\n  provider: AuthProvider,\n  process: 'login' | 'connect' = 'login'\n) {\n  await ensureCsrf();\n  post(generateUrl(apiUrl(ApiEndpoints.auth_provider_redirect)), {\n    provider: provider.id,\n    callback_url: generateUrl('/logged-in'),\n    process: process,\n    csrfmiddlewaretoken: getCsrfCookie()\n  });\n}\n\n/**\n * Makes an API request with session tokens using the provided URL, configuration, method, and data.\n *\n * @param url - The URL to which the request is sent.\n * @param config - Optional Axios request configuration.\n * @param method - The HTTP method to use for the request. Defaults to 'get'.\n * @param data - Optional data to be sent with the request.\n * @returns A promise that resolves to the response of the API request.\n */\nexport function authApi(\n  url: string,\n  config: AxiosRequestConfig | undefined = undefined,\n  method: 'get' | 'patch' | 'post' | 'put' | 'delete' = 'get',\n  data?: any\n) {\n  const requestConfig = config || {};\n\n  // set method\n  requestConfig.method = method;\n\n  // set data\n  if (data) {\n    requestConfig.data = data;\n  }\n\n  // use normal api\n  return api(url, requestConfig);\n}\n\nexport const getTotpSecret = async (setTotpQr: any) => {\n  await authApi(apiUrl(ApiEndpoints.auth_totp), undefined, 'get').catch(\n    (err) => {\n      if (err.status == 404 && err.response.data.meta.secret) {\n        setTotpQr(err.response.data.meta);\n      } else {\n        const msg = err.response.data.errors[0].message;\n        showNotification({\n          title: t`Failed to set up MFA`,\n          message: msg,\n          color: 'red'\n        });\n      }\n    }\n  );\n};\n\nexport function handleVerifyTotp(\n  value: string,\n  navigate: NavigateFunction,\n  location: Location<any>\n) {\n  return () => {\n    authApi(apiUrl(ApiEndpoints.auth_totp), undefined, 'post', {\n      code: value\n    }).then(() => {\n      followRedirect(navigate, location?.state);\n    });\n  };\n}\n\nexport function handlePasswordReset(\n  key: string | null,\n  password: string,\n  navigate: NavigateFunction\n) {\n  function success() {\n    notifications.show({\n      title: t`Password set`,\n      message: t`The password was set successfully. You can now login with your new password`,\n      color: 'green',\n      autoClose: false\n    });\n    navigate('/login');\n  }\n\n  function passwordError(values: any) {\n    notifications.show({\n      title: t`Reset failed`,\n      message: values?.errors.map((e: any) => e.message).join('\\n'),\n      color: 'red'\n    });\n  }\n\n  // Set password with call to backend\n  api\n    .post(\n      apiUrl(ApiEndpoints.user_reset_set),\n      {\n        key: key,\n        password: password\n      },\n      { headers: { Authorization: '' } }\n    )\n    .then((val) => {\n      if (val.status === 200) {\n        success();\n      } else {\n        passwordError(val.data);\n      }\n    })\n    .catch((err) => {\n      if (err.response?.status === 400) {\n        passwordError(err.response.data);\n      } else if (err.response?.status === 401) {\n        success();\n      } else {\n        passwordError(err.response.data);\n      }\n    });\n}\n\nexport function handleVerifyEmail(\n  key: string | undefined,\n  navigate: NavigateFunction\n) {\n  // Set password with call to backend\n  api\n    .post(apiUrl(ApiEndpoints.auth_email_verify), {\n      key: key\n    })\n    .then((val) => {\n      if (val.status === 200) {\n        navigate('/login');\n      }\n    });\n}\n\nexport function handleChangePassword(\n  pwd1: string,\n  pwd2: string,\n  current: string,\n  navigate: NavigateFunction\n) {\n  const { clearUserState } = useUserState.getState();\n\n  function passwordError(values: any) {\n    let message: any =\n      values?.new_password ||\n      values?.new_password2 ||\n      values?.new_password1 ||\n      values?.current_password ||\n      values?.error ||\n      t`Password could not be changed`;\n\n    // If message is array\n    if (!Array.isArray(message)) {\n      message = [message];\n    }\n\n    message.forEach((msg: string) => {\n      notifications.show({\n        title: t`Error`,\n        message: msg,\n        color: 'red'\n      });\n    });\n  }\n\n  // check if passwords match\n  if (pwd1 !== pwd2) {\n    passwordError({ new_password2: t`The two password fields didn’t match` });\n    return;\n  }\n\n  // Set password with call to backend\n  api\n    .post(apiUrl(ApiEndpoints.auth_pwd_change), {\n      current_password: current,\n      new_password: pwd2\n    })\n    .then((val) => {\n      passwordError(val.data);\n    })\n    .catch((err) => {\n      if (err.status === 401) {\n        notifications.show({\n          title: t`Password Changed`,\n          message: t`The password was set successfully. You can now login with your new password`,\n          color: 'green',\n          autoClose: false\n        });\n        clearUserState();\n        clearCsrfCookie();\n        navigate('/login');\n      } else {\n        // compile errors\n        const errors: { [key: string]: string[] } = {};\n        for (const val of err.response.data.errors) {\n          if (!errors[val.param]) {\n            errors[val.param] = [];\n          }\n          errors[val.param].push(val.message);\n        }\n        passwordError(errors);\n      }\n    });\n}\n","import { create } from 'zustand';\n\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport type { ModelType } from '@lib/enums/ModelType';\nimport { UserPermissions, type UserRoles } from '@lib/enums/Roles';\nimport { apiUrl } from '@lib/functions/Api';\nimport type { UserProps, UserStateProps } from '@lib/types/User';\nimport { api, setApiDefaults } from '../App';\nimport { clearCsrfCookie } from '../functions/auth';\n\n/**\n * Global user information state, using Zustand manager\n */\nexport const useUserState = create<UserStateProps>((set, get) => ({\n  user: undefined,\n  is_authed: false,\n  setAuthenticated: (authed = true) => {\n    set({ is_authed: authed });\n    setApiDefaults();\n  },\n  userId: () => {\n    const user: UserProps = get().user as UserProps;\n    return user?.pk;\n  },\n  username: () => {\n    const user: UserProps = get().user as UserProps;\n\n    if (user?.first_name || user?.last_name) {\n      return `${user.first_name} ${user.last_name}`.trim();\n    } else {\n      return user?.username ?? '';\n    }\n  },\n  setUser: (newUser: UserProps | undefined) => set({ user: newUser }),\n  getUser: () => get().user,\n  clearUserState: () => {\n    set({ user: undefined, is_authed: false });\n    clearCsrfCookie();\n    setApiDefaults();\n  },\n  fetchUserToken: async () => {\n    // If neither the csrf or session cookies are available, we cannot fetch a token\n    if (\n      !document.cookie.includes('csrftoken') &&\n      !document.cookie.includes('sessionid')\n    ) {\n      get().setAuthenticated(false);\n      return;\n    }\n\n    await api\n      .get(apiUrl(ApiEndpoints.auth_session))\n      .then((response) => {\n        if (response.status == 200 && response.data.meta.is_authenticated) {\n          get().setAuthenticated(true);\n        } else {\n          get().setAuthenticated(false);\n        }\n      })\n      .catch(() => {\n        get().setAuthenticated(false);\n      });\n  },\n  fetchUserState: async () => {\n    if (!get().isAuthed()) {\n      await get().fetchUserToken();\n    }\n\n    // If we still don't have a token, clear the user state and return\n    if (!get().isAuthed()) {\n      get().clearUserState();\n      return;\n    }\n\n    // Fetch user data\n    await api\n      .get(apiUrl(ApiEndpoints.user_me), {\n        timeout: 2000\n      })\n      .then((response) => {\n        if (response.status == 200) {\n          const user: UserProps = {\n            pk: response.data.pk,\n            first_name: response.data?.first_name ?? '',\n            last_name: response.data?.last_name ?? '',\n            email: response.data.email,\n            username: response.data.username,\n            groups: response.data.groups,\n            profile: response.data.profile\n          };\n          get().setUser(user);\n          // profile info\n        } else {\n          get().clearUserState();\n        }\n      })\n      .catch(() => {\n        get().clearUserState();\n      });\n\n    if (!get().isLoggedIn()) {\n      return;\n    }\n\n    // Fetch role data\n    await api\n      .get(apiUrl(ApiEndpoints.user_roles))\n      .then((response) => {\n        if (response.status == 200) {\n          const user: UserProps = get().user as UserProps;\n\n          // Update user with role data\n          if (user) {\n            user.roles = response.data?.roles ?? {};\n            user.permissions = response.data?.permissions ?? {};\n            user.is_staff = response.data?.is_staff ?? false;\n            user.is_superuser = response.data?.is_superuser ?? false;\n            get().setUser(user);\n          }\n        } else {\n          get().clearUserState();\n        }\n      })\n      .catch((_error) => {\n        console.error('ERR: Error fetching user roles');\n        get().clearUserState();\n      });\n  },\n  isAuthed: () => {\n    return get().is_authed;\n  },\n  isLoggedIn: () => {\n    if (!get().isAuthed()) {\n      return false;\n    }\n    const user: UserProps = get().user as UserProps;\n    return !!user && !!user.pk;\n  },\n  isStaff: () => {\n    const user: UserProps = get().user as UserProps;\n    return user?.is_staff ?? false;\n  },\n  isSuperuser: () => {\n    const user: UserProps = get().user as UserProps;\n    return user?.is_superuser ?? false;\n  },\n  checkUserRole: (role: UserRoles, permission: UserPermissions) => {\n    // Check if the user has the specified permission for the specified role\n    const user: UserProps = get().user as UserProps;\n\n    if (!user) {\n      return false;\n    }\n\n    if (user?.is_superuser) return true;\n    if (user?.roles === undefined) return false;\n    if (user?.roles[role] === undefined) return false;\n    if (user?.roles[role] === null) return false;\n\n    return user?.roles[role]?.includes(permission) ?? false;\n  },\n  hasDeleteRole: (role: UserRoles) => {\n    return get().checkUserRole(role, UserPermissions.delete);\n  },\n  hasChangeRole: (role: UserRoles) => {\n    return get().checkUserRole(role, UserPermissions.change);\n  },\n  hasAddRole: (role: UserRoles) => {\n    return get().checkUserRole(role, UserPermissions.add);\n  },\n  hasViewRole: (role: UserRoles) => {\n    return get().checkUserRole(role, UserPermissions.view);\n  },\n  checkUserPermission: (model: ModelType, permission: UserPermissions) => {\n    // Check if the user has the specified permission for the specified model\n    const user: UserProps = get().user as UserProps;\n\n    if (!user) {\n      return false;\n    }\n\n    if (user?.is_superuser) return true;\n\n    if (user?.permissions === undefined) return false;\n    if (user?.permissions[model] === undefined) return false;\n    if (user?.permissions[model] === null) return false;\n\n    return user?.permissions[model]?.includes(permission) ?? false;\n  },\n  hasDeletePermission: (model: ModelType) => {\n    return get().checkUserPermission(model, UserPermissions.delete);\n  },\n  hasChangePermission: (model: ModelType) => {\n    return get().checkUserPermission(model, UserPermissions.change);\n  },\n  hasAddPermission: (model: ModelType) => {\n    return get().checkUserPermission(model, UserPermissions.add);\n  },\n  hasViewPermission: (model: ModelType) => {\n    return get().checkUserPermission(model, UserPermissions.view);\n  },\n  // login state\n  login_checked: false,\n  setLoginChecked: (value) => {\n    set({ login_checked: value });\n  }\n}));\n","import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { apiUrl } from '@lib/functions/Api';\nimport type { UserTheme } from '@lib/types/Core';\nimport type { HostList } from '@lib/types/Server';\nimport { api } from '../App';\nimport { useUserState } from './UserState';\n\ninterface LocalStateProps {\n  autoupdate: boolean;\n  toggleAutoupdate: () => void;\n  host: string;\n  getHost: () => string;\n  setHost: (newHost: string, newHostKey: string) => void;\n  hostKey: string;\n  hostList: HostList;\n  setHostList: (newHostList: HostList) => void;\n  language: string;\n  setLanguage: (newLanguage: string, noPatch?: boolean) => void;\n  userTheme: UserTheme;\n  setTheme: (\n    newValues: {\n      key: keyof UserTheme;\n      value: string;\n    }[],\n    noPatch?: boolean\n  ) => void;\n  widgets: string[];\n  setWidgets: (widgets: string[], noPatch?: boolean) => void;\n  layouts: any;\n  setLayouts: (layouts: any, noPatch?: boolean) => void;\n  showSampleDashboard: boolean;\n  setShowSampleDashboard: (value: boolean) => void;\n  // panels\n  lastUsedPanels: Record<string, string>;\n  setLastUsedPanel: (panelKey: string) => (value: string) => void;\n  detailDrawerStack: number;\n  addDetailDrawer: (value: number | false) => void;\n  navigationOpen: boolean;\n  setNavigationOpen: (value: boolean) => void;\n  allowMobile: boolean;\n  setAllowMobile: (value: boolean) => void;\n}\n\nexport const useLocalState = create<LocalStateProps>()(\n  persist(\n    (set, get) => ({\n      autoupdate: false,\n      toggleAutoupdate: () =>\n        set((state) => ({ autoupdate: !state.autoupdate })),\n      host: '',\n      getHost: () => {\n        // Retrieve and validate the API host\n        const state = get();\n\n        let host = state.host;\n\n        // If the server provides an override for the host, use that\n        if (window.INVENTREE_SETTINGS?.api_host) {\n          host = window.INVENTREE_SETTINGS.api_host;\n        }\n\n        // If no host is provided, use the first host in the list\n        if (!host && Object.keys(state.hostList).length) {\n          host = Object.values(state.hostList)[0].host;\n        }\n\n        // If no host is provided, fallback to using the current URL (default)\n        if (!host) {\n          host = window.location.origin;\n        }\n        return host;\n      },\n      setHost: (newHost, newHostKey) =>\n        set({ host: newHost, hostKey: newHostKey }),\n      hostKey: '',\n      hostList: {},\n      setHostList: (newHostList) => set({ hostList: newHostList }),\n      language: 'en',\n      setLanguage: (newLanguage, noPatch = false) => {\n        set({ language: newLanguage });\n        if (!noPatch) patchUser('language', newLanguage);\n      },\n      userTheme: {\n        primaryColor: 'indigo',\n        whiteColor: '#fff',\n        blackColor: '#000',\n        radius: 'xs',\n        loader: 'oval'\n      },\n      setTheme: (newValues, noPatch = false) => {\n        const newTheme = { ...get().userTheme };\n        newValues.forEach((val) => {\n          newTheme[val.key] = val.value;\n        });\n        set({ userTheme: newTheme });\n        if (!noPatch) patchUser('theme', newTheme);\n      },\n      widgets: [],\n      setWidgets: (newWidgets, noPatch = false) => {\n        // check for difference\n        if (JSON.stringify(newWidgets) === JSON.stringify(get().widgets)) {\n          return;\n        }\n\n        set({ widgets: newWidgets });\n        if (!noPatch)\n          patchUser('widgets', { widgets: newWidgets, layouts: get().layouts });\n      },\n      layouts: {},\n      setLayouts: (newLayouts, noPatch) => {\n        // check for difference\n        if (JSON.stringify(newLayouts) === JSON.stringify(get().layouts)) {\n          return;\n        }\n\n        set({ layouts: newLayouts });\n        if (!noPatch)\n          patchUser('widgets', { widgets: get().widgets, layouts: newLayouts });\n      },\n      showSampleDashboard: true,\n      setShowSampleDashboard: (value) => {\n        set({ showSampleDashboard: value });\n      },\n      // panels\n      lastUsedPanels: {},\n      setLastUsedPanel: (panelKey) => (value) => {\n        const currentValue = get().lastUsedPanels[panelKey];\n        if (currentValue !== value) {\n          set({\n            lastUsedPanels: { ...get().lastUsedPanels, [panelKey]: value }\n          });\n        }\n      },\n\n      // detail drawers\n      detailDrawerStack: 0,\n      addDetailDrawer: (value) => {\n        set({\n          detailDrawerStack:\n            value === false ? 0 : get().detailDrawerStack + value\n        });\n      },\n      // navigation\n      navigationOpen: false,\n      setNavigationOpen: (value) => {\n        set({ navigationOpen: value });\n      },\n      allowMobile: false,\n      setAllowMobile: (value) => {\n        set({ allowMobile: value });\n      }\n    }),\n    {\n      name: 'session-settings'\n    }\n  )\n);\n\n/*\npushes changes in user profile to backend\n*/\nfunction patchUser(key: 'language' | 'theme' | 'widgets', val: any) {\n  const uid = useUserState.getState().userId();\n  if (uid) {\n    api.patch(apiUrl(ApiEndpoints.user_profile), { [key]: val });\n  } else {\n    console.log('user not logged in, not patching');\n  }\n}\n","import { QueryClient } from '@tanstack/react-query';\nimport axios from 'axios';\n\nimport { useLocalState } from './states/LocalState';\n\n// Global API instance\nexport const api = axios.create({});\n\n/*\n * Setup default settings for the Axios API instance.\n */\nexport function setApiDefaults() {\n  const { getHost } = useLocalState.getState();\n\n  api.defaults.baseURL = getHost();\n  api.defaults.timeout = 5000;\n\n  api.defaults.withCredentials = true;\n  api.defaults.withXSRFToken = true;\n  api.defaults.xsrfCookieName = 'csrftoken';\n  api.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n  axios.defaults.withCredentials = true;\n  axios.defaults.withXSRFToken = true;\n  axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n  axios.defaults.xsrfCookieName = 'csrftoken';\n}\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false\n    }\n  }\n});\n","import {\n  type MantineColorScheme,\n  type MantineColorSchemeManager,\n  isMantineColorScheme\n} from '@mantine/core';\n\nexport interface LocalStorageColorSchemeManagerOptions {\n  /** Local storage key used to retrieve value with `localStorage.getItem(key)`, `mantine-color-scheme` by default */\n  key?: string;\n}\n\nexport function localStorageColorSchemeManager({\n  key = 'mantine-color-scheme'\n}: LocalStorageColorSchemeManagerOptions = {}): MantineColorSchemeManager {\n  let handleStorageEvent: (event: StorageEvent) => void;\n\n  return {\n    get: (defaultValue) => {\n      if (typeof window === 'undefined') {\n        return defaultValue;\n      }\n\n      try {\n        return (\n          (window.localStorage.getItem(key) as MantineColorScheme) ||\n          defaultValue\n        );\n      } catch {\n        return defaultValue;\n      }\n    },\n\n    set: (value) => {\n      try {\n        window.localStorage.setItem(key, value);\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[@mantine/core] Local storage color scheme manager was unable to save color scheme.',\n          error\n        );\n      }\n    },\n\n    subscribe: (onUpdate) => {\n      handleStorageEvent = (event) => {\n        if (event.storageArea === window.localStorage && event.key === key) {\n          isMantineColorScheme(event.newValue) && onUpdate(event.newValue);\n        }\n      };\n\n      window.addEventListener('storage', handleStorageEvent);\n    },\n\n    unsubscribe: () => {\n      window.removeEventListener('storage', handleStorageEvent);\n    },\n\n    clear: () => {\n      window.localStorage.removeItem(key);\n    }\n  };\n}\n\nexport const colorSchema = localStorageColorSchemeManager({\n  key: 'scheme'\n});\n","import { createTheme } from '@mantine/core';\nimport { themeToVars } from '@mantine/vanilla-extract';\n\nexport const theme = createTheme({});\nexport const vars = themeToVars(theme);\n","import { Center, Loader, MantineProvider, Stack } from '@mantine/core';\nimport { type JSX, Suspense } from 'react';\n\nimport { colorSchema } from '../contexts/colorSchema';\nimport { theme } from '../theme';\n\nfunction LoadingFallback({\n  fullHeight = false\n}: { fullHeight: boolean }): JSX.Element {\n  return (\n    <MantineProvider theme={theme} colorSchemeManager={colorSchema}>\n      <Stack h={fullHeight ? '100vh' : undefined}>\n        <Center h={fullHeight ? '100vh' : undefined}>\n          <Loader />\n        </Center>\n      </Stack>\n    </MantineProvider>\n  );\n}\n\nexport function Loadable(\n  Component: any,\n  noFallback = false,\n  fullHeight = false\n): any {\n  return (props: JSX.IntrinsicAttributes) => (\n    <Suspense\n      fallback={\n        !noFallback ? <LoadingFallback fullHeight={fullHeight} /> : undefined\n      }\n    >\n      <Component {...props} />\n    </Suspense>\n  );\n}\n\nexport function LoadingItem({ item }: Readonly<{ item: any }>): JSX.Element {\n  const Itm = Loadable(item);\n  return <Itm />;\n}\n","import '@mantine/core/styles.css';\nimport { useViewportSize } from '@mantine/hooks';\nimport { lazy, useEffect } from 'react';\nimport { useShallow } from 'zustand/react/shallow';\n\nimport { setApiDefaults } from '../App';\nimport { Loadable } from '../functions/loading';\nimport { useLocalState } from '../states/LocalState';\n\nfunction checkMobile() {\n  const { height, width } = useViewportSize();\n  if (width < 425 || height < 425) return true;\n  return false;\n}\n\nconst MobileAppView = Loadable(\n  lazy(() => import('./MobileAppView')),\n  true,\n  true\n);\nconst DesktopAppView = Loadable(\n  lazy(() => import('./DesktopAppView')),\n  true,\n  true\n);\n\n// Main App\nexport default function MainView() {\n  const [allowMobile] = useLocalState(\n    useShallow((state) => [state.allowMobile])\n  );\n  // Set initial login status\n  useEffect(() => {\n    try {\n      // Local state initialization\n      setApiDefaults();\n    } catch (e) {\n      console.error(e);\n    }\n  }, []);\n\n  // Check if mobile\n  if (\n    !allowMobile &&\n    window.INVENTREE_SETTINGS.mobile_mode !== 'allow-always' &&\n    checkMobile()\n  ) {\n    return <MobileAppView />;\n  }\n\n  // Main App component\n  return <DesktopAppView />;\n}\n","import '@mantine/carousel/styles.css';\nimport '@mantine/charts/styles.css';\nimport '@mantine/core/styles.css';\nimport '@mantine/dates/styles.css';\nimport '@mantine/notifications/styles.css';\nimport '@mantine/spotlight/styles.css';\nimport * as Sentry from '@sentry/react';\nimport 'mantine-contextmenu/styles.css';\nimport 'mantine-datatable/styles.css';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport * as MantineCore from '@mantine/core';\nimport * as MantineNotifications from '@mantine/notifications';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as ReactDOMClient from 'react-dom/client';\nimport './styles/overrides.css';\n\n// Lingui imports (required for plugin translation)\nimport * as LinguiCore from '@lingui/core';\nimport * as LinguiReact from '@lingui/react';\n\nimport { getBaseUrl } from '@lib/functions/Navigation';\nimport type { HostList } from '@lib/types/Server';\nimport MainView from './views/MainView';\n\n// define settings\ndeclare global {\n  interface Window {\n    INVENTREE_SETTINGS: {\n      server_list: HostList;\n      default_server: string;\n      show_server_selector: boolean;\n      base_url?: string;\n      api_host?: string;\n      sentry_dsn?: string;\n      environment?: string;\n      mobile_mode?: 'default' | 'allow-ignore' | 'allow-always';\n    };\n    react: typeof React;\n    React: typeof React;\n    ReactDOM: typeof ReactDOM;\n    ReactDOMClient: typeof ReactDOMClient;\n    MantineCore: typeof MantineCore;\n    MantineNotifications: typeof MantineNotifications;\n  }\n}\n\n// Running in dev mode (i.e. vite)\nexport const IS_DEV = import.meta.env.DEV;\nexport const IS_DEMO = import.meta.env.VITE_DEMO === 'true';\nexport const IS_DEV_OR_DEMO = IS_DEV || IS_DEMO;\n\n// Filter out any settings that are not defined\nconst loaded_vals = (window.INVENTREE_SETTINGS || {}) as any;\n\nObject.keys(loaded_vals).forEach((key) => {\n  if (loaded_vals[key] === undefined) {\n    delete loaded_vals[key];\n\n    // check for empty server list\n  } else if (key === 'server_list' && loaded_vals[key].length === 0) {\n    delete loaded_vals[key];\n  }\n});\n\nwindow.INVENTREE_SETTINGS = {\n  server_list: {\n    ...(IS_DEV\n      ? {\n          'server-localhost': {\n            host: 'http://localhost:8000',\n            name: 'Localhost'\n          }\n        }\n      : {}),\n    ...(IS_DEV_OR_DEMO\n      ? {\n          'server-demo': {\n            host: 'https://demo.inventree.org/',\n            name: 'InvenTree Demo'\n          }\n        }\n      : {}),\n    'server-current': {\n      host: `${window.location.origin}/`,\n      name: 'Current Server'\n    }\n  },\n  default_server: IS_DEV\n    ? 'server-localhost'\n    : IS_DEMO\n      ? 'server-demo'\n      : 'server-current',\n  show_server_selector: IS_DEV_OR_DEMO,\n\n  // Merge in settings that are already set via django's spa_view or for development\n  ...loaded_vals\n};\n\nif (window.INVENTREE_SETTINGS.sentry_dsn) {\n  console.log('Sentry enabled');\n  Sentry.init({\n    dsn: window.INVENTREE_SETTINGS.sentry_dsn,\n    tracesSampleRate: 1.0,\n    environment: window.INVENTREE_SETTINGS.environment || 'default'\n  });\n}\n\n(window as any).React = React;\n(window as any).ReactDOM = ReactDOM;\n(window as any).ReactDOMClient = ReactDOMClient;\n(window as any).MantineCore = MantineCore;\n(window as any).MantineNotifications = MantineNotifications;\n(window as any).LinguiCore = LinguiCore;\n(window as any).LinguiReact = LinguiReact;\n\n// Redirect to base url if on /\nif (window.location.pathname === '/') {\n  window.location.replace(`/${getBaseUrl()}`);\n}\n\nReactDOMClient.createRoot(\n  document.getElementById('root') as HTMLElement\n).render(\n  <React.StrictMode>\n    <MainView />\n  </React.StrictMode>\n);\n"],"file":"assets/index-ClP83spC.js"}