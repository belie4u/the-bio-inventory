{"version":3,"file":"ScheduledTasksTable-Dg028b2U.js","sources":["../../../../../../frontend/src/tables/settings/ScheduledTasksTable.tsx"],"sourcesContent":["import { t } from '@lingui/core/macro';\nimport { Group, Text } from '@mantine/core';\nimport { IconCircleCheck, IconCircleX } from '@tabler/icons-react';\nimport { useMemo } from 'react';\n\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { apiUrl } from '@lib/functions/Api';\nimport type { TableColumn } from '@lib/types/Tables';\nimport { useTable } from '../../hooks/UseTable';\nimport { InvenTreeTable } from '../InvenTreeTable';\n\nexport default function ScheduledTasksTable() {\n  const table = useTable('tasks-scheduled');\n\n  const columns: TableColumn[] = useMemo(() => {\n    return [\n      {\n        accessor: 'name',\n        title: t`Task`,\n        sortable: true,\n        switchable: false,\n        render: (record: any) => {\n          return record.name || record.task;\n        }\n      },\n      {\n        accessor: 'last_run',\n        title: t`Last Run`,\n        sortable: true,\n        switchable: false,\n        render: (record: any) => {\n          if (!record.last_run) {\n            return '-';\n          }\n\n          return (\n            <Group justify='space-between'>\n              <Text>{record.last_run}</Text>\n              {record.success ? (\n                <IconCircleCheck color='green' />\n              ) : (\n                <IconCircleX color='red' />\n              )}\n            </Group>\n          );\n        }\n      },\n      {\n        accessor: 'next_run',\n        title: t`Next Run`,\n        sortable: true,\n        switchable: false\n      }\n    ];\n  }, []);\n\n  return (\n    <InvenTreeTable\n      url={apiUrl(ApiEndpoints.task_scheduled_list)}\n      tableState={table}\n      columns={columns}\n      props={{}}\n    />\n  );\n}\n"],"names":["ScheduledTasksTable","table","useTable","columns","useMemo","accessor","title","_i18n","_","id","sortable","switchable","render","record","name","task","last_run","jsxs","Group","jsx","Text","success","IconCircleCheck","IconCircleX","InvenTreeTable","apiUrl","ApiEndpoints","task_scheduled_list"],"mappings":"2ZAWA,SAAwBA,GAAsB,CAC5C,MAAMC,EAAQC,EAAS,iBAAiB,EAElCC,EAAyBC,EAAAA,QAAQ,IAC9B,CACL,CACEC,SAAU,OACVC,MAAKC,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAM,EACbC,SAAU,GACVC,WAAY,GACZC,OAASC,GACAA,EAAOC,MAAQD,EAAOE,IAC/B,EAEF,CACEV,SAAU,WACVC,MAAKC,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAU,EACjBC,SAAU,GACVC,WAAY,GACZC,OAASC,GACFA,EAAOG,SAKVC,EAAAA,KAACC,EAAA,CAAM,QAAQ,gBACb,SAAA,CAAAC,EAAAA,IAACC,EAAA,CAAMP,WAAOG,QAAAA,CAAS,EACtBH,EAAOQ,QACNF,MAACG,EAAA,CAAgB,MAAM,QAAO,EAE9BH,EAAAA,IAACI,EAAA,CAAY,MAAM,KAAA,CAAK,CAAA,EAE5B,EAXO,GAaX,EAEF,CACElB,SAAU,WACVC,MAAKC,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAU,EACjBC,SAAU,GACVC,WAAY,EAAA,CACb,EAEF,CAAA,CAAE,EAEL,OACEQ,EAAAA,IAACK,EAAA,CACC,IAAKC,EAAOC,EAAaC,mBAAmB,EAC5C,WAAY1B,EACZ,QAAAE,EACA,MAAO,CAAA,CAAC,CAAE,CAGhB"}