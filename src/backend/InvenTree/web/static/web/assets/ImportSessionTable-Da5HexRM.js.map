{"version":3,"file":"ImportSessionTable-Da5HexRM.js","sources":["../../../../../../frontend/src/tables/settings/ImportSessionTable.tsx"],"sourcesContent":["import { t } from '@lingui/core/macro';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { AddItemButton } from '@lib/components/AddItemButton';\nimport { ProgressBar } from '@lib/components/ProgressBar';\nimport { type RowAction, RowDeleteAction } from '@lib/components/RowActions';\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { ModelType } from '@lib/enums/ModelType';\nimport { apiUrl } from '@lib/functions/Api';\nimport type { TableFilter } from '@lib/types/Filters';\nimport type { TableColumn } from '@lib/types/Tables';\nimport ImporterDrawer from '../../components/importer/ImporterDrawer';\nimport { AttachmentLink } from '../../components/items/AttachmentLink';\nimport { RenderUser } from '../../components/render/User';\nimport { dataImporterSessionFields } from '../../forms/ImporterForms';\nimport { useFilters } from '../../hooks/UseFilter';\nimport {\n  useCreateApiFormModal,\n  useDeleteApiFormModal\n} from '../../hooks/UseForm';\nimport { useTable } from '../../hooks/UseTable';\nimport { DateColumn, StatusColumn } from '../ColumnRenderers';\nimport { StatusFilterOptions, UserFilter } from '../Filter';\nimport { InvenTreeTable } from '../InvenTreeTable';\n\nexport default function ImportSessionTable() {\n  const table = useTable('importsession');\n\n  const [opened, setOpened] = useState<boolean>(false);\n\n  const [selectedSession, setSelectedSession] = useState<number | undefined>(\n    undefined\n  );\n\n  const deleteSession = useDeleteApiFormModal({\n    url: ApiEndpoints.import_session_list,\n    pk: selectedSession,\n    title: t`Delete Import Session`,\n    table: table\n  });\n\n  const newImportSession = useCreateApiFormModal({\n    url: ApiEndpoints.import_session_list,\n    title: t`Create Import Session`,\n    fields: dataImporterSessionFields({\n      allowUpdate: true\n    }),\n    onFormSuccess: (response: any) => {\n      setSelectedSession(response.pk);\n      setOpened(true);\n      table.refreshTable();\n    }\n  });\n\n  const columns: TableColumn[] = useMemo(() => {\n    return [\n      {\n        accessor: 'model_type',\n        sortable: true\n      },\n      StatusColumn({ model: ModelType.importsession, accessor: 'status' }),\n      {\n        accessor: 'data_file',\n        render: (record: any) => (\n          <AttachmentLink attachment={record.data_file} />\n        ),\n        sortable: false,\n        noContext: true\n      },\n      DateColumn({\n        accessor: 'timestamp',\n        title: t`Uploaded`\n      }),\n      {\n        accessor: 'user',\n        sortable: false,\n        title: t`User`,\n        render: (record: any) => RenderUser({ instance: record.user_detail })\n      },\n      {\n        sortable: false,\n        accessor: 'row_count',\n        title: t`Imported Rows`,\n        render: (record: any) => (\n          <ProgressBar\n            progressLabel={true}\n            value={record.completed_row_count}\n            maximum={record.row_count}\n          />\n        )\n      }\n    ];\n  }, []);\n\n  const modelTypeFilters = useFilters({\n    url: apiUrl(ApiEndpoints.import_session_list),\n    method: 'OPTIONS',\n    accessor: 'data.actions.POST.model_type.choices',\n    transform: (item: any) => {\n      return {\n        value: item.value,\n        label: item.display_name\n      };\n    }\n  });\n\n  const tableFilters: TableFilter[] = useMemo(() => {\n    return [\n      {\n        name: 'model_type',\n        label: t`Model Type`,\n        description: t`Filter by target model type`,\n        choices: modelTypeFilters.choices\n      },\n      {\n        name: 'status',\n        label: t`Status`,\n        description: t`Filter by import session status`,\n        choiceFunction: StatusFilterOptions(ModelType.importsession)\n      },\n      UserFilter({})\n    ];\n  }, [modelTypeFilters.choices]);\n\n  const tableActions = useMemo(() => {\n    return [\n      <AddItemButton\n        key='create-import-session'\n        tooltip={t`Create Import Session`}\n        onClick={() => newImportSession.open()}\n      />\n    ];\n  }, []);\n\n  const rowActions = useCallback((record: any): RowAction[] => {\n    return [\n      RowDeleteAction({\n        onClick: () => {\n          setSelectedSession(record.pk);\n          deleteSession.open();\n        }\n      })\n    ];\n  }, []);\n\n  return (\n    <>\n      {newImportSession.modal}\n      {deleteSession.modal}\n      <InvenTreeTable\n        url={apiUrl(ApiEndpoints.import_session_list)}\n        tableState={table}\n        columns={columns}\n        props={{\n          rowActions: rowActions,\n          tableActions: tableActions,\n          tableFilters: tableFilters,\n          enableBulkDelete: true,\n          enableSelection: true,\n          onRowClick: (record: any) => {\n            setSelectedSession(record.pk);\n            setOpened(true);\n          }\n        }}\n      />\n      <ImporterDrawer\n        sessionId={selectedSession ?? -1}\n        opened={selectedSession !== undefined && opened}\n        onClose={() => {\n          setSelectedSession(undefined);\n          setOpened(false);\n          table.refreshTable();\n        }}\n      />\n    </>\n  );\n}\n"],"names":["ImportSessionTable","table","useTable","opened","setOpened","useState","selectedSession","setSelectedSession","undefined","deleteSession","useDeleteApiFormModal","url","ApiEndpoints","import_session_list","pk","title","_i18n","_","id","newImportSession","useCreateApiFormModal","fields","dataImporterSessionFields","allowUpdate","onFormSuccess","response","refreshTable","columns","useMemo","accessor","sortable","StatusColumn","model","ModelType","importsession","render","record","AttachmentLink","data_file","noContext","DateColumn","RenderUser","instance","user_detail","jsx","ProgressBar","completed_row_count","row_count","modelTypeFilters","useFilters","apiUrl","method","transform","item","value","label","display_name","tableFilters","name","description","choices","choiceFunction","StatusFilterOptions","UserFilter","tableActions","AddItemButton","open","rowActions","useCallback","RowDeleteAction","onClick","jsxs","Fragment","modal","InvenTreeTable","enableBulkDelete","enableSelection","onRowClick","ImporterDrawer"],"mappings":"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"}