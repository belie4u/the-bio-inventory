{"version":3,"file":"LocationTypesTable-Chg5NjVv.js","sources":["../../../../../../frontend/src/tables/stock/LocationTypesTable.tsx"],"sourcesContent":["import { t } from '@lingui/core/macro';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { AddItemButton } from '@lib/components/AddItemButton';\nimport {\n  type RowAction,\n  RowDeleteAction,\n  RowEditAction\n} from '@lib/components/RowActions';\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { UserRoles } from '@lib/enums/Roles';\nimport { apiUrl } from '@lib/functions/Api';\nimport type { ApiFormFieldSet } from '@lib/types/Forms';\nimport type { TableColumn } from '@lib/types/Tables';\nimport { ApiIcon } from '../../components/items/ApiIcon';\nimport {\n  useCreateApiFormModal,\n  useDeleteApiFormModal,\n  useEditApiFormModal\n} from '../../hooks/UseForm';\nimport { useTable } from '../../hooks/UseTable';\nimport { useUserState } from '../../states/UserState';\nimport { DescriptionColumn } from '../ColumnRenderers';\nimport { InvenTreeTable } from '../InvenTreeTable';\n\nexport default function LocationTypesTable() {\n  const table = useTable('location-types');\n  const user = useUserState();\n\n  const formFields: ApiFormFieldSet = useMemo(() => {\n    return {\n      name: {},\n      description: {},\n      icon: {\n        field_type: 'icon'\n      }\n    };\n  }, []);\n\n  const [selectedLocationType, setSelectedLocationType] = useState<number>(0);\n\n  const newLocationType = useCreateApiFormModal({\n    url: ApiEndpoints.stock_location_type_list,\n    title: t`Add Location Type`,\n    fields: useMemo(() => ({ ...formFields }), [formFields]),\n    onFormSuccess: table.refreshTable\n  });\n\n  const editLocationType = useEditApiFormModal({\n    url: ApiEndpoints.stock_location_type_list,\n    pk: selectedLocationType,\n    title: t`Edit Location Type`,\n    fields: useMemo(() => ({ ...formFields }), [formFields]),\n    onFormSuccess: (record: any) => table.updateRecord(record)\n  });\n\n  const deleteLocationType = useDeleteApiFormModal({\n    url: ApiEndpoints.stock_location_type_list,\n    pk: selectedLocationType,\n    title: t`Delete Location Type`,\n    onFormSuccess: table.refreshTable\n  });\n\n  const tableColumns: TableColumn[] = useMemo(() => {\n    return [\n      {\n        accessor: 'icon',\n        title: t`Icon`,\n        sortable: true,\n        render: (value: any) => <ApiIcon name={value.icon} />\n      },\n      {\n        accessor: 'name',\n        title: t`Name`,\n        sortable: true\n      },\n      DescriptionColumn({}),\n      {\n        accessor: 'location_count',\n        sortable: true\n      }\n    ];\n  }, []);\n\n  const rowActions = useCallback(\n    (record: any): RowAction[] => {\n      return [\n        RowEditAction({\n          hidden: !user.hasChangeRole(UserRoles.stock_location),\n          onClick: () => {\n            setSelectedLocationType(record.pk);\n            editLocationType.open();\n          }\n        }),\n        RowDeleteAction({\n          hidden: !user.hasDeleteRole(UserRoles.stock_location),\n          onClick: () => {\n            setSelectedLocationType(record.pk);\n            deleteLocationType.open();\n          }\n        })\n      ];\n    },\n    [user]\n  );\n\n  const tableActions = useMemo(() => {\n    return [\n      <AddItemButton\n        key='add-location-type'\n        tooltip={t`Add Location Type`}\n        onClick={() => newLocationType.open()}\n        hidden={!user.hasAddRole(UserRoles.stock_location)}\n      />\n    ];\n  }, [user]);\n\n  return (\n    <>\n      {newLocationType.modal}\n      {editLocationType.modal}\n      {deleteLocationType.modal}\n      <InvenTreeTable\n        url={apiUrl(ApiEndpoints.stock_location_type_list)}\n        tableState={table}\n        columns={tableColumns}\n        props={{\n          rowActions: rowActions,\n          tableActions: tableActions\n        }}\n      />\n    </>\n  );\n}\n"],"names":["LocationTypesTable","table","useTable","user","useUserState","formFields","useMemo","name","description","icon","field_type","selectedLocationType","setSelectedLocationType","useState","newLocationType","useCreateApiFormModal","url","ApiEndpoints","stock_location_type_list","title","_i18n","_","id","fields","onFormSuccess","refreshTable","editLocationType","useEditApiFormModal","pk","record","updateRecord","deleteLocationType","useDeleteApiFormModal","tableColumns","accessor","sortable","render","value","ApiIcon","DescriptionColumn","rowActions","useCallback","RowEditAction","hidden","hasChangeRole","UserRoles","stock_location","onClick","open","RowDeleteAction","hasDeleteRole","tableActions","jsx","AddItemButton","hasAddRole","jsxs","Fragment","modal","InvenTreeTable","apiUrl"],"mappings":"ujBAyBA,SAAwBA,GAAqB,CAC3C,MAAMC,EAAQC,EAAS,gBAAgB,EACjCC,EAAOC,EAAAA,EAEPC,EAA8BC,EAAAA,QAAQ,KACnC,CACLC,KAAM,CAAA,EACNC,YAAa,CAAA,EACbC,KAAM,CACJC,WAAY,MAAA,CACd,GAED,CAAA,CAAE,EAEC,CAACC,EAAsBC,CAAuB,EAAIC,EAAAA,SAAiB,CAAC,EAEpEC,EAAkBC,EAAsB,CAC5CC,IAAKC,EAAaC,yBAClBC,MAAKC,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAmB,EAC1BC,OAAQjB,EAAAA,QAAQ,KAAO,CAAE,GAAGD,CAAAA,GAAe,CAACA,CAAU,CAAC,EACvDmB,cAAevB,EAAMwB,YAAAA,CACtB,EAEKC,EAAmBC,EAAoB,CAC3CX,IAAKC,EAAaC,yBAClBU,GAAIjB,EACJQ,MAAKC,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAoB,EAC3BC,OAAQjB,EAAAA,QAAQ,KAAO,CAAE,GAAGD,CAAAA,GAAe,CAACA,CAAU,CAAC,EACvDmB,cAAgBK,GAAgB5B,EAAM6B,aAAaD,CAAM,CAAA,CAC1D,EAEKE,EAAqBC,EAAsB,CAC/ChB,IAAKC,EAAaC,yBAClBU,GAAIjB,EACJQ,MAAKC,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAsB,EAC7BE,cAAevB,EAAMwB,YAAAA,CACtB,EAEKQ,EAA8B3B,EAAAA,QAAQ,IACnC,CACL,CACE4B,SAAU,OACVf,MAAKC,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAM,EACba,SAAU,GACVC,OAASC,SAAgBC,EAAA,CAAQ,KAAMD,EAAM5B,IAAAA,CAAK,CAAA,EAEpD,CACEyB,SAAU,OACVf,MAAKC,EAAAC,EAAE,CAAAC,GAAA,QAAA,CAAM,EACba,SAAU,EAAA,EAEZI,EAAkB,CAAA,CAAE,EACpB,CACEL,SAAU,iBACVC,SAAU,EAAA,CACX,EAEF,CAAA,CAAE,EAECK,EAAaC,cAChBZ,GACQ,CACLa,EAAc,CACZC,OAAQ,CAACxC,EAAKyC,cAAcC,EAAUC,cAAc,EACpDC,QAASA,IAAM,CACbnC,EAAwBiB,EAAOD,EAAE,EACjCF,EAAiBsB,KAAAA,CACnB,CAAA,CACD,EACDC,EAAgB,CACdN,OAAQ,CAACxC,EAAK+C,cAAcL,EAAUC,cAAc,EACpDC,QAASA,IAAM,CACbnC,EAAwBiB,EAAOD,EAAE,EACjCG,EAAmBiB,KAAAA,CACrB,CAAA,CACD,CAAC,EAGN,CAAC7C,CAAI,CACP,EAEMgD,EAAe7C,EAAAA,QAAQ,IACpB,CACL8C,EAAAA,IAACC,EAAA,CAEC,QAAQjC,EAAAC,EAAC,CAAAC,GAAA,QAAA,CAAmB,EAC5B,QAAS,IAAMR,EAAgBkC,OAC/B,OAAQ,CAAC7C,EAAKmD,WAAWT,EAAUC,cAAc,CAAA,EAH7C,mBAG+C,CACnD,EAEH,CAAC3C,CAAI,CAAC,EAET,OACEoD,EAAAA,KAAAC,WAAA,CACG1C,SAAAA,CAAAA,EAAgB2C,MAChB/B,EAAiB+B,MACjB1B,EAAmB0B,MACpBL,EAAAA,IAACM,EAAA,CACC,IAAKC,EAAO1C,EAAaC,wBAAwB,EACjD,WAAYjB,EACZ,QAASgC,EACT,MAAO,CACLO,WAAAA,EACAW,aAAAA,CAAAA,CACF,CAAE,CAAA,EAEN,CAEJ"}