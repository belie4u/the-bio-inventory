{"version":3,"file":"PartParameterPanel-BCBuxRpJ.js","sources":["../../../../../../frontend/src/tables/part/PartParameterTemplateTable.tsx","../../../../../../frontend/src/forms/selectionListFields.tsx","../../../../../../frontend/src/tables/part/SelectionListTable.tsx","../../../../../../frontend/src/pages/Index/Settings/AdminCenter/PartParameterPanel.tsx"],"sourcesContent":["import { t } from '@lingui/core/macro';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { AddItemButton } from '@lib/components/AddItemButton';\nimport {\n  type RowAction,\n  RowDeleteAction,\n  RowDuplicateAction,\n  RowEditAction\n} from '@lib/components/RowActions';\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { UserRoles } from '@lib/enums/Roles';\nimport { apiUrl } from '@lib/functions/Api';\nimport type { TableFilter } from '@lib/types/Filters';\nimport type { ApiFormFieldSet } from '@lib/types/Forms';\nimport type { TableColumn } from '@lib/types/Tables';\nimport {\n  useCreateApiFormModal,\n  useDeleteApiFormModal,\n  useEditApiFormModal\n} from '../../hooks/UseForm';\nimport { useTable } from '../../hooks/UseTable';\nimport { useUserState } from '../../states/UserState';\nimport { BooleanColumn, DescriptionColumn } from '../ColumnRenderers';\nimport { InvenTreeTable } from '../InvenTreeTable';\n\nexport default function PartParameterTemplateTable() {\n  const table = useTable('part-parameter-templates');\n\n  const user = useUserState();\n\n  const tableFilters: TableFilter[] = useMemo(() => {\n    return [\n      {\n        name: 'checkbox',\n        label: t`Checkbox`,\n        description: t`Show checkbox templates`\n      },\n      {\n        name: 'has_choices',\n        label: t`Has choices`,\n        description: t`Show templates with choices`\n      },\n      {\n        name: 'has_units',\n        label: t`Has Units`,\n        description: t`Show templates with units`\n      }\n    ];\n  }, []);\n\n  const tableColumns: TableColumn[] = useMemo(() => {\n    return [\n      {\n        accessor: 'name',\n        sortable: true,\n        switchable: false\n      },\n      {\n        accessor: 'parts',\n        sortable: true,\n        switchable: true\n      },\n      {\n        accessor: 'units',\n        sortable: true\n      },\n      DescriptionColumn({}),\n      BooleanColumn({\n        accessor: 'checkbox'\n      }),\n      {\n        accessor: 'choices'\n      }\n    ];\n  }, []);\n\n  const partParameterTemplateFields: ApiFormFieldSet = useMemo(() => {\n    return {\n      name: {},\n      description: {},\n      units: {},\n      choices: {},\n      checkbox: {},\n      selectionlist: {}\n    };\n  }, []);\n\n  const newTemplate = useCreateApiFormModal({\n    url: ApiEndpoints.part_parameter_template_list,\n    title: t`Add Parameter Template`,\n    table: table,\n    fields: useMemo(\n      () => ({ ...partParameterTemplateFields }),\n      [partParameterTemplateFields]\n    )\n  });\n\n  const [selectedTemplate, setSelectedTemplate] = useState<any | undefined>(\n    undefined\n  );\n\n  const duplicateTemplate = useCreateApiFormModal({\n    url: ApiEndpoints.part_parameter_template_list,\n    title: t`Duplicate Parameter Template`,\n    table: table,\n    fields: useMemo(\n      () => ({ ...partParameterTemplateFields }),\n      [partParameterTemplateFields]\n    ),\n    initialData: selectedTemplate\n  });\n\n  const editTemplate = useEditApiFormModal({\n    url: ApiEndpoints.part_parameter_template_list,\n    pk: selectedTemplate?.pk,\n    title: t`Edit Parameter Template`,\n    table: table,\n    fields: useMemo(\n      () => ({ ...partParameterTemplateFields }),\n      [partParameterTemplateFields]\n    )\n  });\n\n  const deleteTemplate = useDeleteApiFormModal({\n    url: ApiEndpoints.part_parameter_template_list,\n    pk: selectedTemplate?.pk,\n    title: t`Delete Parameter Template`,\n    table: table\n  });\n\n  // Callback for row actions\n  const rowActions = useCallback(\n    (record: any): RowAction[] => {\n      return [\n        RowEditAction({\n          hidden: !user.hasChangeRole(UserRoles.part),\n          onClick: () => {\n            setSelectedTemplate(record);\n            editTemplate.open();\n          }\n        }),\n        RowDuplicateAction({\n          hidden: !user.hasAddRole(UserRoles.part),\n          onClick: () => {\n            setSelectedTemplate(record);\n            duplicateTemplate.open();\n          }\n        }),\n        RowDeleteAction({\n          hidden: !user.hasDeleteRole(UserRoles.part),\n          onClick: () => {\n            setSelectedTemplate(record);\n            deleteTemplate.open();\n          }\n        })\n      ];\n    },\n    [user]\n  );\n\n  const tableActions = useMemo(() => {\n    return [\n      <AddItemButton\n        key='add'\n        tooltip={t`Add Parameter Template`}\n        onClick={() => newTemplate.open()}\n        hidden={!user.hasAddRole(UserRoles.part)}\n      />\n    ];\n  }, [user]);\n\n  return (\n    <>\n      {newTemplate.modal}\n      {editTemplate.modal}\n      {duplicateTemplate.modal}\n      {deleteTemplate.modal}\n      <InvenTreeTable\n        url={apiUrl(ApiEndpoints.part_parameter_template_list)}\n        tableState={table}\n        columns={tableColumns}\n        props={{\n          rowActions: rowActions,\n          tableFilters: tableFilters,\n          tableActions: tableActions,\n          enableDownload: true\n        }}\n      />\n    </>\n  );\n}\n","import { t } from '@lingui/core/macro';\nimport { Table } from '@mantine/core';\nimport { useMemo } from 'react';\n\nimport RemoveRowButton from '../components/buttons/RemoveRowButton';\nimport { StandaloneField } from '../components/forms/StandaloneField';\n\nimport type { ApiFormFieldSet, ApiFormFieldType } from '@lib/types/Forms';\nimport type { TableFieldRowProps } from '../components/forms/fields/TableField';\n\nfunction BuildAllocateLineRow({\n  props\n}: Readonly<{\n  props: TableFieldRowProps;\n}>) {\n  const valueField: ApiFormFieldType = useMemo(() => {\n    return {\n      field_type: 'string',\n      name: 'value',\n      required: true,\n      value: props.item.value,\n      onValueChange: (value: any) => {\n        props.changeFn(props.idx, 'value', value);\n      }\n    };\n  }, [props]);\n\n  const labelField: ApiFormFieldType = useMemo(() => {\n    return {\n      field_type: 'string',\n      name: 'label',\n      required: true,\n      value: props.item.label,\n      onValueChange: (value: any) => {\n        props.changeFn(props.idx, 'label', value);\n      }\n    };\n  }, [props]);\n\n  const descriptionField: ApiFormFieldType = useMemo(() => {\n    return {\n      field_type: 'string',\n      name: 'description',\n      required: true,\n      value: props.item.description,\n      onValueChange: (value: any) => {\n        props.changeFn(props.idx, 'description', value);\n      }\n    };\n  }, [props]);\n\n  const activeField: ApiFormFieldType = useMemo(() => {\n    return {\n      field_type: 'boolean',\n      name: 'active',\n      required: true,\n      value: props.item.active,\n      onValueChange: (value: any) => {\n        props.changeFn(props.idx, 'active', value);\n      }\n    };\n  }, [props]);\n\n  return (\n    <Table.Tr key={`table-row-${props.item.pk}`}>\n      <Table.Td>\n        <StandaloneField fieldName='value' fieldDefinition={valueField} />\n      </Table.Td>\n      <Table.Td>\n        <StandaloneField fieldName='label' fieldDefinition={labelField} />\n      </Table.Td>\n      <Table.Td>\n        <StandaloneField\n          fieldName='description'\n          fieldDefinition={descriptionField}\n        />\n      </Table.Td>\n      <Table.Td>\n        <StandaloneField fieldName='active' fieldDefinition={activeField} />\n      </Table.Td>\n      <Table.Td>\n        <RemoveRowButton onClick={() => props.removeFn(props.idx)} />\n      </Table.Td>\n    </Table.Tr>\n  );\n}\n\nexport function selectionListFields(): ApiFormFieldSet {\n  return {\n    name: {},\n    description: {},\n    active: {},\n    locked: {},\n    source_plugin: {},\n    source_string: {},\n    choices: {\n      label: t`Entries`,\n      description: t`List of entries to choose from`,\n      field_type: 'table',\n      value: [],\n      headers: [\n        { title: t`Value` },\n        { title: t`Label` },\n        { title: t`Description` },\n        { title: t`Active` }\n      ],\n      modelRenderer: (row: TableFieldRowProps) => (\n        <BuildAllocateLineRow props={row} />\n      ),\n      addRow: () => {\n        return {\n          value: '',\n          label: '',\n          description: '',\n          active: true\n        };\n      }\n    }\n  };\n}\n","import { t } from '@lingui/core/macro';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { AddItemButton } from '@lib/components/AddItemButton';\nimport {\n  type RowAction,\n  RowDeleteAction,\n  RowEditAction\n} from '@lib/components/RowActions';\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { UserRoles } from '@lib/enums/Roles';\nimport { apiUrl } from '@lib/functions/Api';\nimport type { TableColumn } from '@lib/types/Tables';\nimport { selectionListFields } from '../../forms/selectionListFields';\nimport {\n  useCreateApiFormModal,\n  useDeleteApiFormModal,\n  useEditApiFormModal\n} from '../../hooks/UseForm';\nimport { useTable } from '../../hooks/UseTable';\nimport { useUserState } from '../../states/UserState';\nimport { BooleanColumn, DescriptionColumn } from '../ColumnRenderers';\nimport { InvenTreeTable } from '../InvenTreeTable';\n\n/**\n * Table for displaying list of selectionlist items\n */\nexport default function SelectionListTable() {\n  const table = useTable('selectionlist');\n\n  const user = useUserState();\n\n  const columns: TableColumn[] = useMemo(() => {\n    return [\n      {\n        accessor: 'name',\n        sortable: true\n      },\n      DescriptionColumn({\n        sortable: true\n      }),\n      BooleanColumn({\n        accessor: 'active'\n      }),\n      BooleanColumn({\n        accessor: 'locked'\n      }),\n      {\n        accessor: 'source_plugin',\n        sortable: true\n      },\n      {\n        accessor: 'source_string',\n        sortable: true\n      },\n      {\n        accessor: 'entry_count'\n      }\n    ];\n  }, []);\n\n  const newSelectionList = useCreateApiFormModal({\n    url: ApiEndpoints.selectionlist_list,\n    title: t`Add Selection List`,\n    fields: selectionListFields(),\n    table: table\n  });\n\n  const [selectedSelectionList, setSelectedSelectionList] = useState<\n    number | undefined\n  >(undefined);\n\n  const editSelectionList = useEditApiFormModal({\n    url: ApiEndpoints.selectionlist_list,\n    pk: selectedSelectionList,\n    title: t`Edit Selection List`,\n    fields: selectionListFields(),\n    table: table\n  });\n\n  const deleteSelectionList = useDeleteApiFormModal({\n    url: ApiEndpoints.selectionlist_list,\n    pk: selectedSelectionList,\n    title: t`Delete Selection List`,\n    table: table\n  });\n\n  const rowActions = useCallback(\n    (record: any): RowAction[] => {\n      return [\n        RowEditAction({\n          hidden: !user.hasChangeRole(UserRoles.admin),\n          onClick: () => {\n            setSelectedSelectionList(record.pk);\n            editSelectionList.open();\n          }\n        }),\n        RowDeleteAction({\n          hidden: !user.hasDeleteRole(UserRoles.admin),\n          onClick: () => {\n            setSelectedSelectionList(record.pk);\n            deleteSelectionList.open();\n          }\n        })\n      ];\n    },\n    [user]\n  );\n\n  const tableActions = useMemo(() => {\n    return [\n      <AddItemButton\n        key='add-selection-list'\n        onClick={() => newSelectionList.open()}\n        tooltip={t`Add Selection List`}\n      />\n    ];\n  }, []);\n\n  return (\n    <>\n      {newSelectionList.modal}\n      {editSelectionList.modal}\n      {deleteSelectionList.modal}\n      <InvenTreeTable\n        url={apiUrl(ApiEndpoints.selectionlist_list)}\n        tableState={table}\n        columns={columns}\n        props={{\n          rowActions: rowActions,\n          tableActions: tableActions,\n          enableDownload: true\n        }}\n      />\n    </>\n  );\n}\n","import { t } from '@lingui/core/macro';\nimport { Accordion } from '@mantine/core';\n\nimport { StylishText } from '../../../../components/items/StylishText';\nimport PartParameterTemplateTable from '../../../../tables/part/PartParameterTemplateTable';\nimport SelectionListTable from '../../../../tables/part/SelectionListTable';\n\nexport default function PartParameterPanel() {\n  return (\n    <Accordion defaultValue='parametertemplate'>\n      <Accordion.Item value='parametertemplate' key='parametertemplate'>\n        <Accordion.Control>\n          <StylishText size='lg'>{t`Part Parameter Template`}</StylishText>\n        </Accordion.Control>\n        <Accordion.Panel>\n          <PartParameterTemplateTable />\n        </Accordion.Panel>\n      </Accordion.Item>\n      <Accordion.Item value='selectionlist' key='selectionlist'>\n        <Accordion.Control>\n          <StylishText size='lg'>{t`Selection Lists`}</StylishText>\n        </Accordion.Control>\n        <Accordion.Panel>\n          <SelectionListTable />\n        </Accordion.Panel>\n      </Accordion.Item>\n    </Accordion>\n  );\n}\n"],"names":["PartParameterTemplateTable","table","useTable","user","useUserState","tableFilters","useMemo","name","label","_i18n","_","id","description","tableColumns","accessor","sortable","switchable","DescriptionColumn","BooleanColumn","partParameterTemplateFields","units","choices","checkbox","selectionlist","newTemplate","useCreateApiFormModal","url","ApiEndpoints","part_parameter_template_list","title","fields","selectedTemplate","setSelectedTemplate","useState","undefined","duplicateTemplate","initialData","editTemplate","useEditApiFormModal","pk","deleteTemplate","useDeleteApiFormModal","rowActions","useCallback","record","RowEditAction","hidden","hasChangeRole","UserRoles","part","onClick","open","RowDuplicateAction","hasAddRole","RowDeleteAction","hasDeleteRole","tableActions","jsx","AddItemButton","jsxs","Fragment","modal","InvenTreeTable","apiUrl","enableDownload","BuildAllocateLineRow","props","valueField","field_type","required","value","item","onValueChange","changeFn","idx","labelField","descriptionField","activeField","active","Table","StandaloneField","RemoveRowButton","removeFn","selectionListFields","locked","source_plugin","source_string","headers","modelRenderer","row","addRow","SelectionListTable","columns","newSelectionList","selectionlist_list","selectedSelectionList","setSelectedSelectionList","editSelectionList","deleteSelectionList","admin","PartParameterPanel","Accordion","StylishText"],"mappings":"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"}