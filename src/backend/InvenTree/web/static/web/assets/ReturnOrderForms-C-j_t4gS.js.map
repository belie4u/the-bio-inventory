{"version":3,"file":"ReturnOrderForms-C-j_t4gS.js","sources":["../../../../../../frontend/src/forms/ReturnOrderForms.tsx"],"sourcesContent":["import { t } from '@lingui/core/macro';\nimport { Flex, Table } from '@mantine/core';\nimport {\n  IconAddressBook,\n  IconCalendar,\n  IconUser,\n  IconUsers\n} from '@tabler/icons-react';\nimport { useMemo } from 'react';\n\nimport { ApiEndpoints } from '@lib/enums/ApiEndpoints';\nimport { ModelType } from '@lib/enums/ModelType';\nimport RemoveRowButton from '../components/buttons/RemoveRowButton';\nimport { StandaloneField } from '../components/forms/StandaloneField';\n\nimport { apiUrl } from '@lib/functions/Api';\nimport type {\n  ApiFormAdjustFilterType,\n  ApiFormFieldSet\n} from '@lib/types/Forms';\nimport type { TableFieldRowProps } from '../components/forms/fields/TableField';\nimport { Thumbnail } from '../components/images/Thumbnail';\nimport { useCreateApiFormModal } from '../hooks/UseForm';\nimport { useGlobalSettingsState } from '../states/SettingsStates';\nimport { StatusFilterOptions } from '../tables/Filter';\n\nexport function useReturnOrderFields({\n  duplicateOrderId\n}: {\n  duplicateOrderId?: number;\n}): ApiFormFieldSet {\n  const globalSettings = useGlobalSettingsState();\n\n  return useMemo(() => {\n    const fields: ApiFormFieldSet = {\n      reference: {},\n      description: {},\n      customer: {\n        disabled: duplicateOrderId != undefined,\n        filters: {\n          is_customer: true,\n          active: true\n        }\n      },\n      customer_reference: {},\n      project_code: {},\n      order_currency: {},\n      start_date: {\n        icon: <IconCalendar />\n      },\n      target_date: {\n        icon: <IconCalendar />\n      },\n      link: {},\n      contact: {\n        icon: <IconUser />,\n        adjustFilters: (value: ApiFormAdjustFilterType) => {\n          return {\n            ...value.filters,\n            company: value.data.customer\n          };\n        }\n      },\n      address: {\n        icon: <IconAddressBook />,\n        adjustFilters: (value: ApiFormAdjustFilterType) => {\n          return {\n            ...value.filters,\n            company: value.data.customer\n          };\n        }\n      },\n      responsible: {\n        filters: {\n          is_active: true\n        },\n        icon: <IconUsers />\n      }\n    };\n\n    // Order duplication fields\n    if (!!duplicateOrderId) {\n      fields.duplicate = {\n        children: {\n          order_id: {\n            hidden: true,\n            value: duplicateOrderId\n          },\n          copy_lines: {\n            // Cannot duplicate lines from a return order!\n            value: false,\n            hidden: true\n          },\n          copy_extra_lines: {}\n        }\n      };\n    }\n\n    if (!globalSettings.isSet('PROJECT_CODES_ENABLED', true)) {\n      delete fields.project_code;\n    }\n\n    return fields;\n  }, [duplicateOrderId, globalSettings]);\n}\n\nexport function useReturnOrderLineItemFields({\n  orderId,\n  customerId,\n  create\n}: {\n  orderId: number;\n  customerId: number;\n  create?: boolean;\n}) {\n  return useMemo(() => {\n    return {\n      order: {\n        disabled: true,\n        filters: {\n          customer_detail: true\n        }\n      },\n      item: {\n        filters: {\n          customer: customerId,\n          part_detail: true\n        }\n      },\n      quantity: {},\n      reference: {},\n      outcome: {\n        hidden: create == true\n      },\n      price: {},\n      price_currency: {},\n      target_date: {},\n      notes: {},\n      link: {}\n    };\n  }, [create, orderId, customerId]);\n}\n\ntype ReturnOrderLineItemsProps = {\n  items: any[];\n  orderId: number;\n  onFormSuccess: (data: any) => void;\n};\n\nfunction ReturnOrderLineItemFormRow({\n  props,\n  record\n}: Readonly<{\n  props: TableFieldRowProps;\n  record: any;\n}>) {\n  const statusOptions = useMemo(() => {\n    return (\n      StatusFilterOptions(ModelType.stockitem)()?.map((choice) => {\n        return {\n          value: choice.value,\n          display_name: choice.label\n        };\n      }) ?? []\n    );\n  }, []);\n\n  const quantityDisplay = useMemo(() => {\n    if (record.item_detail?.serial && record.quantity == 1) {\n      return `# ${record.item_detail.serial}`;\n    } else {\n      return record.quantity;\n    }\n  }, [record.quantity, record.item_detail]);\n\n  return (\n    <>\n      <Table.Tr>\n        <Table.Td>\n          <Flex gap='sm' align='center'>\n            <Thumbnail\n              size={40}\n              src={record.part_detail.thumbnail}\n              align='center'\n            />\n            <div>{record.part_detail.name}</div>\n          </Flex>\n        </Table.Td>\n        <Table.Td>{quantityDisplay}</Table.Td>\n        <Table.Td>\n          <StandaloneField\n            fieldDefinition={{\n              field_type: 'choice',\n              label: t`Status`,\n              choices: statusOptions,\n              onValueChange: (value) => {\n                props.changeFn(props.idx, 'status', value);\n              }\n            }}\n            defaultValue={record.item_detail?.status}\n            error={props.rowErrors?.status?.message}\n          />\n        </Table.Td>\n        <Table.Td>\n          <RemoveRowButton onClick={() => props.removeFn(props.idx)} />\n        </Table.Td>\n      </Table.Tr>\n    </>\n  );\n}\n\nexport function useReceiveReturnOrderLineItems(\n  props: ReturnOrderLineItemsProps\n) {\n  const fields: ApiFormFieldSet = {\n    id: {\n      value: props.orderId,\n      hidden: true\n    },\n    items: {\n      field_type: 'table',\n      value: props.items.map((item: any) => {\n        return {\n          item: item.pk\n        };\n      }),\n      modelRenderer: (row: TableFieldRowProps) => {\n        const record = props.items.find((item) => item.pk == row?.item?.item);\n\n        return (\n          <ReturnOrderLineItemFormRow\n            props={row}\n            record={record}\n            key={record.pk}\n          />\n        );\n      },\n      headers: [\n        { title: t`Part`, style: { minWidth: '250px' } },\n        { title: t`Quantity`, style: { minWidth: '250px' } },\n        { title: t`Status`, style: { minWidth: '250px' } },\n        { title: '', style: { width: '50px' } }\n      ]\n    },\n    location: {\n      filters: {\n        structural: false\n      }\n    }\n  };\n\n  return useCreateApiFormModal({\n    url: apiUrl(ApiEndpoints.return_order_receive, props.orderId),\n    title: t`Receive Items`,\n    fields: fields,\n    initialData: {\n      location: null\n    },\n    size: '80%',\n    onFormSuccess: props.onFormSuccess,\n    successMessage: t`Item received into stock`\n  });\n}\n"],"names":["useReturnOrderFields","duplicateOrderId","globalSettings","useGlobalSettingsState","useMemo","fields","reference","description","customer","disabled","undefined","filters","is_customer","active","customer_reference","project_code","order_currency","start_date","icon","IconCalendar","target_date","link","contact","IconUser","adjustFilters","value","company","data","address","IconAddressBook","responsible","is_active","IconUsers","duplicate","children","order_id","hidden","copy_lines","copy_extra_lines","isSet","useReturnOrderLineItemFields","orderId","customerId","create","order","customer_detail","item","part_detail","quantity","outcome","price","price_currency","notes","ReturnOrderLineItemFormRow","props","record","statusOptions","StatusFilterOptions","ModelType","stockitem","map","choice","display_name","label","quantityDisplay","item_detail","serial","jsx","Fragment","jsxs","Table","Flex","Thumbnail","thumbnail","name","StandaloneField","field_type","_i18n","_","id","choices","onValueChange","changeFn","idx","status","rowErrors","message","RemoveRowButton","removeFn","useReceiveReturnOrderLineItems","items","pk","modelRenderer","row","find","headers","title","style","minWidth","width","location","structural","useCreateApiFormModal","url","apiUrl","ApiEndpoints","return_order_receive","initialData","size","onFormSuccess","successMessage"],"mappings":"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"}